
 make.py started: 2020-03-25 16:58:49 C:\Users\gabriel\Dropbox (Brown)\research\min_wage_rent\base\code 




Execute:  R CMD BATCH --no-save "./RenameZillowVars_zipLevel.R" RenameZillowVars_zipLevel.Rout

R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> remove(list = ls())
> source("../../lib/R/load_packages.R")
> source("../../lib/R/save_data.R")

Please cite as: 

 Hlavac, Marek (2018). stargazer: Well-Formatted Regression and Summary Statistics Tables.
 R package version 5.2.2. https://CRAN.R-project.org/package=stargazer 


Attaching package: 'dplyr'

The following objects are masked from 'package:stats':

    filter, lag

The following objects are masked from 'package:base':

    intersect, setdiff, setequal, union


Attaching package: 'data.table'

The following objects are masked from 'package:dplyr':

    between, first, last

Warning message:
package 'dplyr' was built under R version 3.6.2 
> 
> load_packages(c('tidyverse', 'data.table'))
-- Attaching packages --------------------------------------- tidyverse 1.3.0 --
v ggplot2 3.2.1     v purrr   0.3.3
v tibble  2.1.3     v stringr 1.4.0
v tidyr   1.0.0     v forcats 0.4.0
v readr   1.3.1     
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x data.table::between() masks dplyr::between()
x dplyr::filter()       masks stats::filter()
x data.table::first()   masks dplyr::first()
x dplyr::lag()          masks stats::lag()
x data.table::last()    masks dplyr::last()
x purrr::transpose()    masks data.table::transpose()
Warning messages:
1: package 'tidyverse' was built under R version 3.6.2 
2: package 'ggplot2' was built under R version 3.6.2 
3: package 'tidyr' was built under R version 3.6.2 
4: package 'purrr' was built under R version 3.6.2 
> 
> main <- function() {
+    
+    datadir   <- '../../drive/raw_data/zillow/'
+    outputdir <- "../output/"
+    geounit   <- "Zip"
+ 
+    last_period <- "122019"
+    
+    rename_zillow_vars(infiles = paste0(datadir, geounit, "_", last_period, "/"), 
+                       outdir = outputdir)
+ }
> 
> rename_zillow_vars <- function(infiles, outdir){
+    filenames <- list.files(infiles)
+    filenames <- filenames[str_detect(filenames, "^Zip_*")]
+    filenames <- filenames[!str_detect(filenames, "_Summary.csv")]
+ 
+    format <- lapply(filenames, function(x) {
+       df <- data.table::fread(paste0(infiles, x), stringsAsFactors = F)
+       df[,c("DataTypeDescription", "SizeRank", "RegionType"):=NULL]
+       
+       colgeonames <- colnames(df)
+       colgeonames <- colgeonames[!str_detect(colgeonames, "[0-9]")]
+       
+       colgeo_type1 <- c("RegionName", "City", "CountyName", "Metro", "StateFullName")
+       colgeo_type2 <- c("RegionID", "RegionName", "City", "County", "State", "Metro")
+       colgeo_type3 <- c("RegionName", "City", "State", "Metro", "CountyName")
+       colgeo_type4 <- c("RegionID", "RegionName", "City", "State", "Metro", "CountyName")
+       colgeo_type5 <- c("RegionID", "RegionName", "City", "County", "State", "Metro")
+       
+       if (identical(colgeonames,colgeo_type1)) {
+          newgeonames <- c("zipcode", "city", "county", "msa", "statename")
+          data.table::setnames(df, old = colgeonames, 
+                               new = newgeonames)
+          df[, county := str_replace_all(county, " County", "")]
+ 
+          save_data(df = df, key = newgeonames,
+                    filename = paste0(outdir, x))
+       } else if (identical(colgeonames,colgeo_type2)) {
+          newgeonames <- c("old_id", "zipcode", "city", "county", "stateabb", "msa")
+          data.table::setnames(df, old = colgeonames, 
+                               new = newgeonames)
+          df[, county := str_replace_all(county, " County", "")]
+          df[,old_id := NULL]
+          newgeonames <- newgeonames[-1]
+          
+          save_data(df = df, key = newgeonames,
+                    filename = paste0(outdir, x))
+       } else if (identical(colgeonames,colgeo_type3)) {
+          newgeonames <- c("zipcode", "city", "stateabb", "msa", "county")
+          data.table::setnames(df, old = colgeonames, 
+                               new = newgeonames)
+          df[, county := str_replace_all(county, " County", "")]
+          
+          save_data(df = df, key = newgeonames,
+                    filename = paste0(outdir, x))
+       } else if (identical(colgeonames,colgeo_type4)) {
+          newgeonames <- c("old_id", "zipcode", "city", "stateabb", "msa", "county")
+          data.table::setnames(df, old = colgeonames, 
+                               new = newgeonames)
+          df[, county := str_replace_all(county, " County", "")]
+          df[,old_id := NULL]
+          newgeonames <- newgeonames[-1]
+          
+          save_data(df = df, key = newgeonames,
+                    filename = paste0(outdir, x))
+       } else if (identical(colgeonames,colgeo_type5)) {
+          newgeonames <- c("old_id", "zipcode", "city", "county", "stateabb", "msa")
+          data.table::setnames(df, old = colgeonames, 
+                               new = newgeonames)
+          df[, county := str_replace_all(county, " County", "")]
+          df[,old_id := NULL]
+          newgeonames <- newgeonames[-1]
+          
+          save_data(df = df, key = newgeonames,
+                    filename = paste0(outdir, x))
+       }
+    })
+ }
> 
> main()
[1] "File '../output/Zip_MedianListingPrice_AllHomes.csv' saved successfully."
[1] "File '../output/Zip_MedianListingPrice_BottomTier.csv' saved successfully."
[1] "File '../output/Zip_MedianListingPrice_TopTier.csv' saved successfully."
[1] "File '../output/Zip_MedianListingPricePerSqft_AllHomes.csv' saved successfully."
[1] "File '../output/Zip_MedianListingPricePerSqft_BottomTier.csv' saved successfully."
[1] "File '../output/Zip_MedianListingPricePerSqft_TopTier.csv' saved successfully."
[1] "File '../output/Zip_MedianRentalPrice_1Bedroom.csv' saved successfully."
[1] "File '../output/Zip_MedianRentalPrice_2Bedroom.csv' saved successfully."
[1] "File '../output/Zip_MedianRentalPrice_3Bedroom.csv' saved successfully."
[1] "File '../output/Zip_MedianRentalPrice_4Bedroom.csv' saved successfully."
[1] "File '../output/Zip_MedianRentalPrice_5BedroomOrMore.csv' saved successfully."
[1] "File '../output/Zip_MedianRentalPrice_AllHomes.csv' saved successfully."
[1] "File '../output/Zip_MedianRentalPrice_CondoCoop.csv' saved successfully."
[1] "File '../output/Zip_MedianRentalPrice_DuplexTriplex.csv' saved successfully."
[1] "File '../output/Zip_MedianRentalPrice_Mfr5Plus.csv' saved successfully."
[1] "File '../output/Zip_MedianRentalPrice_Sfr.csv' saved successfully."
[1] "File '../output/Zip_MedianRentalPrice_Studio.csv' saved successfully."
[1] "File '../output/Zip_MedianRentalPricePerSqft_1Bedroom.csv' saved successfully."
[1] "File '../output/Zip_MedianRentalPricePerSqft_2Bedroom.csv' saved successfully."
[1] "File '../output/Zip_MedianRentalPricePerSqft_3Bedroom.csv' saved successfully."
[1] "File '../output/Zip_MedianRentalPricePerSqft_4Bedroom.csv' saved successfully."
[1] "File '../output/Zip_MedianRentalPricePerSqft_5BedroomOrMore.csv' saved successfully."
[1] "File '../output/Zip_MedianRentalPricePerSqft_AllHomes.csv' saved successfully."
[1] "File '../output/Zip_MedianRentalPricePerSqft_CondoCoop.csv' saved successfully."
[1] "File '../output/Zip_MedianRentalPricePerSqft_DuplexTriplex.csv' saved successfully."
[1] "File '../output/Zip_MedianRentalPricePerSqft_Mfr5Plus.csv' saved successfully."
[1] "File '../output/Zip_MedianRentalPricePerSqft_Sfr.csv' saved successfully."
[1] "File '../output/Zip_MedianRentalPricePerSqft_Studio.csv' saved successfully."
[1] "File '../output/Zip_Zhvi_2bedroom.csv' saved successfully."
[1] "File '../output/Zip_Zhvi_AllHomes.csv' saved successfully."
[1] "File '../output/Zip_Zhvi_Condominum.csv' saved successfully."
[1] "File '../output/Zip_Zhvi_SingleFamilyResidence.csv' saved successfully."
[1] "File '../output/Zip_Zri_AllHomesPlusMultifamily.csv' saved successfully."
[1] "File '../output/Zip_Zri_MultiFamilyResidenceRental.csv' saved successfully."
There were 50 or more warnings (use warnings() to see the first 50)
> 
> proc.time()
   user  system elapsed 
  80.93    2.26   96.70 


Execute:  R CMD BATCH --no-save "./cleanGeoRelationshipFiles.R" cleanGeoRelationshipFiles.Rout

R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> remove(list = ls())
> source("../../lib/R/load_packages.R")
> source("../../lib/R/save_data.R")

Please cite as: 

 Hlavac, Marek (2018). stargazer: Well-Formatted Regression and Summary Statistics Tables.
 R package version 5.2.2. https://CRAN.R-project.org/package=stargazer 


Attaching package: 'dplyr'

The following objects are masked from 'package:stats':

    filter, lag

The following objects are masked from 'package:base':

    intersect, setdiff, setequal, union


Attaching package: 'data.table'

The following objects are masked from 'package:dplyr':

    between, first, last

Warning message:
package 'dplyr' was built under R version 3.6.2 
> 
> load_packages(c('tidyverse', 'data.table', 'tidycensus', 'bit64'))
-- Attaching packages --------------------------------------- tidyverse 1.3.0 --
v ggplot2 3.2.1     v purrr   0.3.3
v tibble  2.1.3     v stringr 1.4.0
v tidyr   1.0.0     v forcats 0.4.0
v readr   1.3.1     
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x data.table::between() masks dplyr::between()
x dplyr::filter()       masks stats::filter()
x data.table::first()   masks dplyr::first()
x dplyr::lag()          masks stats::lag()
x data.table::last()    masks dplyr::last()
x purrr::transpose()    masks data.table::transpose()
Loading required package: bit
Attaching package bit
package:bit (c) 2008-2012 Jens Oehlschlaegel (GPL-2)
creators: bit bitwhich
coercion: as.logical as.integer as.bit as.bitwhich which
operator: ! & | xor != ==
querying: print length any all min max range sum summary
bit access: length<- [ [<- [[ [[<-
for more help type ?bit

Attaching package: 'bit'

The following object is masked from 'package:data.table':

    setattr

The following object is masked from 'package:base':

    xor

Attaching package bit64
package:bit64 (c) 2011-2012 Jens Oehlschlaegel
creators: integer64 seq :
coercion: as.integer64 as.vector as.logical as.integer as.double as.character as.bin
logical operator: ! & | xor != == < <= >= >
arithmetic operator: + - * / %/% %% ^
math: sign abs sqrt log log2 log10
math: floor ceiling trunc round
querying: is.integer64 is.vector [is.atomic} [length] format print str
values: is.na is.nan is.finite is.infinite
aggregation: any all min max range sum prod
cumulation: diff cummin cummax cumsum cumprod
access: length<- [ [<- [[ [[<-
combine: c rep cbind rbind as.data.frame
WARNING don't use as subscripts
WARNING semantics differ from integer
for more help type ?bit64

Attaching package: 'bit64'

The following object is masked from 'package:bit':

    still.identical

The following objects are masked from 'package:base':

    %in%, :, is.double, match, order, rank

Warning messages:
1: package 'tidyverse' was built under R version 3.6.2 
2: package 'ggplot2' was built under R version 3.6.2 
3: package 'tidyr' was built under R version 3.6.2 
4: package 'purrr' was built under R version 3.6.2 
> 
> main <- function(){
+    
+    datadir   <- '../../drive/raw_data/census/'
+    outputdir <- "../output/"
+    
+    clean_2010census_gazzetter(instub  = paste0(datadir, 'Gaz_places_national.txt'),
+                               outstub = paste0(outputdir, 'places10.csv'),
+                               key     = c('state', 'place'))
+    
+    clean_zip_place_relantionship(instub  = paste0(datadir, 'zcta_place_rel_10.txt'),
+                                  outstub = paste0(outputdir, 'zip_places10.csv'),
+                                  key      = c('state', 'place', 'zipcode'))
+    
+    clean_zip_county_relantionship(instub  = paste0(datadir, 'zcta_county_rel_10.txt'),
+                                   outstub = paste0(outputdir, 'zip_county10.csv'),
+                                   key     = c('state', 'county', 'zipcode'))
+ }
> 
> 
> clean_2010census_gazzetter <- function(instub, outstub, key) {
+    places10 <- fread(instub)
+    
+    places10$ALAND <- as.numeric(places10$ALAND*1e-6)
+    
+    places10 <- places10[USPS!='PR',]                                 
+    places10[ , GEOID:=str_pad(as.character(GEOID), 7, pad = "0")]
+    places10[ , c('state', 'place') := .((substr(GEOID, 1, 2)), (substr(GEOID, 3, 7)))]
+    places10[ , placetype := word(NAME, -1)]
+    places10[ , NAME := gsub("\\s*\\w*$", "", NAME)]
+    
+    setnames(places10, old = c('USPS','NAME', 'POP10', 'ALAND'), 
+                       new = c('stateabb', 'placename', 'placepop10', 'landarea_sqkm'))
+    varplace10 <- c('state', 'stateabb', 'place', 'placename', 'placetype', 'placepop10', 'landarea_sqkm')
+    places10 <- places10[ ,..varplace10]
+    
+    save_data(df = places10, key = key, filename = outstub)
+ }
> 
> 
> clean_zip_place_relantionship <- function(instub, outstub, key) {
+    zctaPlace10 <- fread(instub)
+ 
+    zctaPlace10[ ,c('ZCTA5', 'PLACE'):= .(str_pad(as.character(ZCTA5),5 , pad = "0"), 
+                                         str_pad(as.character(PLACE),5,  pad = "0"))]
+    zctaPlace10[ ,STATE := str_pad(as.character(STATE), 2, pad = "0")]
+    
+    zcta_oldvars <- c('ZCTA5', 'PLACE', 'STATE', 'ZPOP', 'POPPT', 'ZPOPPCT', 'PLPOPPCT', 'ZHU', 'ZHUPCT', 
+                      'PLHU', 'PLHUPCT', 'ZAREALANDPCT')
+    zcta_newvars <- c('zipcode', 'place', 'state', 'zippop10', 'relpop10', 'zippctpop10', 'placepctpop10', 
+                      'ziphouse10', 'zippcthouse10', 'placehouse10', 'placepcthouse10', 'zippctland')
+    
+    setnames(zctaPlace10, old = zcta_oldvars, new = zcta_newvars)
+    zctaPlace10 <- zctaPlace10[,..zcta_newvars]
+    
+    save_data(df = zctaPlace10, key = key, filename = outstub)
+ }
> 
> 
> clean_zip_county_relantionship <- function(instub, outstub, key) {
+    zctaCounty10 <- fread(instub)
+    
+    county_oldvars <- c('ZCTA5', 'STATE', 'COUNTY', 'ZPOPPCT', 'ZHUPCT', 'ZAREALANDPCT')
+    county_newvars <- c('zipcode', 'state', 'county', 'zippctpop10', 'zippcthouse10', 'zippctland')
+    setnames(zctaCounty10, old = county_oldvars, new = county_newvars)
+    zctaCounty10 <- zctaCounty10[ ,..county_newvars]
+    
+    zctaCounty10[, c('county','state') := .(str_pad(as.character(county), 3, pad ="0"), 
+                                            str_pad(as.character(state), 2, pad ="0"))]
+    countyNames <- fips_codes
+    countyNames <- countyNames[, c('state_code', 'county_code', 'county')]
+    countyNames <- setDT(countyNames)
+    
+    setnames(countyNames, old = c('state_code', 'county_code', 'county'), new = c('state', 'county', 'countyname'))
+    zctaCounty10 <- countyNames[zctaCounty10, on = c('state', 'county')]
+    USterritories <- c(60,66,69,72,78)
+    zctaCounty10 <- zctaCounty10[!state %in% USterritories,]
+    
+    save_data(df = zctaCounty10, key = key, filename = outstub)
+ }
> 
> main()
[1] "File '../output/places10.csv' saved successfully."
[1] "File '../output/zip_places10.csv' saved successfully."
[1] "File '../output/zip_county10.csv' saved successfully."
[1] "Log file generated successfully."
> 
> proc.time()
   user  system elapsed 
   5.73    0.84    7.14 


Execute:  StataMP-64 /e do "./state_mw.do"

  ___  ____  ____  ____  ____ (R)
 /__    /   ____/   /   ____/
___/   /   /___/   /   /___/   15.1   Copyright 1985-2017 StataCorp LLC
  Statistics/Data Analysis            StataCorp
                                      4905 Lakeway Drive
     MP - Parallel Edition            College Station, Texas 77845 USA
                                      800-STATA-PC        http://www.stata.com
                                      979-696-4600        stata@stata.com
                                      979-696-4601 (fax)

Single-user 32-core Stata perpetual license:
       Serial number:  501506205566
         Licensed to:  KU Leuven FEB (CES)
                       KU Leuven

Notes:
      1.  Stata is running in batch mode.
      2.  Unicode is supported; see help unicode_advice.
      3.  More than 2 billion observations are allowed; see help obs_advice.
      4.  Maximum number of variables is set to 5000; see help set_maxvar.

. do ./state_mw.do 

. set more off

. clear all

. adopath + ../../lib/stata/gslab_misc/ado
  [1]  (BASE)      "C:\Program Files (x86)\Stata15\ado\base/"
  [2]  (SITE)      "C:\Program Files (x86)\Stata15\ado\site/"
  [3]              "."
  [4]  (PERSONAL)  "c:\ado\personal/"
  [5]  (PLUS)      "c:\ado\plus/"
  [6]  (OLDPLACE)  "c:\ado/"
  [7]              "../../lib/stata/gslab_misc/ado"

. 
. program main
  1.         local raw "../../drive/raw_data/min_wage"
  2.         local exports "../output"
  3.         local temp "../temp"
  4. 
.         import_crosswalk, instub(`raw') outstub(`temp')
  5.         local fips = r(fips)
  6. 
.         fed_min_wage_change, instub(`raw') outstub(`exports') 
  7.         add_state_to_fedmw,  fips("`fips'") outstub(`temp')
  8.         state_min_wage_change, instub(`raw') outstub(`exports') temp(`temp
> ')
  9.         
.         prepare_finaldata, begindate(01may1974) finaldate(31dec2019)         
>   ///
>                                            outstub(`temp') temp(`temp')
 10.         
. 
.         local mw_list "fed_mw mw"
 11.         export_state_daily,     instub(`temp') outstub(`exports') target_m
> w(`mw_list')
 12.         export_state_monthly,   instub(`temp') outstub(`exports') target_m
> w(`mw_list')
 13.         export_state_quarterly, instub(`temp') outstub(`exports') target_m
> w(`mw_list')
 14.         export_state_annually,  instub(`temp') outstub(`exports') target_m
> w(`mw_list')
 15. end

. 
. program import_crosswalk, rclass
  1.         syntax, instub(str) outstub(str)
  2. 
.         import excel using `instub'/FIPS_crosswalk.xlsx, clear firstrow
  3.         rename (Name       FIPSStateNumericCode  OfficialUSPSCode)        
>    ///
>                    (statename  statefips             stateabb)
  4.         drop sname
  5. 
.         replace stateabb = upper(stateabb)
  6.         label var stateabb "State Abbreviation"
  7.         
.         save_data `outstub'/crosswalk.dta, replace key(statename) log(none)
  8. 
.         levelsof statefips, local(fips)
  9.         return local fips "`fips'"
 10. end

. 
. program fed_min_wage_change
  1.         syntax, instub(str) outstub(str)
  2. 
.         import excel using `instub'/VZ_FederalMinimumWage_Changes.xlsx, clear
>  firstrow
  3.         rename Fed_mw fed_mw
  4.         keep year month day fed_mw source
  5. 
.         gen date = mdy(month, day, year)
  6.         format date %td
  7. 
.         replace fed_mw = round(fed_mw, .01)
  8.         label var fed_mw "Federal Minimum Wage"
  9. 
.         order year month day date fed_mw source
 10. 
.         isid date, sort
 11.         export delim using `outstub'/VZ_federal_changes.csv, replace
 12. end

. 
. program add_state_to_fedmw
  1.         syntax, fips(str) outstub(str)
  2.         
.         tsset date
  3.         tsfill
  4. 
.         carryforward year month day fed_mw, replace
  5. 
.         keep date fed_mw
  6. 
.         tempfile temp
  7.         save `temp'
  8.         
.         foreach i in `fips' {
  9.                 use `temp', clear
 10.                 gen statefips = `i'
 11.                 tempfile state`i'
 12.                 save `state`i''
 13.         }
 14.         foreach i in `fips' {
 15.                 if `i' == 1 use `state`i'', clear
 16.                 else quietly append using `state`i''
 17.         }
 18. 
.         compress
 19.         save_data `outstub'/fedmw.dta, replace key(date statefips) log(non
> e)
 20. end

. 
. program state_min_wage_change 
  1.         syntax, instub(str) outstub(str) temp(str)
  2. 
.         import excel using `instub'/VZ_StateMinimumWage_Changes.xlsx, clear f
> irstrow
  3. 
.         gen date = mdy(month,day,year)
  4.         format date %td
  5. 
.         gen double mw = round(VZ_mw, .01)
  6.         gen double mw_healthinsurance = round(VZ_mw_healthinsurance, .01)
  7.         gen double mw_smallbusiness   = round(VZ_mw_smallbusiness, .01)
  8.         drop VZ_mw*
  9. 
.         merge m:1 statefips using `temp'/crosswalk.dta, nogen assert(3)
 10. 
.         order statefips statename stateabb year month day date mw* source sou
> rce_2 source_notes
 11.         label var statefips "State FIPS Code"
 12.         label var statename "State"
 13. 
.         sort stateabb date
 14.         
.         isid statefips date, sort
 15.         export delim using `outstub'/VZ_state_changes.csv, replace 
 16. 
.         tsset statefips date
 17.         tsfill
 18. 
.         keep statefips date mw* source_notes
 19. 
.         foreach x of varlist source_notes {
 20.                 bysort statefips (date): replace `x' = `x'[_n-1] if `x' ==
>  ""
 21.         }
 22.         foreach x of varlist mw* {
 23.                 bysort statefips (date): replace `x' = `x'[_n-1] if `x' ==
>  .
 24.         }
 25. end 

. 
. program prepare_finaldata       
  1.         syntax, begindate(str) finaldate(str) outstub(str) temp(str)
  2. 
.         merge 1:1 statefips date using `temp'/fedmw.dta, nogenerate
  3.         merge m:1 statefips using `temp'/crosswalk.dta, nogen assert(3)
  4. 
.         gen mw_adj = mw
  5.         replace mw_adj = fed_mw if fed_mw >= mw & fed_mw ~= .
  6.         replace mw_adj = fed_mw if mw == . & fed_mw ~= .
  7.         drop mw
  8.         rename mw_adj mw
  9. 
.         keep if date >= td(`begindate') & date <= td(`finaldate')
 10. 
.         order statefips statename stateabb date fed_mw mw
 11.         label var mw "State Minimum Wage"
 12.         notes mw: The mw variable represents the higher rate between the s
> tate and federal minimum wage
 13. 
.         save_data `outstub'/data.dta, replace key(statefips date) log(none)
 14. end

. 
. program export_state_daily
  1.         syntax, instub(str) outstub(str) target_mw(str)
  2. 
.         use `instub'/data.dta, clear
  3. 
.         keep statefips statename stateabb date `target_mw'
  4. 
.         isid statefips date, sort
  5.         export delim using `outstub'/VZ_state_daily.csv, replace 
  6. end

. 
. program export_state_monthly
  1.         syntax, instub(str) outstub(str) target_mw(str)
  2. 
.         use `instub'/data.dta, clear
  3. 
.         keep statefips statename stateabb date `target_mw'
  4. 
.         gen monthly_date = mofd(date)
  5.         format monthly_date %tm
  6. 
.         collapse (max) `target_mw',          ///
>                  by(statefips statename stateabb monthly_date)
  7. 
.         label var monthly_date "Monthly Date"
  8.         label_mw_vars, time_level("Monthly")
  9. 
.         isid statefips monthly_date, sort
 10.         export delim using `outstub'/VZ_state_monthly.csv, replace
 11. end

. 
. program export_state_quarterly
  1.         syntax, instub(str) outstub(str) target_mw(str)
  2. 
.         use `instub'/data.dta, clear
  3. 
.         keep statefips statename stateabb date `target_mw'
  4. 
.         gen quarterly_date = qofd(date)
  5.         format quarterly_date %tq
  6. 
.         collapse (max) `target_mw',           ///
>                  by(statefips statename stateabb quarterly_date)
  7. 
.         label var quarterly_date "Quarterly Date"
  8.         label_mw_vars, time_level("Quarterly")
  9. 
.         isid statefips quarterly_date, sort
 10.         export delim using `outstub'/VZ_state_quarterly.csv, replace 
 11. end

. 
. program export_state_annually
  1.         syntax, instub(str) outstub(str) target_mw(str)
  2. 
.         use `instub'/data.dta, clear
  3. 
.         keep statefips statename stateabb date `target_mw'
  4. 
.         gen year = yofd(date)
  5.         format year %ty
  6. 
.         collapse (max) `target_mw',          ///
>                  by(statefips statename stateabb year)
  7. 
.         label var year "Year"
  8.         label_mw_vars, time_level("Annual")
  9. 
.         isid statefips year, sort
 10.         export delim using `outstub'/VZ_state_annual.csv, replace
 11. end

. 
. program label_mw_vars
  1.         syntax, time_level(str)
  2. 
.         label var fed_mw  "`time_level' Federal MW"
  3.         label var mw      "`time_level' State MW"       
  4. end

. 
. *EXECUTE
. main 
(0 real changes made)
(data now sorted by statename)
  (0 bytes saved)
===============================================================================
> ===================
File: ../temp/crosswalk.dta
Key: statename
===============================================================================
> ===================
  51:3(112010):1169891571:1356275751

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
   statename |          0
   statefips |         51    28.96078    15.83283          1         56
    stateabb |          0




(note: file ../temp/crosswalk.dta not found)
file ../temp/crosswalk.dta saved
1 2 4 5 6 8 9 10 11 12 13 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32
>  33 34 35 36 37 38 39 40 41 42 44 45 46 47 48 49 50 51 53 54 55 56
(3 real changes made)
(data now sorted by date)
(note: file ../output/VZ_federal_changes.csv not found)
file ../output/VZ_federal_changes.csv saved
        time variable:  date, 01may1974 to 31dec2019, but with gaps
                delta:  1 day
year:  (16,666 real changes made)
month:  (16,666 real changes made)
day:  (16,666 real changes made)
fed_mw:  (16,666 real changes made)
file C:\Users\gabriel\AppData\Local\Temp\ST_2a5c_000001.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2a5c_000002.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2a5c_000003.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2a5c_000004.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2a5c_000005.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2a5c_000006.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2a5c_000007.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2a5c_000008.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2a5c_000009.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2a5c_00000a.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2a5c_00000b.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2a5c_00000c.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2a5c_00000d.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2a5c_00000e.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2a5c_00000f.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2a5c_00000g.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2a5c_00000h.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2a5c_00000i.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2a5c_00000j.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2a5c_00000k.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2a5c_00000l.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2a5c_00000m.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2a5c_00000n.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2a5c_00000o.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2a5c_00000p.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2a5c_00000q.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2a5c_00000r.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2a5c_00000s.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2a5c_00000t.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2a5c_00000u.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2a5c_00000v.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2a5c_00000w.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2a5c_00000x.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2a5c_000010.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2a5c_000011.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2a5c_000012.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2a5c_000013.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2a5c_000014.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2a5c_000015.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2a5c_000016.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2a5c_000017.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2a5c_000018.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2a5c_000019.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2a5c_00001a.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2a5c_00001b.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2a5c_00001c.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2a5c_00001d.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2a5c_00001e.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2a5c_00001f.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2a5c_00001g.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2a5c_00001h.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2a5c_00001i.tmp saved
  variable date was float now int
  variable statefips was float now byte
  (4,253,655 bytes saved)
(data now sorted by date statefips)
  (0 bytes saved)
===============================================================================
> ===================
File: ../temp/fedmw.dta
Key: date statefips
===============================================================================
> ===================
  850731:3(96450):1995356043:2815510735

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
        date |    850,731       13574    4815.393       5234      21914
   statefips |    850,731    28.96078    15.67684          1         56
      fed_mw |    850,731    4.778784    1.662974          2       7.25




(note: file ../temp/fedmw.dta not found)
file ../temp/fedmw.dta saved
(652 missing values generated)
(623 missing values generated)

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                               658  
    -----------------------------------------
(data now sorted by statefips date)
(note: file ../output/VZ_state_changes.csv not found)
file ../output/VZ_state_changes.csv saved
       panel variable:  statefips (unbalanced)
        time variable:  date, 08feb1943 to 31dec2019, but with gaps
                delta:  1 day
(94,037 real changes made)
(568363 real changes made)
(4776 real changes made)
(27754 real changes made)

    Result                           # of obs.
    -----------------------------------------
    not matched                       410,988
        from master                    64,639  
        from using                    346,349  

    matched                           504,382  
    -----------------------------------------

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                           915,370  
    -----------------------------------------
(346,349 missing values generated)
(86,444 real changes made)
(346,349 real changes made)
(64,639 observations deleted)
(data now sorted by statefips date)
  variable date was float now int
  (1,701,462 bytes saved)
===============================================================================
> ===================
File: ../temp/data.dta
Key: statefips date
===============================================================================
> ===================
  850731:9(106708):1677398668:3012031951

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
   statefips |    850,731    28.96078    15.67684          1         56
        date |    850,731       13574    4815.393       5234      21914
   statename |          0
    stateabb |          0
      fed_mw |    850,731    4.778784    1.662974          2       7.25
-------------+---------------------------------------------------------
          mw |    850,731    5.055162    2.009026          2         14
mw_healthi~e |      4,782    6.846048    .7164077       5.15       7.25
mw_smallbu~s |     27,789    5.419747    1.635873          4         11
source_notes |          0




(note: file ../temp/data.dta not found)
file ../temp/data.dta saved
(data already sorted by statefips date)
(note: file ../output/VZ_state_daily.csv not found)
file ../output/VZ_state_daily.csv saved
(data now sorted by statefips monthly_date)
(note: file ../output/VZ_state_monthly.csv not found)
file ../output/VZ_state_monthly.csv saved
(data now sorted by statefips quarterly_date)
(note: file ../output/VZ_state_quarterly.csv not found)
file ../output/VZ_state_quarterly.csv saved
(data now sorted by statefips year)
(note: file ../output/VZ_state_annual.csv not found)
file ../output/VZ_state_annual.csv saved

. 
end of do-file


Execute:  StataMP-64 /e do "./substate_mw.do"

  ___  ____  ____  ____  ____ (R)
 /__    /   ____/   /   ____/
___/   /   /___/   /   /___/   15.1   Copyright 1985-2017 StataCorp LLC
  Statistics/Data Analysis            StataCorp
                                      4905 Lakeway Drive
     MP - Parallel Edition            College Station, Texas 77845 USA
                                      800-STATA-PC        http://www.stata.com
                                      979-696-4600        stata@stata.com
                                      979-696-4601 (fax)

Single-user 32-core Stata perpetual license:
       Serial number:  501506205566
         Licensed to:  KU Leuven FEB (CES)
                       KU Leuven

Notes:
      1.  Stata is running in batch mode.
      2.  Unicode is supported; see help unicode_advice.
      3.  More than 2 billion observations are allowed; see help obs_advice.
      4.  Maximum number of variables is set to 5000; see help set_maxvar.

. do ./substate_mw.do 

. set more off

. clear all

. adopath + ../../lib/stata/gslab_misc/ado
  [1]  (BASE)      "C:\Program Files (x86)\Stata15\ado\base/"
  [2]  (SITE)      "C:\Program Files (x86)\Stata15\ado\site/"
  [3]              "."
  [4]  (PERSONAL)  "c:\ado\personal/"
  [5]  (PLUS)      "c:\ado\plus/"
  [6]  (OLDPLACE)  "c:\ado/"
  [7]              "../../lib/stata/gslab_misc/ado"

. 
. program main 
  1.         local raw "../../drive/raw_data/min_wage"
  2.         local exports "../output"
  3.         local temp "../temp"
  4. 
. 
.         import_crosswalk, instub(`raw') outstub(`exports')
  5.         substate_min_wage_change, instub(`raw') outstub(`exports') temp(`t
> emp')
  6.         prepare_local, temp(`temp')
  7.         prepare_state, outstub(`exports') temp(`temp') finaldate(31Dec2019
> )
  8.         
.         local mw_list = "mw mw_smallbusiness"
  9.         prepare_finaldata, temp(`temp') finaldate(31Dec2019) target_mw(`mw
> _list')
 10. 
.         export_substate_daily,     outstub(`exports') temp(`temp') 
 11.         export_substate_monthly,   outstub(`exports') temp(`temp') target_
> mw(`mw_list')
 12.         export_substate_quarterly, outstub(`exports') temp(`temp') target_
> mw(`mw_list')
 13.         export_substate_annually,  outstub(`exports') temp(`temp') target_
> mw(`mw_list')
 14. end 

. 
. program import_crosswalk, rclass
  1.         syntax, instub(str) outstub(str)
  2.         import excel using `instub'/FIPS_crosswalk.xlsx, clear firstrow 
  3.         
.         rename Name statename
  4.         rename FIPSStateNumericCode statefips
  5.         rename OfficialUSPSCode stateabb
  6.         replace stateabb = upper(stateabb)
  7.         label var stateabb "State Abbreviation"
  8.         
.         keep statename statefips stateabb
  9. 
.         save `outstub'/crosswalk.dta, replace
 10. end

. 
. program substate_min_wage_change
  1.         syntax, instub(str) outstub(str) temp(str)
  2. 
.         import excel using `instub'/VZ_SubstateMinimumWage_Changes.xlsx, clea
> r firstrow
  3. 
.         gen date = mdy(month,day,year)
  4.         format date %td
  5. 
.         gen double mw = round(VZ_mw, .01)
  6.         gen double mw_tipped = round(VZ_mw_tipped, .01)
  7.         gen double mw_healthinsurance = round(VZ_mw_healthinsurance, .01)
  8.         gen double mw_smallbusiness = round(VZ_mw_smallbusiness, .01)
  9.         gen double mw_smallbusiness_mincomp = round(VZ_mw_smallbusiness_mi
> ncompensat, .01)
 10.         gen double mw_hotel = round(VZ_mw_hotel, .01)
 11.         drop VZ_mw*
 12. 
.         merge m:1 statefips using `temp'/crosswalk.dta, nogen keep(3)
 13.         label var statefips "State FIPS Code"
 14.         label var statename "State"
 15.         label var stateabb "State Abbreviation"
 16.         label var locality "City/County"
 17.         label var mw "Minimum Wage"
 18.         order statefips statename stateabb locality year month day date mw
>  mw_* source source_2 source_notes
 19. 
.         sort locality date
 20.         export delim using `outstub'/VZ_substate_changes.csv, replace 
 21. end

. 
. program prepare_local
  1.         syntax, temp(str)
  2.         preserve
  3.         egen tag = tag(statefips locality)
  4.         keep if tag == 1
  5.         keep statefips locality
  6. 
.         save `temp'\localities.dta, replace
  7.         restore
  8. end

. 
. program prepare_state
  1.         syntax, outstub(str) temp(str) finaldate(str)
  2.         sum year
  3.         local minyear = r(min)
  4.         preserve        
  5.         import delim `outstub'/VZ_state_daily.csv, clear 
  6.         g date2 = date(date, "DMY")
  7.         format date2 %td
  8.         order date2, after(date)
  9.         drop date 
 10.         rename date2 date
 11.         keep if year(date) >= `minyear' & date <= td(`finaldate')
 12.         joinby statefips using `temp'/localities.dta
 13.         keep statefips statename stateabb locality date mw
 14.         rename mw state_mw
 15.         save `temp'/statemw.dta, replace
 16.         restore
 17. end

. 
. program prepare_finaldata
  1.         syntax, temp(str) finaldate(str) target_mw(str)
  2.         
.         encode locality, gen(locality_temp)
  3. 
.         tsset locality_temp date
  4.         tsfill
  5. 
.         foreach x of varlist statename stateabb locality source_notes {
  6.           bysort locality_temp (date): replace `x' = `x'[_n-1] if `x' == "
> "
  7.         }
  8.         foreach x of varlist statefips mw* {
  9.           bysort locality_temp (date): replace `x' = `x'[_n-1] if `x' == .
 10.         }
 11. 
.         keep if date <= td(`finaldate')
 12. 
.         merge 1:m statefips locality date using `temp'/statemw.dta, assert(2 
> 3) nogenerate
 13. 
.         replace mw = state_mw if mw == .
 14.         replace mw = round(mw,0.01)
 15.         gen abovestate_mw = mw > state_mw
 16.         label var abovestate_mw "Local `var' > State min wage"
 17. 
.         local mw "mw"
 18.         local new_target_mw: list target_mw - mw 
 19.         
.         foreach var in `new_target_mw' {
 20.                 replace `var' = mw if `var' == .
 21.                 replace `var' = round(`var',0.01)
 22.                 gen abovestate_`var' = `var' > state_mw
 23.                 label var abovestate_`var' "Local `var' > State min wage" 
>               
 24.         }
 25. 
.         keep statefips statename stateabb date locality mw mw_* abovestate_* 
> source_notes
 26.         order statefips statename stateabb date locality mw mw_* abovestat
> e_* source_notes
 27.         notes mw: The mw variable represents the most applicable minimum w
> age across the locality.
 28. 
.         save `temp'/data.dta, replace
 29. end

. 
. program export_substate_daily
  1.         syntax, outstub(str) temp(str) 
  2.                 
.         use `temp'/data.dta, clear
  3.         sort locality date
  4.         export delim using `outstub'\VZ_substate_daily.csv, replace
  5. end

. 
. program export_substate_monthly
  1.         syntax, outstub(str) temp(str) target_mw(str)
  2.         use `temp'/data.dta, clear
  3. 
.         gen monthly_date = mofd(date)
  4.         format monthly_date %tm
  5. 
.         collapse (max) `target_mw' abovestate_*, by(statefips statename state
> abb locality monthly_date)
  6. 
.         label var monthly_date "Monthly Date"
  7.         label_mw_vars, time_level("Monthly")
  8. 
.         sort locality monthly_date
  9. 
.         export delim using `outstub'/VZ_substate_monthly.csv, replace 
 10. end 

. 
. program export_substate_quarterly
  1.         syntax, outstub(str) temp(str) target_mw(str)
  2.         use `temp'/data.dta, clear
  3. 
.         gen quarterly_date = qofd(date)
  4.         format quarterly_date %tq
  5. 
.         collapse (max) `target_mw' abovestate_*, by(statefips statename state
> abb locality quarterly_date)
  6. 
.         label var quarterly_date "Quarterly Date"
  7.         label_mw_vars, time_level("Quarterly")
  8. 
.         sort locality quarterly_date
  9. 
.         export delim using `outstub'/VZ_substate_quarterly.csv, replace
 10. end 

. 
. program export_substate_annually
  1.         syntax, outstub(str) temp(str) target_mw(str)
  2.         use `temp'/data.dta, clear
  3. 
.         gen year = yofd(date)
  4.         format year %ty
  5. 
.         collapse (max) `target_mw' abovestate_*, by(statefips statename state
> abb locality year)
  6. 
.         label var year "Year"
  7.         label_mw_vars, time_level("Annual")
  8. 
.         sort locality year
  9. 
.         export delim using `outstub'/VZ_substate_annual.csv, replace 
 10. end

. 
. program label_mw_vars
  1.         syntax, time_level(str)
  2. 
.         label var mw     "`time_level' MW"      
  3.         label var abovestate_mw "Local > State min wage"        
  4. end

. 
. * EXECUTE
. main 
(0 real changes made)
(note: file ../output/crosswalk.dta not found)
file ../output/crosswalk.dta saved
(17 missing values generated)
(253 missing values generated)
(288 missing values generated)
(227 missing values generated)
(307 missing values generated)
(305 missing values generated)

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                               313  
    -----------------------------------------
(note: file ../output/VZ_substate_changes.csv not found)
file ../output/VZ_substate_changes.csv saved
(254 observations deleted)
(note: file ../temp\localities.dta not found)
file ../temp\localities.dta saved

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
        year |        313    2017.431    3.354471       2004       2024
(6 vars, 850,731 obs)
(552,687 observations deleted)
(note: file ../temp/statemw.dta not found)
file ../temp/statemw.dta saved
       panel variable:  locality_temp (unbalanced)
        time variable:  date, 01jan2004 to 01jul2024, but with gaps
                delta:  1 day
(92,333 real changes made)
(92,333 real changes made)
(92,333 real changes made)
(47,542 real changes made)
(92,333 real changes made)
(91437 real changes made)
(22356 real changes made)
(11029 real changes made)
(25410 real changes made)
(3192 real changes made)
(3646 real changes made)
(15,503 observations deleted)

    Result                           # of obs.
    -----------------------------------------
    not matched                       267,653
        from master                         0  
        from using                    267,653  

    matched                            77,143  
    -----------------------------------------
(268,384 real changes made)
(44,886 real changes made)
(331,367 real changes made)
(0 real changes made)
file ../temp/data.dta saved
(note: file ../output\VZ_substate_daily.csv not found)
file ../output\VZ_substate_daily.csv saved
(note: file ../output/VZ_substate_monthly.csv not found)
file ../output/VZ_substate_monthly.csv saved
(note: file ../output/VZ_substate_quarterly.csv not found)
file ../output/VZ_substate_quarterly.csv saved
(note: file ../output/VZ_substate_annual.csv not found)
file ../output/VZ_substate_annual.csv saved

. 
end of do-file

 make.py ended: 2020-03-25 17:01:50
