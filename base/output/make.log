
 make.py started: 2020-04-30 19:10:28 C:\Users\gabriel\Dropbox (Brown)\research\min_wage_rent\base\code 




Execute:  StataMP-64 /e do "./alt_rents.do"

  ___  ____  ____  ____  ____ (R)
 /__    /   ____/   /   ____/
___/   /   /___/   /   /___/   15.1   Copyright 1985-2017 StataCorp LLC
  Statistics/Data Analysis            StataCorp
                                      4905 Lakeway Drive
     MP - Parallel Edition            College Station, Texas 77845 USA
                                      800-STATA-PC        http://www.stata.com
                                      979-696-4600        stata@stata.com
                                      979-696-4601 (fax)

Single-user 32-core Stata perpetual license:
       Serial number:  501506205566
         Licensed to:  KU Leuven FEB (CES)
                       KU Leuven

Notes:
      1.  Stata is running in batch mode.
      2.  Unicode is supported; see help unicode_advice.
      3.  More than 2 billion observations are allowed; see help obs_advice.
      4.  Maximum number of variables is set to 5000; see help set_maxvar.

. do ./alt_rents.do 

. set more off

. clear all

. adopath + ../../lib/stata/gslab_misc/ado
  [1]  (BASE)      "C:\Program Files (x86)\Stata15\ado\base/"
  [2]  (SITE)      "C:\Program Files (x86)\Stata15\ado\site/"
  [3]              "."
  [4]  (PERSONAL)  "c:\ado\personal/"
  [5]  (PLUS)      "c:\ado\plus/"
  [6]  (OLDPLACE)  "c:\ado/"
  [7]              "../../lib/stata/gslab_misc/ado"

. 
. program main 
  1.         local raw "../../drive/raw_data/"
  2.         local exports "../output/"
  3.         local temp "../temp"
  4. 
.         build_small_area_fmr, instub(`raw') outstub(`exports')
  5.         
. 
. end

. 
. 
. 
. 
. program build_small_area_fmr
  1.         syntax, instub(str) outstub(str) 
  2. 
.         forval fmr = 2018(-1)2016 {
  3.                 import excel `instub'SFMR/fy`fmr'_safmrs.xlsx, first clear
>       
  4.                 clean_safmrs, yr(`fmr') instub(`instub')
  5.                 tempfile safmrs_`fmr' 
  6.                 save "`safmrs_`fmr''", replace 
  7.                 di "`fmr'"
  8.                 
.         }       
  9. 
. 
.         forval fmr = 2015(-1)2012 {
 10.                 import excel `instub'SFMR/fy`fmr'_safmrs.xls, first clear 
 11.                 clean_safmrs, yr(`fmr') instub(`instub')
 12.                 tempfile safmrs_`fmr' 
 13.                 save "`safmrs_`fmr''", replace          
 14.                 di "`fmr'"
 15.         }
 16. 
. 
.         import excel `instub'SFMR/fy2019_safmrs_rev.xlsx, first clear 
 17.         clean_safmrs, yr(2019) instub(`instub')
 18. 
.         forval fmr = 2018(-1)2012 {
 19.                 append using `safmrs_`fmr'' 
 20.                 di "Appending year `fmr'"
 21.         }
 22. 
.         drop if missing(zipcode)
 23.         sort zipcode year
 24. 
.         drop if zipcode<1000 
 25. 
.         duplicates drop
 26. 
.         save_data `outstub'safrm.dta, key(zipcode year) replace
 27. 
. end

. 
. 
. program clean_safmrs 
  1.                 syntax, yr(int) instub(str)
  2. 
.                 if `yr'==2012 {
  3.                         tolower State StateName County CountyName CBSA CBS
> AName ZIP
  4.                         rename (state statename county countyname zip) (st
> ate_fips state county_fips county zipcode)
  5. 
.                         bys state_fips county_fips (county): replace county =
>  county[_N]  
  6.                         replace county = "Broomfield" if state_fips=="08" 
> & county_fips=="014"
  7. 
.                         bys state_fips cbsa (cbsaname): replace cbsaname = cb
> saname[_N]  
  8. 
.                         replace county_fips = state_fips + county_fips       
>            
  9.                         replace county = subinstr(county, " County", "", .
> )
 10.                         destring county_fips, replace 
 11.                         labmask county_fips, values(county)
 12.                         drop county
 13. 
. 
.                         destring state_fips, replace 
 14.                         drop if state_fips==72
 15.                         replace state_fips=1  if state == "Alabama"
 16.                         replace state_fips=10 if state == "Delaware"
 17.                         replace state_fips=25 if state == "Massachusetts"
 18.                         replace state_fips=54 if state == "West Virginia"
 19.                         labmask state_fips, values(state)
 20.                         drop state
 21. 
. 
.                         labmask cbsa, values(cbsaname)
 22.                         drop cbsaname   
 23. 
.                         gen byte notnumeric = real(zipcode)==.
 24.                         drop if notnum==1 
 25.                         drop notnum 
 26.                         destring zipcode, replace
 27. 
.                         duplicates drop 
 28. 
.                         rename area_rent_* safmrs*
 29.                         forval x = 0(1)4 {
 30.                                 rename safmrsbr`x' safmr`x'br
 31.                         }
 32. 
.                         collapse_zipcodes, instub(`instub') yr(`yr')
 33. 
.                         g year =`yr'
 34.                         
.                         order year zipcode safmr*
 35. 
. 
. 
.                 }
 36. 
. 
.                 if `yr'== 2013 {
 37.                         tolower State StateName County CountyName CBSA CBS
> AName ZIP
 38.                         rename (state statename county countyname zip) (st
> ate_fips state county_fips county zipcode)
 39. 
.                         bys state_fips county_fips (county): replace county =
>  county[_N]  
 40.                         replace county = "Broomfield" if state_fips=="08" 
> & county_fips=="014"
 41. 
.                         bys state_fips cbsa (cbsaname): replace cbsaname = cb
> saname[_N]  
 42. 
.                         replace county_fips = state_fips + county_fips       
>            
 43.                         replace county = subinstr(county, " County", "", .
> )
 44.                         destring county_fips, replace 
 45.                         labmask county_fips, values(county)
 46.                         drop county
 47. 
. 
.                         destring state_fips, replace 
 48.                         labmask state_fips, values(state)
 49.                         drop if state_fips==72
 50.                         drop state
 51. 
. 
. 
.                         labmask cbsa, values(cbsaname)
 52.                         drop cbsaname
 53.                         
.                         destring zipcode, replace
 54. 
.                         duplicates drop 
 55. 
.                         rename area_rent_* safmrs*
 56.                         forval x = 0(1)4 {
 57.                                 rename safmrsbr`x' safmr`x'br
 58.                         }
 59. 
.                         duplicates drop zipcode county_fips, force
 60. 
.                         collapse_zipcodes, instub(`instub') yr(`yr')
 61.                         
.                         g year =`yr'
 62.                         
.                         order year zipcode safmr*
 63.                 }
 64. 
.                 if `yr'==2014 {
 65.                         tolower State StateName County CountyName CBSA CBS
> AName ZIP
 66.                         rename (state statename county countyname zip) (st
> ate_fips state county_fips county zipcode)
 67. 
.                         bys state_fips county_fips (county): replace county =
>  county[_N]  
 68.                         replace county = "Broomfield" if state_fips=="08" 
> & county_fips=="014"
 69. 
.                         bys state_fips cbsa (cbsaname): replace cbsaname = cb
> saname[_N]  
 70. 
.                         replace county_fips = state_fips + county_fips       
>            
 71.                         replace county = subinstr(county, " County", "", .
> )
 72.                         destring county_fips, replace 
 73.                         labmask county_fips, values(county)
 74.                         drop county
 75. 
. 
.                         destring state_fips, replace 
 76.                         labmask state_fips, values(state)
 77.                         drop if state_fips==72
 78.                         drop state
 79. 
. 
. 
.                         labmask cbsa, values(cbsaname)
 80.                         drop cbsaname
 81.                         
.                         destring zipcode, replace
 82. 
.                         duplicates drop 
 83. 
.                         rename area_rent_* safmrs*
 84.                         forval x = 0(1)4 {
 85.                                 rename safmrsbr`x' safmr`x'br
 86.                         }
 87. 
.                         collapse_zipcodes, instub(`instub') yr(`yr')
 88. 
.                         g year =`yr'
 89. 
.                         order year zipcode safmr*
 90. 
.                 }
 91. 
.                 if `yr'==2015 {
 92.                         rename (state statename county cntyname cbsamet cb
> nsmcnm) (state_fips state county_fips county cbsa cbsaname)
 93. 
.                         bys state_fips county_fips (county): replace county =
>  county[_N]  
 94.                         replace county = "Broomfield" if state_fips=="08" 
> & county_fips=="014"
 95. 
.                         bys state_fips cbsa (cbsaname): replace cbsaname = cb
> saname[_N]  
 96. 
. 
.                         replace county_fips = state_fips + county_fips       
>            
 97.                         replace county = subinstr(county, " County", "", .
> )
 98.                         destring county_fips, replace 
 99.                         labmask county_fips, values(county)
100.                         drop county
101. 
.                         destring state_fips, replace 
102.                         labmask state_fips, values(state)
103.                         drop if state_fips==72
104.                         drop state
105. 
. 
.                         destring cbsa, replace 
106.                         labmask cbsa, values(cbsaname)
107.                         drop cbsaname
108. 
.                         destring zipcode, replace
109.                         drop if missing(zipcode)
110. 
.                         duplicates drop
111. 
.                         rename area_rent_* safmrs*
112.                         forval x = 0(1)4 {
113.                                 rename safmrsbr`x' safmr`x'br
114.                         }
115. 
.                         collapse_zipcodes, instub(`instub') yr(`yr')
116. 
.                         g year =`yr'
117. 
.                         order year zipcode safmr*
118.                 }
119. 
.                 if `yr'==2019 | `yr'==2018 {
120.                         tolower *
121.                         rename (hudmetrofairmarketrentarea) (hudname)
122.                         
.                         rename (*paymentstandard *paymentstandar) (*pct *pct)
>  
123. 
.                         g hudcode = substr(hudareacode, -6, 6)
124. 
.                         g cbsa = substr(hudareacode, 1, 10)
125.                         replace cbsa = subinstr(cbsa, "METRO", "", .)
126.                         destring cbsa, replace
127.                         
.                         drop hudareacode
128. 
.                         destring zipcode, replace
129.                         drop if missing(zipcode)
130.                         
.                         drop hudname hudcode
131.                         duplicates drop
132. 
.                         collapse_zipcodes, instub(`instub') yr(`yr')
133.                         
.                         g year =`yr'
134. 
.                         drop safmr*pct
135. 
.                         order year zipcode safmr*
136. 
.                 }
137. 
. 
.                 if `yr'== 2017 {
138.                                                 
.                         rename (zip_code metro_code metro_name) (zipcode cbsa
>  cbsaname) 
139. 
.                         destring cbsa, replace 
140.                         labmask cbsa, values(cbsaname)
141.                         drop cbsaname 
142. 
.                         destring zipcode, replace
143. 
.                         duplicates drop
144. 
.                         rename area_rent_* safmrs*
145.                         forval x = 0(1)4 {
146.                                 rename safmrsbr`x' safmr`x'br
147.                         }
148. 
.                         collapse_zipcodes, instub(`instub') yr(`yr') 
149. 
.                         g year =`yr'
150. 
.                         order year zipcode safmr*                       
151. 
.                 }
152. 
.                 if `yr'==2016 {
153.                         rename(zip_code metro_code metro_name fips_state_c
> ode statename  fips_county_code county_name) (zipcode cbsa cbsaname state_fip
> s state county_fips countyname)
154. 
.                         bys state_fips county_fips (countyname): replace coun
> tyname = countyname[_N]  
155.                         replace countyname = "Broomfield" if state_fips=="
> 08" & county_fips=="014"
156. 
.                         bys state_fips cbsa (cbsaname): replace cbsaname = cb
> saname[_N]  
157. 
.                         replace county_fips = state_fips + county_fips       
>            
158.                         replace countyname = subinstr(countyname, " County
> ", "", .)
159.                         destring county_fips, replace 
160.                         labmask county_fips, values(countyname)
161.                         drop countyname
162. 
.                         destring state_fips, replace 
163.                         labmask state_fips, values(state)
164.                         drop if state_fips==72
165.                         drop state
166. 
. 
. 
.                         destring cbsa, replace 
167.                         labmask cbsa, values(cbsaname)
168.                         drop cbsaname
169. 
. 
.                         destring zipcode, replace
170. 
.                         duplicates drop
171. 
.                         rename area_rent_* safmrs*
172.                         forval x = 0(1)4 {
173.                                 rename safmrsbr`x' safmr`x'br
174.                         }
175. 
.                         collapse_zipcodes, instub(`instub') yr(`yr')
176.                         
.                         g year =`yr'
177. 
.                         order year zipcode safmr*
178.                 }
179. 
. 
. 
. end 

. 
. 
. program collapse_zipcodes 
  1.         syntax, yr(int) instub(str)
  2.         
.         if `yr' <2017 {
  3.                 preserve 
  4.                 import excel `instub'hud_Xwalks/ZIP_COUNTY_12`yr'.xlsx, cl
> ear first
  5.                 cap tolower *
  6.                 rename (zip county) (zipcode county_fips) 
  7.                 destring zipcode, replace 
  8.                 destring county_fips, replace
  9.                 keep zipcode county_fips res_ratio 
 10.                 isid zipcode county_fips
 11.                 tempfile countyxwalk_`yr'
 12.                 save "`countyxwalk_`yr''", replace
 13.                 restore  
 14. 
.                 merge 1:1 zipcode county_fips using `countyxwalk_`yr'', nogen
>  assert(1 2 3) keep(1 3)
 15.                 keep if res_ratio>.5 | missing(res_ratio)
 16.                 duplicates tag cbsa zipcode, g(dup)
 17.                 drop if dup>=1 & missing(res_ratio)
 18. 
.                 
.                 isid cbsa zipcode 
 19. 
.                 drop res_ratio dup
 20.                 keep zipcode cbsa safmr*                
 21.         }
 22. 
. 
.         preserve
 23.         import excel `instub'hud_Xwalks/ZIP_CBSA_12`yr'.xlsx, clear first
 24.         cap tolower *
 25.         rename zip zipcode 
 26.         destring zipcode cbsa, replace
 27.         keep zipcode cbsa res_ratio 
 28.         tempfile xwalk_`yr'
 29.         save "`xwalk_`yr''", replace
 30.         restore 
 31. 
.         merge 1:1 zipcode cbsa using `xwalk_`yr'', nogen assert(1 2 3) keep(1
>  3) 
 32. 
.         bys zipcode (cbsa): egen totwgt = sum(res_ratio)
 33.         bys zipcode (cbsa): g missing_wgt = 1 - totwgt
 34.         bys zipcode (cbsa): egen temp_mis = count(res_ratio) if missing(re
> s_ratio)
 35.         bys zipcode (cbsa): egen n_mis = sum(res_ratio==.)
 36.         g new_wgt = res_ratio
 37.         bys zipcode (cbsa): replace new_wgt = missing_wgt / n_mis if missi
> ng(res_ratio)
 38. 
.         drop res_ratio totwgt missing_wgt n_mis
 39. 
.         collapse (mean) safmr* [w = new_wgt], by(zipcode)
 40. end

. 
. 
. 
. 
. main
(1 missing value generated)
(1 missing value generated)
(25,838 real changes made)
cbsa: all characters numeric; replaced as long
(1 missing value generated)
zipcode: all characters numeric; replaced as long
(1 missing value generated)
(1 observation deleted)

Duplicates in terms of all variables

(942 observations deleted)
zipcode: all characters numeric; replaced as long
cbsa: all characters numeric; replaced as long
(note: file C:\Users\gabriel\AppData\Local\Temp\ST_4b18_000002.tmp not found)
file C:\Users\gabriel\AppData\Local\Temp\ST_4b18_000002.tmp saved

    Result                           # of obs.
    -----------------------------------------
    not matched                           331
        from master                       331  
        from using                          0  

    matched                            24,565  
    -----------------------------------------
(24565 missing values generated)
(331 missing values generated)
(331 real changes made)
(analytic weights assumed)
(note: file C:\Users\gabriel\AppData\Local\Temp\ST_4b18_000001.tmp not found)
file C:\Users\gabriel\AppData\Local\Temp\ST_4b18_000001.tmp saved
2018
cbsa: all characters numeric; replaced as long
zipcode: all characters numeric; replaced as long

Duplicates in terms of all variables

(0 observations are duplicates)
zipcode: all characters numeric; replaced as long
cbsa: all characters numeric; replaced as long
(note: file C:\Users\gabriel\AppData\Local\Temp\ST_4b18_000003.tmp not found)
file C:\Users\gabriel\AppData\Local\Temp\ST_4b18_000003.tmp saved

    Result                           # of obs.
    -----------------------------------------
    not matched                           312
        from master                       312  
        from using                          0  

    matched                            24,454  
    -----------------------------------------
(24454 missing values generated)
(312 missing values generated)
(312 real changes made)
(analytic weights assumed)
(note: file C:\Users\gabriel\AppData\Local\Temp\ST_4b18_000002.tmp not found)
file C:\Users\gabriel\AppData\Local\Temp\ST_4b18_000002.tmp saved
2017
(0 real changes made)
(7 real changes made)
(0 real changes made)
variable county_fips was str3 now str5
(27,000 real changes made)
(25,847 real changes made)
county_fips: all characters numeric; replaced as long
state_fips: all characters numeric; replaced as byte
(235 observations deleted)
cbsa: all characters numeric; replaced as long
zipcode: all characters numeric; replaced as long

Duplicates in terms of all variables

(0 observations are duplicates)
zipcode: all characters numeric; replaced as long
county_fips: all characters numeric; replaced as long
(note: file C:\Users\gabriel\AppData\Local\Temp\ST_4b18_000004.tmp not found)
file C:\Users\gabriel\AppData\Local\Temp\ST_4b18_000004.tmp saved

    Result                           # of obs.
    -----------------------------------------
    not matched                           373
        from master                       373  
        from using                          0  

    matched                            26,392  
    -----------------------------------------
(5,921 observations deleted)

Duplicates in terms of cbsa zipcode
(43 observations deleted)
zipcode: all characters numeric; replaced as long
cbsa: all characters numeric; replaced as long
(note: file C:\Users\gabriel\AppData\Local\Temp\ST_4b18_000006.tmp not found)
file C:\Users\gabriel\AppData\Local\Temp\ST_4b18_000006.tmp saved

    Result                           # of obs.
    -----------------------------------------
    not matched                         4,701
        from master                     4,701  
        from using                          0  

    matched                            16,100  
    -----------------------------------------
(16100 missing values generated)
(4,701 missing values generated)
(4701 real changes made)
(analytic weights assumed)
(note: file C:\Users\gabriel\AppData\Local\Temp\ST_4b18_000003.tmp not found)
file C:\Users\gabriel\AppData\Local\Temp\ST_4b18_000003.tmp saved
2016
(0 real changes made)
(6 real changes made)
(6 real changes made)
variable county_fips was str3 now str5
(22,784 real changes made)
(21,947 real changes made)
county_fips: all characters numeric; replaced as long
state_fips: all characters numeric; replaced as byte
(141 observations deleted)
cbsa: all characters numeric; replaced as long
zipcode: all characters numeric; replaced as long
(3 missing values generated)
(3 observations deleted)

Duplicates in terms of all variables

(28 observations deleted)
zipcode: all characters numeric; replaced as long
county_fips: all characters numeric; replaced as long
(note: file C:\Users\gabriel\AppData\Local\Temp\ST_4b18_000005.tmp not found)
file C:\Users\gabriel\AppData\Local\Temp\ST_4b18_000005.tmp saved

    Result                           # of obs.
    -----------------------------------------
    not matched                           274
        from master                       274  
        from using                          0  

    matched                            22,338  
    -----------------------------------------
(4,331 observations deleted)

Duplicates in terms of cbsa zipcode
(12 observations deleted)
zipcode: all characters numeric; replaced as long
cbsa: all characters numeric; replaced as long
(note: file C:\Users\gabriel\AppData\Local\Temp\ST_4b18_000007.tmp not found)
file C:\Users\gabriel\AppData\Local\Temp\ST_4b18_000007.tmp saved

    Result                           # of obs.
    -----------------------------------------
    not matched                         4,532
        from master                     4,532  
        from using                          0  

    matched                            13,737  
    -----------------------------------------
(13737 missing values generated)
(4,532 missing values generated)
(4532 real changes made)
(analytic weights assumed)
(note: file C:\Users\gabriel\AppData\Local\Temp\ST_4b18_000004.tmp not found)
file C:\Users\gabriel\AppData\Local\Temp\ST_4b18_000004.tmp saved
2015
(0 real changes made)
(6 real changes made)
(6 real changes made)
variable county_fips was str3 now str5
(24,160 real changes made)
(23,263 real changes made)
county_fips: all characters numeric; replaced as long
state_fips: all characters numeric; replaced as byte
(140 observations deleted)
zipcode: all characters numeric; replaced as long

Duplicates in terms of all variables

(52 observations deleted)
zipcode: all characters numeric; replaced as long
county_fips: all characters numeric; replaced as long
(note: file C:\Users\gabriel\AppData\Local\Temp\ST_4b18_000006.tmp not found)
file C:\Users\gabriel\AppData\Local\Temp\ST_4b18_000006.tmp saved

    Result                           # of obs.
    -----------------------------------------
    not matched                           306
        from master                       306  
        from using                          0  

    matched                            23,662  
    -----------------------------------------
(4,469 observations deleted)

Duplicates in terms of cbsa zipcode
(14 observations deleted)
zipcode: all characters numeric; replaced as long
cbsa: all characters numeric; replaced as long
(note: file C:\Users\gabriel\AppData\Local\Temp\ST_4b18_000008.tmp not found)
file C:\Users\gabriel\AppData\Local\Temp\ST_4b18_000008.tmp saved

    Result                           # of obs.
    -----------------------------------------
    not matched                         4,839
        from master                     4,839  
        from using                          0  

    matched                            14,646  
    -----------------------------------------
(14646 missing values generated)
(4,839 missing values generated)
(4839 real changes made)
(analytic weights assumed)
(note: file C:\Users\gabriel\AppData\Local\Temp\ST_4b18_000005.tmp not found)
file C:\Users\gabriel\AppData\Local\Temp\ST_4b18_000005.tmp saved
2014
(0 real changes made)
(6 real changes made)
(6 real changes made)
variable county_fips was str3 now str5
(24,147 real changes made)
(23,249 real changes made)
county_fips: all characters numeric; replaced as long
state_fips: all characters numeric; replaced as byte
(168 observations deleted)
zipcode: all characters numeric; replaced as long

Duplicates in terms of all variables

(0 observations are duplicates)

Duplicates in terms of zipcode county_fips

(1 observation deleted)
zipcode: all characters numeric; replaced as long
county_fips: all characters numeric; replaced as long
(note: file C:\Users\gabriel\AppData\Local\Temp\ST_4b18_000007.tmp not found)
file C:\Users\gabriel\AppData\Local\Temp\ST_4b18_000007.tmp saved

    Result                           # of obs.
    -----------------------------------------
    not matched                           404
        from master                       404  
        from using                          0  

    matched                            23,574  
    -----------------------------------------
(4,531 observations deleted)

Duplicates in terms of cbsa zipcode
(19 observations deleted)
zipcode: all characters numeric; replaced as long
cbsa: all characters numeric; replaced as long
(note: file C:\Users\gabriel\AppData\Local\Temp\ST_4b18_000009.tmp not found)
file C:\Users\gabriel\AppData\Local\Temp\ST_4b18_000009.tmp saved

    Result                           # of obs.
    -----------------------------------------
    not matched                         4,902
        from master                     4,902  
        from using                          0  

    matched                            14,526  
    -----------------------------------------
(14526 missing values generated)
(4,902 missing values generated)
(4902 real changes made)
(analytic weights assumed)
(note: file C:\Users\gabriel\AppData\Local\Temp\ST_4b18_000006.tmp not found)
file C:\Users\gabriel\AppData\Local\Temp\ST_4b18_000006.tmp saved
2013
(54 real changes made)
(6 real changes made)
(6 real changes made)
variable county_fips was str3 now str5
(23,691 real changes made)
(22,740 real changes made)
county_fips: all characters numeric; replaced as long
state_fips: all characters numeric; replaced as byte
(231 observations deleted)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(35 observations deleted)
zipcode: all characters numeric; replaced as long

Duplicates in terms of all variables

(0 observations are duplicates)
zipcode: all characters numeric; replaced as long
county_fips: all characters numeric; replaced as long
(note: file C:\Users\gabriel\AppData\Local\Temp\ST_4b18_000008.tmp not found)
file C:\Users\gabriel\AppData\Local\Temp\ST_4b18_000008.tmp saved

    Result                           # of obs.
    -----------------------------------------
    not matched                           907
        from master                       907  
        from using                          0  

    matched                            22,518  
    -----------------------------------------
(6,142 observations deleted)

Duplicates in terms of cbsa zipcode
(239 observations deleted)
zipcode: all characters numeric; replaced as long
cbsa: all characters numeric; replaced as long
(note: file C:\Users\gabriel\AppData\Local\Temp\ST_4b18_00000a.tmp not found)
file C:\Users\gabriel\AppData\Local\Temp\ST_4b18_00000a.tmp saved

    Result                           # of obs.
    -----------------------------------------
    not matched                         4,024
        from master                     4,024  
        from using                          0  

    matched                            13,020  
    -----------------------------------------
(13020 missing values generated)
(4,024 missing values generated)
(4024 real changes made)
(analytic weights assumed)
(note: file C:\Users\gabriel\AppData\Local\Temp\ST_4b18_000007.tmp not found)
file C:\Users\gabriel\AppData\Local\Temp\ST_4b18_000007.tmp saved
2012
(26,019 real changes made)
cbsa: all characters numeric; replaced as long
zipcode: all characters numeric; replaced as long
(0 observations deleted)

Duplicates in terms of all variables

(988 observations deleted)
zipcode: all characters numeric; replaced as long
cbsa: all characters numeric; replaced as long
(note: file C:\Users\gabriel\AppData\Local\Temp\ST_4b18_000009.tmp not found)
file C:\Users\gabriel\AppData\Local\Temp\ST_4b18_000009.tmp saved

    Result                           # of obs.
    -----------------------------------------
    not matched                           844
        from master                       844  
        from using                          0  

    matched                            24,187  
    -----------------------------------------
(24187 missing values generated)
(844 missing values generated)
(844 real changes made)
(analytic weights assumed)
Appending year 2018
Appending year 2017
Appending year 2016
Appending year 2015
Appending year 2014
Appending year 2013
Appending year 2012
(0 observations deleted)
(483 observations deleted)

Duplicates in terms of all variables

(0 observations are duplicates)
(data already sorted by zipcode year)
  variable year was float now int
  (323,762 bytes saved)
===============================================================================
> ===================
File: ../output/safrm.dta
Key: zipcode year
===============================================================================
> ===================
  161881:7(32277):961095122:1415907161

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
     zipcode |    161,881    48588.15    29137.73       1001      99999
        year |    161,881    2015.707    2.280058       2012       2019
    safmr0br |    161,881    714.0648    288.9286        330       3130
    safmr1br |    161,881    817.5096    321.9903        370       3840
    safmr2br |    161,881    1011.945    387.7483        490       4760
-------------+---------------------------------------------------------
    safmr3br |    161,881    1353.448    521.1004        620       6240
    safmr4br |    161,881    1571.448    619.9266        650       7250




(note: file ../output/safrm.dta not found)
file ../output/safrm.dta saved

. 
end of do-file


Execute:  R CMD BATCH --no-save "./RenameZillowVars_zipLevel.R" RenameZillowVars_zipLevel.Rout

R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> remove(list = ls())
> source("../../lib/R/load_packages.R")
> source("../../lib/R/save_data.R")

Please cite as: 

 Hlavac, Marek (2018). stargazer: Well-Formatted Regression and Summary Statistics Tables.
 R package version 5.2.2. https://CRAN.R-project.org/package=stargazer 


Attaching package: 'dplyr'

The following objects are masked from 'package:stats':

    filter, lag

The following objects are masked from 'package:base':

    intersect, setdiff, setequal, union


Attaching package: 'data.table'

The following objects are masked from 'package:dplyr':

    between, first, last

Warning message:
package 'dplyr' was built under R version 3.6.2 
> 
> load_packages(c('tidyverse', 'data.table'))
-- Attaching packages --------------------------------------- tidyverse 1.3.0 --
v ggplot2 3.2.1     v purrr   0.3.3
v tibble  2.1.3     v stringr 1.4.0
v tidyr   1.0.0     v forcats 0.4.0
v readr   1.3.1     
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x data.table::between() masks dplyr::between()
x dplyr::filter()       masks stats::filter()
x data.table::first()   masks dplyr::first()
x dplyr::lag()          masks stats::lag()
x data.table::last()    masks dplyr::last()
x purrr::transpose()    masks data.table::transpose()
Warning messages:
1: package 'tidyverse' was built under R version 3.6.2 
2: package 'ggplot2' was built under R version 3.6.2 
3: package 'tidyr' was built under R version 3.6.2 
4: package 'purrr' was built under R version 3.6.2 
> 
> main <- function() {
+    
+    datadir   <- '../../drive/raw_data/zillow/'
+    outputdir <- "../output/"
+    geounit   <- "Zip"
+ 
+    last_period <- "122019"
+    
+    rename_zillow_vars(infiles = paste0(datadir, geounit, "_", last_period, "/"), 
+                       outdir = outputdir)
+ }
> 
> rename_zillow_vars <- function(infiles, outdir){
+    filenames <- list.files(infiles)
+    filenames <- filenames[str_detect(filenames, "^Zip_*")]
+    filenames <- filenames[!str_detect(filenames, "_Summary.csv")]
+ 
+    format <- lapply(filenames, function(x) {
+       df <- data.table::fread(paste0(infiles, x), stringsAsFactors = F)
+       df[,c("DataTypeDescription", "SizeRank", "RegionType"):=NULL]
+       
+       colgeonames <- colnames(df)
+       colgeonames <- colgeonames[!str_detect(colgeonames, "[0-9]")]
+       
+       colgeo_type1 <- c("RegionName", "City", "CountyName", "Metro", "StateFullName")
+       colgeo_type2 <- c("RegionID", "RegionName", "City", "County", "State", "Metro")
+       colgeo_type3 <- c("RegionName", "City", "State", "Metro", "CountyName")
+       colgeo_type4 <- c("RegionID", "RegionName", "City", "State", "Metro", "CountyName")
+       colgeo_type5 <- c("RegionID", "RegionName", "City", "County", "State", "Metro")
+       
+       if (identical(colgeonames,colgeo_type1)) {
+          newgeonames <- c("zipcode", "city", "county", "msa", "statename")
+          data.table::setnames(df, old = colgeonames, 
+                               new = newgeonames)
+          df[, county := str_replace_all(county, " County", "")]
+ 
+          save_data(df = df, key = newgeonames,
+                    filename = paste0(outdir, x))
+       } else if (identical(colgeonames,colgeo_type2)) {
+          newgeonames <- c("old_id", "zipcode", "city", "county", "stateabb", "msa")
+          data.table::setnames(df, old = colgeonames, 
+                               new = newgeonames)
+          df[, county := str_replace_all(county, " County", "")]
+          df[,old_id := NULL]
+          newgeonames <- newgeonames[-1]
+          
+          save_data(df = df, key = newgeonames,
+                    filename = paste0(outdir, x))
+       } else if (identical(colgeonames,colgeo_type3)) {
+          newgeonames <- c("zipcode", "city", "stateabb", "msa", "county")
+          data.table::setnames(df, old = colgeonames, 
+                               new = newgeonames)
+          df[, county := str_replace_all(county, " County", "")]
+          
+          save_data(df = df, key = newgeonames,
+                    filename = paste0(outdir, x))
+       } else if (identical(colgeonames,colgeo_type4)) {
+          newgeonames <- c("old_id", "zipcode", "city", "stateabb", "msa", "county")
+          data.table::setnames(df, old = colgeonames, 
+                               new = newgeonames)
+          df[, county := str_replace_all(county, " County", "")]
+          df[,old_id := NULL]
+          newgeonames <- newgeonames[-1]
+          
+          save_data(df = df, key = newgeonames,
+                    filename = paste0(outdir, x))
+       } else if (identical(colgeonames,colgeo_type5)) {
+          newgeonames <- c("old_id", "zipcode", "city", "county", "stateabb", "msa")
+          data.table::setnames(df, old = colgeonames, 
+                               new = newgeonames)
+          df[, county := str_replace_all(county, " County", "")]
+          df[,old_id := NULL]
+          newgeonames <- newgeonames[-1]
+          
+          save_data(df = df, key = newgeonames,
+                    filename = paste0(outdir, x))
+       }
+    })
+ }
> 
> main()
[1] "File '../output/Zip_MedianListingPrice_AllHomes.csv' saved successfully."
[1] "File '../output/Zip_MedianListingPrice_BottomTier.csv' saved successfully."
[1] "File '../output/Zip_MedianListingPrice_TopTier.csv' saved successfully."
[1] "File '../output/Zip_MedianListingPricePerSqft_AllHomes.csv' saved successfully."
[1] "File '../output/Zip_MedianListingPricePerSqft_BottomTier.csv' saved successfully."
[1] "File '../output/Zip_MedianListingPricePerSqft_TopTier.csv' saved successfully."
[1] "File '../output/Zip_MedianRentalPrice_1Bedroom.csv' saved successfully."
[1] "File '../output/Zip_MedianRentalPrice_2Bedroom.csv' saved successfully."
[1] "File '../output/Zip_MedianRentalPrice_3Bedroom.csv' saved successfully."
[1] "File '../output/Zip_MedianRentalPrice_4Bedroom.csv' saved successfully."
[1] "File '../output/Zip_MedianRentalPrice_5BedroomOrMore.csv' saved successfully."
[1] "File '../output/Zip_MedianRentalPrice_AllHomes.csv' saved successfully."
[1] "File '../output/Zip_MedianRentalPrice_CondoCoop.csv' saved successfully."
[1] "File '../output/Zip_MedianRentalPrice_DuplexTriplex.csv' saved successfully."
[1] "File '../output/Zip_MedianRentalPrice_Mfr5Plus.csv' saved successfully."
[1] "File '../output/Zip_MedianRentalPrice_Sfr.csv' saved successfully."
[1] "File '../output/Zip_MedianRentalPrice_Studio.csv' saved successfully."
[1] "File '../output/Zip_MedianRentalPricePerSqft_1Bedroom.csv' saved successfully."
[1] "File '../output/Zip_MedianRentalPricePerSqft_2Bedroom.csv' saved successfully."
[1] "File '../output/Zip_MedianRentalPricePerSqft_3Bedroom.csv' saved successfully."
[1] "File '../output/Zip_MedianRentalPricePerSqft_4Bedroom.csv' saved successfully."
[1] "File '../output/Zip_MedianRentalPricePerSqft_5BedroomOrMore.csv' saved successfully."
[1] "File '../output/Zip_MedianRentalPricePerSqft_AllHomes.csv' saved successfully."
[1] "File '../output/Zip_MedianRentalPricePerSqft_CondoCoop.csv' saved successfully."
[1] "File '../output/Zip_MedianRentalPricePerSqft_DuplexTriplex.csv' saved successfully."
[1] "File '../output/Zip_MedianRentalPricePerSqft_Mfr5Plus.csv' saved successfully."
[1] "File '../output/Zip_MedianRentalPricePerSqft_Sfr.csv' saved successfully."
[1] "File '../output/Zip_MedianRentalPricePerSqft_Studio.csv' saved successfully."
[1] "File '../output/Zip_Zhvi_2bedroom.csv' saved successfully."
[1] "File '../output/Zip_Zhvi_AllHomes.csv' saved successfully."
[1] "File '../output/Zip_Zhvi_Condominum.csv' saved successfully."
[1] "File '../output/Zip_Zhvi_SingleFamilyResidence.csv' saved successfully."
[1] "File '../output/Zip_Zri_AllHomesPlusMultifamily.csv' saved successfully."
[1] "File '../output/Zip_Zri_MultiFamilyResidenceRental.csv' saved successfully."
There were 50 or more warnings (use warnings() to see the first 50)
> 
> proc.time()
   user  system elapsed 
 113.25    2.85  143.06 


Execute:  R CMD BATCH --no-save "./cleanGeoRelationshipFiles.R" cleanGeoRelationshipFiles.Rout

R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> remove(list = ls())
> source("../../lib/R/load_packages.R")
> source("../../lib/R/save_data.R")

Please cite as: 

 Hlavac, Marek (2018). stargazer: Well-Formatted Regression and Summary Statistics Tables.
 R package version 5.2.2. https://CRAN.R-project.org/package=stargazer 


Attaching package: 'dplyr'

The following objects are masked from 'package:stats':

    filter, lag

The following objects are masked from 'package:base':

    intersect, setdiff, setequal, union


Attaching package: 'data.table'

The following objects are masked from 'package:dplyr':

    between, first, last

Warning message:
package 'dplyr' was built under R version 3.6.2 
> 
> load_packages(c('tidyverse', 'data.table', 'tidycensus', 'bit64'))
-- Attaching packages --------------------------------------- tidyverse 1.3.0 --
v ggplot2 3.2.1     v purrr   0.3.3
v tibble  2.1.3     v stringr 1.4.0
v tidyr   1.0.0     v forcats 0.4.0
v readr   1.3.1     
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x data.table::between() masks dplyr::between()
x dplyr::filter()       masks stats::filter()
x data.table::first()   masks dplyr::first()
x dplyr::lag()          masks stats::lag()
x data.table::last()    masks dplyr::last()
x purrr::transpose()    masks data.table::transpose()
Loading required package: bit
Attaching package bit
package:bit (c) 2008-2012 Jens Oehlschlaegel (GPL-2)
creators: bit bitwhich
coercion: as.logical as.integer as.bit as.bitwhich which
operator: ! & | xor != ==
querying: print length any all min max range sum summary
bit access: length<- [ [<- [[ [[<-
for more help type ?bit

Attaching package: 'bit'

The following object is masked from 'package:data.table':

    setattr

The following object is masked from 'package:base':

    xor

Attaching package bit64
package:bit64 (c) 2011-2012 Jens Oehlschlaegel
creators: integer64 seq :
coercion: as.integer64 as.vector as.logical as.integer as.double as.character as.bin
logical operator: ! & | xor != == < <= >= >
arithmetic operator: + - * / %/% %% ^
math: sign abs sqrt log log2 log10
math: floor ceiling trunc round
querying: is.integer64 is.vector [is.atomic} [length] format print str
values: is.na is.nan is.finite is.infinite
aggregation: any all min max range sum prod
cumulation: diff cummin cummax cumsum cumprod
access: length<- [ [<- [[ [[<-
combine: c rep cbind rbind as.data.frame
WARNING don't use as subscripts
WARNING semantics differ from integer
for more help type ?bit64

Attaching package: 'bit64'

The following object is masked from 'package:bit':

    still.identical

The following objects are masked from 'package:base':

    %in%, :, is.double, match, order, rank

Warning messages:
1: package 'tidyverse' was built under R version 3.6.2 
2: package 'ggplot2' was built under R version 3.6.2 
3: package 'tidyr' was built under R version 3.6.2 
4: package 'purrr' was built under R version 3.6.2 
> 
> main <- function(){
+    
+    datadir   <- '../../drive/raw_data/census/'
+    outputdir <- "../output/"
+    
+    clean_2010census_gazzetter(instub  = paste0(datadir, 'Gaz_places_national.txt'),
+                               outstub = paste0(outputdir, 'places10.csv'),
+                               key     = c('state', 'place'))
+    
+    clean_zip_place_relantionship(instub  = paste0(datadir, 'zcta_place_rel_10.txt'),
+                                  outstub = paste0(outputdir, 'zip_places10.csv'),
+                                  key      = c('state', 'place', 'zipcode'))
+    
+    clean_zip_county_relantionship(instub  = paste0(datadir, 'zcta_county_rel_10.txt'),
+                                   outstub = paste0(outputdir, 'zip_county10.csv'),
+                                   key     = c('state', 'county', 'zipcode'))
+ }
> 
> 
> clean_2010census_gazzetter <- function(instub, outstub, key) {
+    places10 <- fread(instub)
+    
+    places10$ALAND <- as.numeric(places10$ALAND*1e-6)
+    
+    places10 <- places10[USPS!='PR',]                                 
+    places10[ , GEOID:=str_pad(as.character(GEOID), 7, pad = "0")]
+    places10[ , c('state', 'place') := .((substr(GEOID, 1, 2)), (substr(GEOID, 3, 7)))]
+    places10[ , placetype := word(NAME, -1)]
+    places10[ , NAME := gsub("\\s*\\w*$", "", NAME)]
+    
+    setnames(places10, old = c('USPS','NAME', 'POP10', 'ALAND'), 
+                       new = c('stateabb', 'placename', 'placepop10', 'landarea_sqkm'))
+    varplace10 <- c('state', 'stateabb', 'place', 'placename', 'placetype', 'placepop10', 'landarea_sqkm')
+    places10 <- places10[ ,..varplace10]
+    
+    save_data(df = places10, key = key, filename = outstub)
+ }
> 
> 
> clean_zip_place_relantionship <- function(instub, outstub, key) {
+    zctaPlace10 <- fread(instub)
+ 
+    zctaPlace10[ ,c('ZCTA5', 'PLACE'):= .(str_pad(as.character(ZCTA5),5 , pad = "0"), 
+                                         str_pad(as.character(PLACE),5,  pad = "0"))]
+    zctaPlace10[ ,STATE := str_pad(as.character(STATE), 2, pad = "0")]
+    
+    zcta_oldvars <- c('ZCTA5', 'PLACE', 'STATE', 'ZPOP', 'POPPT', 'ZPOPPCT', 'PLPOPPCT', 'ZHU', 'ZHUPCT', 
+                      'PLHU', 'PLHUPCT', 'ZAREALANDPCT')
+    zcta_newvars <- c('zipcode', 'place', 'state', 'zippop10', 'relpop10', 'zippctpop10', 'placepctpop10', 
+                      'ziphouse10', 'zippcthouse10', 'placehouse10', 'placepcthouse10', 'zippctland')
+    
+    setnames(zctaPlace10, old = zcta_oldvars, new = zcta_newvars)
+    zctaPlace10 <- zctaPlace10[,..zcta_newvars]
+    
+    save_data(df = zctaPlace10, key = key, filename = outstub)
+ }
> 
> 
> clean_zip_county_relantionship <- function(instub, outstub, key) {
+    zctaCounty10 <- fread(instub)
+    
+    county_oldvars <- c('ZCTA5', 'STATE', 'COUNTY', 'ZPOPPCT', 'ZHUPCT', 'ZAREALANDPCT')
+    county_newvars <- c('zipcode', 'state', 'county', 'zippctpop10', 'zippcthouse10', 'zippctland')
+    setnames(zctaCounty10, old = county_oldvars, new = county_newvars)
+    zctaCounty10 <- zctaCounty10[ ,..county_newvars]
+    
+    zctaCounty10[, c('county','state') := .(str_pad(as.character(county), 3, pad ="0"), 
+                                            str_pad(as.character(state), 2, pad ="0"))]
+    countyNames <- fips_codes
+    countyNames <- countyNames[, c('state_code', 'county_code', 'county')]
+    countyNames <- setDT(countyNames)
+    
+    setnames(countyNames, old = c('state_code', 'county_code', 'county'), new = c('state', 'county', 'countyname'))
+    zctaCounty10 <- countyNames[zctaCounty10, on = c('state', 'county')]
+    USterritories <- c(60,66,69,72,78)
+    zctaCounty10 <- zctaCounty10[!state %in% USterritories,]
+    
+    save_data(df = zctaCounty10, key = key, filename = outstub)
+ }
> 
> main()
[1] "File '../output/places10.csv' saved successfully."
[1] "File '../output/zip_places10.csv' saved successfully."
[1] "File '../output/zip_county10.csv' saved successfully."
[1] "Log file generated successfully."
> 
> proc.time()
   user  system elapsed 
   8.60    1.14   13.09 


Execute:  StataMP-64 /e do "./state_mw.do"

  ___  ____  ____  ____  ____ (R)
 /__    /   ____/   /   ____/
___/   /   /___/   /   /___/   15.1   Copyright 1985-2017 StataCorp LLC
  Statistics/Data Analysis            StataCorp
                                      4905 Lakeway Drive
     MP - Parallel Edition            College Station, Texas 77845 USA
                                      800-STATA-PC        http://www.stata.com
                                      979-696-4600        stata@stata.com
                                      979-696-4601 (fax)

Single-user 32-core Stata perpetual license:
       Serial number:  501506205566
         Licensed to:  KU Leuven FEB (CES)
                       KU Leuven

Notes:
      1.  Stata is running in batch mode.
      2.  Unicode is supported; see help unicode_advice.
      3.  More than 2 billion observations are allowed; see help obs_advice.
      4.  Maximum number of variables is set to 5000; see help set_maxvar.

. do ./state_mw.do 

. set more off

. clear all

. adopath + ../../lib/stata/gslab_misc/ado
  [1]  (BASE)      "C:\Program Files (x86)\Stata15\ado\base/"
  [2]  (SITE)      "C:\Program Files (x86)\Stata15\ado\site/"
  [3]              "."
  [4]  (PERSONAL)  "c:\ado\personal/"
  [5]  (PLUS)      "c:\ado\plus/"
  [6]  (OLDPLACE)  "c:\ado/"
  [7]              "../../lib/stata/gslab_misc/ado"

. 
. program main
  1.         local raw "../../drive/raw_data/min_wage"
  2.         local exports "../output"
  3.         local temp "../temp"
  4. 
.         import_crosswalk, instub(`raw') outstub(`temp')
  5.         local fips = r(fips)
  6. 
.         fed_min_wage_change, instub(`raw') outstub(`exports') 
  7.         add_state_to_fedmw,  fips("`fips'") outstub(`temp')
  8.         state_min_wage_change, instub(`raw') outstub(`exports') temp(`temp
> ')
  9.         
. 
.         prepare_finaldata, begindate(01may1974) finaldate(31Dec2019)         
>   ///
>                                            outstub(`temp') temp(`temp')
 10.         
. 
.         local mw_list "fed_mw mw"
 11.         export_state_daily,     instub(`temp') outstub(`exports') target_m
> w(`mw_list')
 12.         export_state_monthly,   instub(`temp') outstub(`exports') target_m
> w(`mw_list')
 13.         export_state_quarterly, instub(`temp') outstub(`exports') target_m
> w(`mw_list')
 14.         export_state_annually,  instub(`temp') outstub(`exports') target_m
> w(`mw_list')
 15. end

. 
. program import_crosswalk, rclass
  1.         syntax, instub(str) outstub(str)
  2. 
.         import excel using `instub'/FIPS_crosswalk.xlsx, clear firstrow
  3.         rename (Name       FIPSStateNumericCode  OfficialUSPSCode)        
>    ///
>                    (statename  statefips             stateabb)
  4.         drop sname
  5. 
.         replace stateabb = upper(stateabb)
  6.         label var stateabb "State Abbreviation"
  7.         
.         save_data `outstub'/crosswalk.dta, replace key(statename) log(none)
  8. 
.         levelsof statefips, local(fips)
  9.         return local fips "`fips'"
 10. end

. 
. program fed_min_wage_change
  1.         syntax, instub(str) outstub(str)
  2. 
.         import excel using `instub'/VZ_FederalMinimumWage_Changes.xlsx, clear
>  firstrow
  3.         rename Fed_mw fed_mw
  4.         keep year month day fed_mw source
  5. 
.         gen date = mdy(month, day, year)
  6.         format date %td
  7. 
.         replace fed_mw = round(fed_mw, .01)
  8.         label var fed_mw "Federal Minimum Wage"
  9. 
.         order year month day date fed_mw source
 10. 
.         isid date, sort
 11.         export delim using `outstub'/VZ_federal_changes.csv, replace
 12. end

. 
. program add_state_to_fedmw
  1.         syntax, fips(str) outstub(str)
  2.         
.         tsset date
  3.         tsfill
  4. 
.         carryforward year month day fed_mw, replace
  5. 
.         keep date fed_mw
  6. 
.         tempfile temp
  7.         save `temp'
  8.         
.         foreach i in `fips' {
  9.                 use `temp', clear
 10.                 gen statefips = `i'
 11.                 tempfile state`i'
 12.                 save `state`i''
 13.         }
 14.         foreach i in `fips' {
 15.                 if `i' == 1 use `state`i'', clear
 16.                 else quietly append using `state`i''
 17.         }
 18. 
.         compress
 19.         save_data `outstub'/fedmw.dta, replace key(date statefips) log(non
> e)
 20. end

. 
. program state_min_wage_change 
  1.         syntax, instub(str) outstub(str) temp(str)
  2. 
.         import excel using `instub'/VZ_StateMinimumWage_Changes.xlsx, clear f
> irstrow
  3. 
.         gen date = mdy(month,day,year)
  4.         format date %td
  5. 
.         gen double mw = round(VZ_mw, .01)
  6.         gen double mw_healthinsurance = round(VZ_mw_healthinsurance, .01)
  7.         gen double mw_smallbusiness   = round(VZ_mw_smallbusiness, .01)
  8.         drop VZ_mw*
  9. 
.         merge m:1 statefips using `temp'/crosswalk.dta, nogen assert(3)
 10. 
.         order statefips statename stateabb year month day date mw* source sou
> rce_2 source_notes
 11.         label var statefips "State FIPS Code"
 12.         label var statename "State"
 13. 
.         sort stateabb date
 14.         
.         isid statefips date, sort
 15.         export delim using `outstub'/VZ_state_changes.csv, replace 
 16. 
.         tsset statefips date
 17.         tsfill
 18. 
.         keep statefips date mw* source_notes
 19. 
.         foreach x of varlist source_notes {
 20.                 bysort statefips (date): replace `x' = `x'[_n-1] if `x' ==
>  ""
 21.         }
 22.         foreach x of varlist mw* {
 23.                 bysort statefips (date): replace `x' = `x'[_n-1] if `x' ==
>  .
 24.         }
 25. end 

. 
. program prepare_finaldata       
  1.         syntax, begindate(str) finaldate(str) outstub(str) temp(str)
  2. 
.         merge 1:1 statefips date using `temp'/fedmw.dta, nogenerate
  3.         merge m:1 statefips using `temp'/crosswalk.dta, nogen assert(3)
  4. 
.         gen mw_adj = mw
  5.         replace mw_adj = fed_mw if fed_mw >= mw & fed_mw ~= .
  6.         replace mw_adj = fed_mw if mw == . & fed_mw ~= .
  7.         drop mw
  8.         rename mw_adj mw
  9. 
.         keep if date >= td(`begindate') & date <= td(`finaldate')
 10. 
.         order statefips statename stateabb date fed_mw mw
 11.         label var mw "State Minimum Wage"
 12.         notes mw: The mw variable represents the higher rate between the s
> tate and federal minimum wage
 13. 
.         save_data `outstub'/data.dta, replace key(statefips date) log(none)
 14. end

. 
. program export_state_daily
  1.         syntax, instub(str) outstub(str) target_mw(str)
  2. 
.         use `instub'/data.dta, clear
  3. 
.         keep statefips statename stateabb date `target_mw'
  4. 
.         isid statefips date, sort
  5.         export delim using `outstub'/VZ_state_daily.csv, replace 
  6. end

. 
. program export_state_monthly
  1.         syntax, instub(str) outstub(str) target_mw(str)
  2. 
.         use `instub'/data.dta, clear
  3. 
.         keep statefips statename stateabb date `target_mw'
  4. 
.         gen monthly_date = mofd(date)
  5.         format monthly_date %tm
  6. 
.         collapse (max) `target_mw',          ///
>                  by(statefips statename stateabb monthly_date)
  7. 
.         label var monthly_date "Monthly Date"
  8.         label_mw_vars, time_level("Monthly")
  9. 
.         isid statefips monthly_date, sort
 10.         export delim using `outstub'/VZ_state_monthly.csv, replace
 11. end

. 
. program export_state_quarterly
  1.         syntax, instub(str) outstub(str) target_mw(str)
  2. 
.         use `instub'/data.dta, clear
  3. 
.         keep statefips statename stateabb date `target_mw'
  4. 
.         gen quarterly_date = qofd(date)
  5.         format quarterly_date %tq
  6. 
.         collapse (max) `target_mw',           ///
>                  by(statefips statename stateabb quarterly_date)
  7. 
.         label var quarterly_date "Quarterly Date"
  8.         label_mw_vars, time_level("Quarterly")
  9. 
.         isid statefips quarterly_date, sort
 10.         export delim using `outstub'/VZ_state_quarterly.csv, replace 
 11. end

. 
. program export_state_annually
  1.         syntax, instub(str) outstub(str) target_mw(str)
  2. 
.         use `instub'/data.dta, clear
  3. 
.         keep statefips statename stateabb date `target_mw'
  4. 
.         gen year = yofd(date)
  5.         format year %ty
  6. 
.         collapse (max) `target_mw',          ///
>                  by(statefips statename stateabb year)
  7. 
.         label var year "Year"
  8.         label_mw_vars, time_level("Annual")
  9. 
.         isid statefips year, sort
 10.         export delim using `outstub'/VZ_state_annual.csv, replace
 11. end

. 
. program label_mw_vars
  1.         syntax, time_level(str)
  2. 
.         cap label var fed_mw  "`time_level' Federal MW"
  3.         cap label var mw      "`time_level' State MW"   
  4.         cap label var mw_healthinsurance "`time_level' State MW Health and
>  Insurance"
  5.         cap label var mw_smallbusiness "`time_level' State MW Small Busine
> ss"
  6. 
. end

. 
. *EXECUTE
. main 
(0 real changes made)
(data now sorted by statename)
  (0 bytes saved)
===============================================================================
> ===================
File: ../temp/crosswalk.dta
Key: statename
===============================================================================
> ===================
  51:3(112010):1169891571:1356275751

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
   statename |          0
   statefips |         51    28.96078    15.83283          1         56
    stateabb |          0




(note: file ../temp/crosswalk.dta not found)
file ../temp/crosswalk.dta saved
1 2 4 5 6 8 9 10 11 12 13 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32
>  33 34 35 36 37 38 39 40 41 42 44 45 46 47 48 49 50 51 53 54 55 56
(3 real changes made)
(data now sorted by date)
(note: file ../output/VZ_federal_changes.csv not found)
file ../output/VZ_federal_changes.csv saved
        time variable:  date, 01may1974 to 31dec2019, but with gaps
                delta:  1 day
year:  (16,666 real changes made)
month:  (16,666 real changes made)
day:  (16,666 real changes made)
fed_mw:  (16,666 real changes made)
file C:\Users\gabriel\AppData\Local\Temp\ST_2e44_000001.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2e44_000002.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2e44_000003.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2e44_000004.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2e44_000005.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2e44_000006.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2e44_000007.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2e44_000008.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2e44_000009.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2e44_00000a.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2e44_00000b.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2e44_00000c.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2e44_00000d.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2e44_00000e.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2e44_00000f.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2e44_00000g.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2e44_00000h.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2e44_00000i.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2e44_00000j.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2e44_00000k.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2e44_00000l.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2e44_00000m.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2e44_00000n.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2e44_00000o.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2e44_00000p.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2e44_00000q.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2e44_00000r.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2e44_00000s.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2e44_00000t.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2e44_00000u.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2e44_00000v.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2e44_00000w.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2e44_00000x.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2e44_000010.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2e44_000011.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2e44_000012.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2e44_000013.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2e44_000014.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2e44_000015.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2e44_000016.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2e44_000017.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2e44_000018.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2e44_000019.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2e44_00001a.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2e44_00001b.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2e44_00001c.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2e44_00001d.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2e44_00001e.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2e44_00001f.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2e44_00001g.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2e44_00001h.tmp saved
file C:\Users\gabriel\AppData\Local\Temp\ST_2e44_00001i.tmp saved
  variable date was float now int
  variable statefips was float now byte
  (4,253,655 bytes saved)
(data now sorted by date statefips)
  (0 bytes saved)
===============================================================================
> ===================
File: ../temp/fedmw.dta
Key: date statefips
===============================================================================
> ===================
  850731:3(96450):1995356043:2815510735

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
        date |    850,731       13574    4815.393       5234      21914
   statefips |    850,731    28.96078    15.67684          1         56
      fed_mw |    850,731    4.778784    1.662974          2       7.25




(note: file ../temp/fedmw.dta not found)
file ../temp/fedmw.dta saved
(658 missing values generated)
(628 missing values generated)

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                               666  
    -----------------------------------------
(data now sorted by statefips date)
(note: file ../output/VZ_state_changes.csv not found)
file ../output/VZ_state_changes.csv saved
       panel variable:  statefips (unbalanced)
        time variable:  date, 08feb1943 to 01jan2023, but with gaps
                delta:  1 day
(96,598 real changes made)
(573582 real changes made)
(5141 real changes made)
(28850 real changes made)

    Result                           # of obs.
    -----------------------------------------
    not matched                       414,879
        from master                    69,198  
        from using                    345,681  

    matched                           505,050  
    -----------------------------------------

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                           919,929  
    -----------------------------------------
(345,681 missing values generated)
(85,834 real changes made)
(345,681 real changes made)
(69,198 observations deleted)
(data now sorted by statefips date)
  variable date was float now int
  (1,701,462 bytes saved)
===============================================================================
> ===================
File: ../temp/data.dta
Key: statefips date
===============================================================================
> ===================
  850731:9(106708):1677398668:3012031951

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
   statefips |    850,731    28.96078    15.67684          1         56
        date |    850,731       13574    4815.393       5234      21914
   statename |          0
    stateabb |          0
      fed_mw |    850,731    4.778784    1.662974          2       7.25
-------------+---------------------------------------------------------
          mw |    850,731    5.055162    2.009026          2         14
mw_healthi~e |      4,782    6.846048    .7164077       5.15       7.25
mw_smallbu~s |     27,789    5.419747    1.635873          4         11
source_notes |          0




(note: file ../temp/data.dta not found)
file ../temp/data.dta saved
(data already sorted by statefips date)
(note: file ../output/VZ_state_daily.csv not found)
file ../output/VZ_state_daily.csv saved
(data now sorted by statefips monthly_date)
(note: file ../output/VZ_state_monthly.csv not found)
file ../output/VZ_state_monthly.csv saved
(data now sorted by statefips quarterly_date)
(note: file ../output/VZ_state_quarterly.csv not found)
file ../output/VZ_state_quarterly.csv saved
(data now sorted by statefips year)
(note: file ../output/VZ_state_annual.csv not found)
file ../output/VZ_state_annual.csv saved

. 
end of do-file


Execute:  StataMP-64 /e do "./substate_mw.do"

  ___  ____  ____  ____  ____ (R)
 /__    /   ____/   /   ____/
___/   /   /___/   /   /___/   15.1   Copyright 1985-2017 StataCorp LLC
  Statistics/Data Analysis            StataCorp
                                      4905 Lakeway Drive
     MP - Parallel Edition            College Station, Texas 77845 USA
                                      800-STATA-PC        http://www.stata.com
                                      979-696-4600        stata@stata.com
                                      979-696-4601 (fax)

Single-user 32-core Stata perpetual license:
       Serial number:  501506205566
         Licensed to:  KU Leuven FEB (CES)
                       KU Leuven

Notes:
      1.  Stata is running in batch mode.
      2.  Unicode is supported; see help unicode_advice.
      3.  More than 2 billion observations are allowed; see help obs_advice.
      4.  Maximum number of variables is set to 5000; see help set_maxvar.

. do ./substate_mw.do 

. set more off

. clear all

. adopath + ../../lib/stata/gslab_misc/ado
  [1]  (BASE)      "C:\Program Files (x86)\Stata15\ado\base/"
  [2]  (SITE)      "C:\Program Files (x86)\Stata15\ado\site/"
  [3]              "."
  [4]  (PERSONAL)  "c:\ado\personal/"
  [5]  (PLUS)      "c:\ado\plus/"
  [6]  (OLDPLACE)  "c:\ado/"
  [7]              "../../lib/stata/gslab_misc/ado"

. 
. program main 
  1.         local raw "../../drive/raw_data/min_wage"
  2.         local exports "../output"
  3.         local temp "../temp"
  4. 
.         import_crosswalk, instub(`raw') outstub(`temp')
  5.         substate_min_wage_change, instub(`raw') outstub(`exports') temp(`t
> emp')
  6.         prepare_local, temp(`temp')
  7.         prepare_state, outstub(`exports') temp(`temp') finaldate(31Dec2019
> )
  8.         
.         local mw_list = "mw mw_smallbusiness"
  9.         prepare_finaldata, temp(`temp') finaldate(31Dec2019) target_mw(`mw
> _list')
 10. 
. 
.         export_substate_daily,     outstub(`exports') temp(`temp') 
 11.         export_substate_monthly,   outstub(`exports') temp(`temp') target_
> mw(`mw_list')
 12.         export_substate_quarterly, outstub(`exports') temp(`temp') target_
> mw(`mw_list')
 13.         export_substate_annually,  outstub(`exports') temp(`temp') target_
> mw(`mw_list')
 14. end 

. 
. program import_crosswalk, rclass
  1.         syntax, instub(str) outstub(str)
  2.         import excel using `instub'/FIPS_crosswalk.xlsx, clear firstrow 
  3.         
.         rename Name statename
  4.         rename FIPSStateNumericCode statefips
  5.         rename OfficialUSPSCode stateabb
  6.         replace stateabb = upper(stateabb)
  7.         label var stateabb "State Abbreviation"
  8.         
.         keep statename statefips stateabb
  9. 
.         save `outstub'/crosswalk.dta, replace
 10. end

. 
. program substate_min_wage_change
  1.         syntax, instub(str) outstub(str) temp(str)
  2. 
.         import excel using `instub'/VZ_SubstateMinimumWage_Changes.xlsx, clea
> r firstrow
  3. 
.         gen date = mdy(month,day,year)
  4.         format date %td
  5. 
.         gen double mw                 = round(VZ_mw, .01)
  6.         gen double mw_healthinsurance = round(VZ_mw_healthinsurance, .01)
  7.         gen double mw_macrobusiness   = round(VZ_mw_macrobusiness, .01)
  8.         gen double mw_mediumbusiness  = round(VZ_mw_mediumbusiness, .01)
  9.         gen double mw_smallbusiness   = round(VZ_mw_smallbusiness, .01)
 10.         gen double mw_smallbusiness_mincomp = round(VZ_mw_smallbusiness_mi
> ncompensat, .01)
 11.         gen double mw_hotel           = round(VZ_mw_hotel, .01)
 12.         gen double mw_nonprofit       = round(VZ_mw_nonprofit, .01)
 13.         gen double mw_tipped          = round(VZ_mw_tipped, .01)
 14.         drop VZ_mw*
 15. 
.         egen min_mw  = rowmin(mw-mw_tipped)
 16.         egen mean_mw = rowmean(mw-mw_tipped)
 17.         egen max_mw  = rowmax(mw-mw_tipped)
 18. 
.         merge m:1 statefips using `temp'/crosswalk.dta, nogen keep(3)
 19.         label var statefips "State FIPS Code"
 20.         label var statename "State"
 21.         label var stateabb "State Abbreviation"
 22.         label var locality "City/County"
 23.         label var mw "Minimum Wage"
 24.         order statefips statename stateabb locality year month day date mw
>  mw_*  year_bill_passed source source_2 source_notes
 25. 
. 
.         isid locality date, sort
 26.         export delim using `outstub'/VZ_substate_changes.csv, replace 
 27. end

. 
. program prepare_local
  1.         syntax, temp(str)
  2.         preserve
  3.         egen tag = tag(statefips locality)
  4.         keep if tag == 1
  5.         keep statefips locality
  6. 
.         save `temp'\localities.dta, replace
  7.         restore
  8. end

. 
. program prepare_state
  1.         syntax, outstub(str) temp(str) finaldate(str)
  2.         sum year
  3.         local minyear = r(min)
  4.         preserve        
  5.         import delim `outstub'/VZ_state_daily.csv, clear 
  6.         g date2 = date(date, "DMY")
  7.         format date2 %td
  8.         order date2, after(date)
  9.         drop date 
 10.         rename date2 date
 11.         keep if year(date) >= `minyear' & date <= td(`finaldate')
 12.         joinby statefips using `temp'/localities.dta
 13.         keep statefips statename stateabb locality date mw
 14.         rename mw state_mw
 15.         save `temp'/statemw.dta, replace
 16.         restore
 17. end

. 
. program prepare_finaldata
  1.         syntax, temp(str) finaldate(str) target_mw(str)
  2.         
.         encode locality, gen(locality_temp)
  3. 
.         tsset locality_temp date
  4.         tsfill
  5. 
.         foreach x of varlist statename stateabb locality source_notes {
  6.           bysort locality_temp (date): replace `x' = `x'[_n-1] if `x' == "
> "
  7.         }
  8.         foreach x of varlist statefips year_bill_passed mw* {
  9.           bysort locality_temp (date): replace `x' = `x'[_n-1] if `x' == .
 10.         }
 11. 
.         keep if date <= td(`finaldate')
 12. 
.         merge 1:m statefips locality date using `temp'/statemw.dta, assert(2 
> 3) nogenerate
 13. 
.         replace mw = state_mw if mw == .
 14.         replace mw = round(mw,0.01)
 15.         gen abovestate_mw = mw > state_mw
 16.         label var abovestate_mw "Local `var' > State min wage"
 17. 
.         local mw "mw"
 18.         local new_target_mw: list target_mw - mw 
 19.         
.         foreach var in `new_target_mw' {
 20.                 replace `var' = mw if `var' == .
 21.                 replace `var' = round(`var',0.01)
 22.                 gen abovestate_`var' = `var' > state_mw
 23.                 label var abovestate_`var' "Local `var' > State min wage" 
>               
 24.         }
 25. 
. 
. 
.         keep statefips statename stateabb date locality mw mw_* abovestate_* 
> year_bill_passed source_notes
 26.         order statefips statename stateabb date locality mw mw_* abovestat
> e_*  year_bill_passed source_notes
 27. 
.         notes mw: The mw variable represents the most applicable minimum wage
>  across the locality.
 28. 
.         save_data `temp'/data.dta, key(statefips locality date) replace log(n
> one)
 29. end

. 
. program export_substate_daily
  1.         syntax, outstub(str) temp(str) 
  2.                 
.         use `temp'/data.dta, clear
  3.         sort locality date
  4.         export delim using `outstub'\VZ_substate_daily.csv, replace
  5. end

. 
. program export_substate_monthly
  1.         syntax, outstub(str) temp(str) target_mw(str)
  2.         use `temp'/data.dta, clear
  3. 
.         gen monthly_date = mofd(date)
  4.         format monthly_date %tm
  5. 
.         collapse (max) `target_mw' abovestate_*, by(statefips statename state
> abb locality monthly_date)
  6. 
.         label var monthly_date "Monthly Date"
  7.         label_mw_vars, time_level("Monthly")
  8. 
.         sort locality monthly_date
  9. 
.         export delim using `outstub'/VZ_substate_monthly.csv, replace 
 10. end 

. 
. program export_substate_quarterly
  1.         syntax, outstub(str) temp(str) target_mw(str)
  2.         use `temp'/data.dta, clear
  3. 
.         gen quarterly_date = qofd(date)
  4.         format quarterly_date %tq
  5. 
.         collapse (max) `target_mw' abovestate_*, by(statefips statename state
> abb locality quarterly_date)
  6. 
.         label var quarterly_date "Quarterly Date"
  7.         label_mw_vars, time_level("Quarterly")
  8. 
.         sort locality quarterly_date
  9. 
.         export delim using `outstub'/VZ_substate_quarterly.csv, replace
 10. end 

. 
. program export_substate_annually
  1.         syntax, outstub(str) temp(str) target_mw(str)
  2.         use `temp'/data.dta, clear
  3. 
.         gen year = yofd(date)
  4.         format year %ty
  5. 
.         collapse (max) `target_mw' abovestate_*, by(statefips statename state
> abb locality year)
  6. 
.         label var year "Year"
  7.         label_mw_vars, time_level("Annual")
  8. 
.         sort locality year
  9. 
.         export delim using `outstub'/VZ_substate_annual.csv, replace 
 10. end

. 
. program label_mw_vars
  1.         syntax, time_level(str)
  2. 
.         cap label var mw     "`time_level' MW"  
  3.         cap label var abovestate_mw "Local > State min wage"    
  4.         cap label var mw_healthinsurance "`time_level' State MW Health and
>  Insurance"
  5.         cap label var mw_smallbusiness "`time_level' State MW Small Busine
> ss"
  6. end

. 
. * EXECUTE
. main 
(0 real changes made)
file ../temp/crosswalk.dta saved
(17 missing values generated)
(310 missing values generated)
(330 missing values generated)
(328 missing values generated)
(245 missing values generated)
(329 missing values generated)
(327 missing values generated)
(324 missing values generated)
(275 missing values generated)
(4 missing values generated)
(4 missing values generated)
(4 missing values generated)

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                               335  
    -----------------------------------------
variable year_bill_passed not found
r(111);

end of do-file
r(111);

 make.py ended: 2020-04-30 19:16:00
