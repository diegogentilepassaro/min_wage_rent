
 make.py started: 2020-03-05 15:26:27 /Users/dgentil1/Desktop/Diego/min_wage_rent/base/code 




Execute:  R CMD BATCH --no-save "./RenameZillowVars_zipLevel.R" RenameZillowVars_zipLevel.Rout

R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> source("../../lib/R/library.R")
Loading required package: ggplot2

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> load_packages(c('tidyverse', 'data.table'))
── Attaching packages ─────────────────────────────────────── tidyverse 1.2.1 ──
✔ tibble  2.1.3     ✔ purrr   0.3.2
✔ tidyr   1.0.0     ✔ stringr 1.4.0
✔ readr   1.3.1     ✔ forcats 0.4.0
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()

Attaching package: ‘data.table’

The following object is masked from ‘package:purrr’:

    transpose

The following objects are masked from ‘package:dplyr’:

    between, first, last

> 
> main <- function() {
+    
+    datadir <- '../../raw_data/zillow/'
+    outputdir <- "../output/"
+    
+    rename_zillow_vars(infiles = datadir, outdir = outputdir)
+ }
> 
> rename_zillow_vars <- function(infiles, outdir){
+    filenames <- list.files(infiles)
+    filenames <- filenames[str_detect(filenames, "Zip_*")]
+    filenames <- filenames[!str_detect(filenames, "_Summary.csv")]
+    
+    oldnames = c('RegionName', 'City', 'State', 'Metro', 'CountyName')
+    newnames = c('zipcode', 'city', 'stateabb', 'msa', 'county')
+    
+    format <- lapply(filenames, function(x) {
+       
+       df <- data.table::fread(paste0(infiles, x), stringsAsFactors = F)
+       df[,SizeRank:=NULL]
+       data.table::setnames(df, old = oldnames, new = newnames)
+       df[, county := str_replace_all(county, " County", "")]
+       
+       save_data(df = df, key = newnames,
+                 filename = paste0(outdir, x))
+    })
+ }
> 
> main()
[1] "File '../output/Zip_MedianRentalPrice_2Bedroom.csv' saved successfully."


[1] "Log file generated successfully."
[1] "File '../output/Zip_MedianRentalPricePerSqft_2Bedroom.csv' saved successfully."


[1] "Log file generated successfully."
[1] "File '../output/Zip_MedianRentalPricePerSqft_Sfr.csv' saved successfully."


[1] "Log file generated successfully."
[1] "File '../output/Zip_Zhvi_2bedroom.csv' saved successfully."


[1] "Log file generated successfully."
> 
> proc.time()
   user  system elapsed 
 37.287   1.324  38.656 


Execute:  R CMD BATCH --no-save "./cleanGeoRelationshipFiles.R" cleanGeoRelationshipFiles.Rout

R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> source("../../lib/R/library.R")
Loading required package: ggplot2

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> load_packages(c('tidyverse', 'data.table', 'tidycensus'))
── Attaching packages ─────────────────────────────────────── tidyverse 1.2.1 ──
✔ tibble  2.1.3     ✔ purrr   0.3.2
✔ tidyr   1.0.0     ✔ stringr 1.4.0
✔ readr   1.3.1     ✔ forcats 0.4.0
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()

Attaching package: ‘data.table’

The following object is masked from ‘package:purrr’:

    transpose

The following objects are masked from ‘package:dplyr’:

    between, first, last

> 
> datadir <- '../../raw_data/census/'
> tempdir <- "../temp/"
> outputdir <- "../output/"
> 
> main <- function(){
+    
+    datadir   <- '../../raw_data/census/'
+    outputdir <- "../output/"
+    
+    clean_2010census_gazzetter(instub  = paste0(datadir, 'Gaz_places_national.txt'),
+                               outstub = paste0(outputdir, 'places10.csv'),
+                               key     = c('state', 'place'))
+    
+    clean_zip_place_relantionship(instub  = paste0(datadir, 'zcta_place_rel_10.txt'),
+                                  outstub = paste0(outputdir, 'zip_places10.csv'),
+                                  key      = c('state', 'place', 'zipcode'))
+    
+    clean_zip_county_relantionship(instub  = paste0(datadir, 'zcta_county_rel_10.txt'),
+                                   outstub = paste0(outputdir, 'zip_county10.csv'),
+                                   key     = c('state', 'county', 'zipcode'))
+ }
> 
> 
> clean_2010census_gazzetter <- function(instub, outstub, key) {
+    places10 <- fread(instub)  
+    
+    places10 <- places10[USPS!='PR',]                                 
+    places10[ , GEOID:=str_pad(as.character(GEOID), 7, pad = "0")]
+    places10[ , c('state', 'place') := .((substr(GEOID, 1, 2)), (substr(GEOID, 3, 7)))]
+    places10[ , placetype := word(NAME, -1)]
+    places10[ , NAME := gsub("\\s*\\w*$", "", NAME)]
+    
+    setnames(places10, old = c('USPS','NAME', 'POP10', 'ALAND'), 
+                       new = c('stateabb', 'placename', 'placepop10', 'landarea'))
+    varplace10 <- c('state', 'stateabb', 'place', 'placename', 'placetype', 'placepop10', 'landarea')
+    places10 <- places10[ ,..varplace10]
+    
+    save_data(df = places10, key = key, filename = outstub)
+ }
> 
> 
> clean_zip_place_relantionship <- function(instub, outstub, key) {
+    zctaPlace10 <- fread(instub)
+ 
+    zctaPlace10[ ,c('ZCTA5', 'PLACE'):= .(str_pad(as.character(ZCTA5),5 , pad = "0"), 
+                                         str_pad(as.character(PLACE),5,  pad = "0"))]
+    zctaPlace10[ ,STATE := str_pad(as.character(STATE), 2, pad = "0")]
+    
+    zcta_oldvars <- c('ZCTA5', 'PLACE', 'STATE', 'ZPOP', 'POPPT', 'ZPOPPCT', 'PLPOPPCT', 'ZHU', 'ZHUPCT', 
+                      'PLHU', 'PLHUPCT', 'ZAREALANDPCT')
+    zcta_newvars <- c('zipcode', 'place', 'state', 'zippop10', 'relpop10', 'zippctpop10', 'placepctpop10', 
+                      'ziphouse10', 'zippcthouse10', 'placehouse10', 'placepcthouse10', 'zippctland')
+    
+    setnames(zctaPlace10, old = zcta_oldvars, new = zcta_newvars)
+    zctaPlace10 <- zctaPlace10[,..zcta_newvars]
+    
+    save_data(df = zctaPlace10, key = key, filename = outstub)
+ }
> 
> 
> clean_zip_county_relantionship <- function(instub, outstub, key) {
+    zctaCounty10 <- fread(instub)
+    
+    county_oldvars <- c('ZCTA5', 'STATE', 'COUNTY', 'ZPOPPCT', 'ZHUPCT', 'ZAREALANDPCT')
+    county_newvars <- c('zipcode', 'state', 'county', 'zippctpop10', 'zippcthouse10', 'zippctland')
+    setnames(zctaCounty10, old = county_oldvars, new = county_newvars)
+    zctaCounty10 <- zctaCounty10[ ,..county_newvars]
+    
+    zctaCounty10[, c('county','state') := .(str_pad(as.character(county), 3, pad ="0"), 
+                                            str_pad(as.character(state), 2, pad ="0"))]
+    countyNames <- fips_codes
+    countyNames <- countyNames[, c('state_code', 'county_code', 'county')]
+    countyNames <- setDT(countyNames)
+    
+    setnames(countyNames, old = c('state_code', 'county_code', 'county'), new = c('state', 'county', 'countyname'))
+    zctaCounty10 <- countyNames[zctaCounty10, on = c('state', 'county')]
+    USterritories <- c(60,66,69,72,78)
+    zctaCounty10 <- zctaCounty10[!state %in% USterritories,]
+    
+    save_data(df = zctaCounty10, key = key, filename = outstub)
+ }
> 
> main()
[1] "File '../output/places10.csv' saved successfully."


[1] "Log file generated successfully."
[1] "File '../output/zip_places10.csv' saved successfully."


[1] "Log file generated successfully."
[1] "File '../output/zip_county10.csv' saved successfully."


[1] "Log file generated successfully."
Warning messages:
1: In require_bit64() :
  Some columns are type 'integer64' but package bit64 is not installed. Those columns will print as strange looking floating point data. There is no need to reload the data. Simply install.packages('bit64') to obtain the integer64 print method and print the data again.
2: In require_bit64() :
  Some columns are type 'integer64' but package bit64 is not installed. Those columns will print as strange looking floating point data. There is no need to reload the data. Simply install.packages('bit64') to obtain the integer64 print method and print the data again.
3: In require_bit64() :
  Some columns are type 'integer64' but package bit64 is not installed. Those columns will print as strange looking floating point data. There is no need to reload the data. Simply install.packages('bit64') to obtain the integer64 print method and print the data again.
> 
> proc.time()
   user  system elapsed 
  5.799   0.475   5.677 


Execute:  stataSE -e do "./state_mw.do"

  ___  ____  ____  ____  ____ (R)
 /__    /   ____/   /   ____/
___/   /   /___/   /   /___/   16.1   Copyright 1985-2019 StataCorp LLC
  Statistics/Data Analysis            StataCorp
                                      4905 Lakeway Drive
     Special Edition                  College Station, Texas 77845 USA
                                      800-STATA-PC        http://www.stata.com
                                      979-696-4600        stata@stata.com
                                      979-696-4601 (fax)

120-user Stata network perpetual license:
       Serial number:  401606201670
         Licensed to:  Brown University
                       Brown University

Notes:
      1.  Stata is running in batch mode.
      2.  Unicode is supported; see help unicode_advice.
      3.  Maximum number of variables is set to 5000; see help set_maxvar.

. do ./state_mw.do 

. set more off

. clear all

. adopath + ../../lib/stata/gslab_misc/ado
  [1]  (BASE)      "/Applications/Stata/ado/base/"
  [2]  (SITE)      "/Applications/Stata/ado/site/"
  [3]              "."
  [4]  (PERSONAL)  "/Users/dgentil1/Documents/Stata/ado/personal/"
  [5]  (PLUS)      "/Users/dgentil1/Library/Application Support/Stata/ado/plus/"
  [6]  (OLDPLACE)  "~/ado/"
  [7]              "../../lib/stata/gslab_misc/ado"

. 
. program main
  1.         local raw "../../raw_data/min_wage/"
  2.         local exports "../output/"
  3.         local temp "../temp/"
  4. 
.         import_crosswalk, instub(`raw') outstub(`temp')
  5.         local fips = r(fips)
  6. 
.         fed_min_wage_change, instub(`raw') outstub(`exports') 
  7.         add_state_to_fedmw,  fips("`fips'") outstub(`temp')
  8.         state_min_wage_change, instub(`raw') outstub(`exports') temp(`temp')
  9.         
.         prepare_finaldata, begindate(01may1974) finaldate(01jul2016)           ///
>                                            outstub(`temp') temp(`temp')
 10.         
.         export_state_daily,     instub(`temp') outstub(`exports')
 11.         export_state_monthly,   instub(`temp') outstub(`exports')
 12.         export_state_quarterly, instub(`temp') outstub(`exports')
 13.         export_state_annually,  instub(`temp') outstub(`exports')
 14. end

. 
. program import_crosswalk, rclass
  1.         syntax, instub(str) outstub(str)
  2. 
.         import excel using `instub'FIPS_crosswalk.xlsx, clear firstrow
  3.         rename (Name       FIPSStateNumericCode  OfficialUSPSCode)           ///
>                    (statename  statefips             stateabb)
  4.         drop sname
  5. 
.         replace stateabb = upper(stateabb)
  6.         label var stateabb "State Abbreviation"
  7.         
.         save_data `outstub'crosswalk.dta, replace key(statename) log(none)
  8. 
.         levelsof statefips, local(fips)
  9.         return local fips "`fips'"
 10. end

. 
. program fed_min_wage_change
  1.         syntax, instub(str) outstub(str)
  2. 
.         import excel using `instub'VZ_FederalMinimumWage_Changes.xlsx, clear firstrow
  3.         rename Fed_mw fed_mw
  4.         keep year month day fed_mw source
  5. 
.         gen date = mdy(month, day, year)
  6.         format date %td
  7. 
.         replace fed_mw = round(fed_mw, .01)
  8.         label var fed_mw "Federal Minimum Wage"
  9. 
.         order year month day date fed_mw source
 10. 
.         isid date, sort
 11.         export delim using `outstub'VZ_federal_changes.csv, replace
 12. end

. 
. program add_state_to_fedmw
  1.         syntax, fips(str) outstub(str)
  2.         
.         tsset date
  3.         tsfill
  4. 
.         carryforward year month day fed_mw, replace
  5. 
.         keep date fed_mw
  6. 
.         tempfile temp
  7.         save `temp'
  8.         
.         foreach i in `fips' {
  9.                 use `temp', clear
 10.                 gen statefips = `i'
 11.                 tempfile state`i'
 12.                 save `state`i''
 13.         }
 14.         foreach i in `fips' {
 15.                 if `i' == 1 use `state`i'', clear
 16.                 else quietly append using `state`i''
 17.         }
 18. 
.         compress
 19.         save_data `outstub'fedmw.dta, replace key(date statefips) log(none)
 20. end

. 
. program state_min_wage_change 
  1.         syntax, instub(str) outstub(str) temp(str)
  2. 
.         import excel using `instub'VZ_StateMinimumWage_Changes.xlsx, clear firstrow
  3. 
.         gen date = mdy(month,day,year)
  4.         format date %td
  5. 
.         gen double mw = round(VZ_mw, .01)
  6.         gen double mw_healthinsurance = round(VZ_mw_healthinsurance, .01)
  7.         gen double mw_smallbusiness   = round(VZ_mw_smallbusiness, .01)
  8.         drop VZ_mw*
  9. 
.         merge m:1 statefips using `temp'crosswalk.dta, nogen assert(3)
 10. 
.         order statefips statename stateabb year month day date mw* source source_2 source_notes
 11.         label var statefips "State FIPS Code"
 12.         label var statename "State"
 13. 
.         sort stateabb date
 14.         
.         isid statefips date, sort
 15.         export delim using `outstub'VZ_state_changes.csv, replace 
 16. 
.         tsset statefips date
 17.         tsfill
 18. 
.         keep statefips date mw* source_notes
 19. 
.         foreach x of varlist source_notes {
 20.                 bysort statefips (date): replace `x' = `x'[_n-1] if `x' == ""
 21.         }
 22.         foreach x of varlist mw* {
 23.                 bysort statefips (date): replace `x' = `x'[_n-1] if `x' == .
 24.         }
 25. end 

. 
. program prepare_finaldata       
  1.         syntax, begindate(str) finaldate(str) outstub(str) temp(str)
  2. 
.         merge 1:1 statefips date using `temp'fedmw.dta, nogenerate
  3.         merge m:1 statefips using `temp'crosswalk.dta, nogen assert(3)
  4. 
.         gen mw_adj = mw
  5.         replace mw_adj = fed_mw if fed_mw >= mw & fed_mw ~= .
  6.         replace mw_adj = fed_mw if mw == . & fed_mw ~= .
  7.         drop mw
  8.         rename mw_adj mw
  9. 
.         keep if date >= td(`begindate') & date <= td(`finaldate')
 10. 
.         order statefips statename stateabb date fed_mw mw
 11.         label var mw "State Minimum Wage"
 12.         notes mw: The mw variable represents the higher rate between the state and federal minimum wage
 13. 
.         save_data `outstub'data.dta, replace key(statefips date) log(none)
 14. end

. 
. program export_state_daily
  1.         syntax, instub(str) outstub(str)
  2. 
.         use `instub'data.dta, clear
  3. 
.         isid statefips date, sort
  4.         export delim using `outstub'VZ_state_daily.csv, replace 
  5. end

. 
. program export_state_monthly
  1.         syntax, instub(str) outstub(str)
  2. 
.         use `instub'data.dta, clear
  3. 
.         gen monthly_date = mofd(date)
  4.         format monthly_date %tm
  5. 
.         collapse (min) min_fed_mw = fed_mw min_mw = mw           ///
>                  (mean) mean_fed_mw = fed_mw mean_mw = mw        ///
>                  (max) max_fed_mw = fed_mw max_mw = mw,          ///
>                  by(statefips statename stateabb monthly_date)
  6. 
.         label var monthly_date "Monthly Date"
  7.         label_mw_vars, time_level("Monthly")
  8. 
.         isid statefips monthly_date, sort
  9.         export delim using `outstub'VZ_state_monthly.csv, replace
 10. end

. 
. program export_state_quarterly
  1.         syntax, instub(str) outstub(str)
  2. 
.         use `instub'data.dta, clear
  3. 
.         gen quarterly_date = qofd(date)
  4.         format quarterly_date %tq
  5. 
.         collapse (min) min_fed_mw = fed_mw min_mw = mw           ///
>                  (mean) mean_fed_mw = fed_mw mean_mw = mw        ///
>                  (max) max_fed_mw = fed_mw max_mw = mw,          ///
>                  by(statefips statename stateabb quarterly_date)
  6. 
.         label var quarterly_date "Quarterly Date"
  7.         label_mw_vars, time_level("Quarterly")
  8. 
.         isid statefips quarterly_date, sort
  9.         export delim using `outstub'VZ_state_quarterly.csv, replace 
 10. end

. 
. program export_state_annually
  1.         syntax, instub(str) outstub(str)
  2. 
.         use `instub'data.dta, clear
  3. 
.         gen year = yofd(date)
  4.         format year %ty
  5. 
.         collapse (min) min_fed_mw = fed_mw min_mw = mw           ///
>                  (mean) mean_fed_mw = fed_mw mean_mw = mw        ///
>                  (max) max_fed_mw = fed_mw max_mw = mw,          ///
>                  by(statefips statename stateabb year)
  6. 
.         label var year "Year"
  7.         label_mw_vars, time_level("Annual")
  8. 
.         isid statefips year, sort
  9.         export delim using `outstub'VZ_state_annual.csv, replace
 10. end

. 
. program label_mw_vars
  1.         syntax, time_level(str)
  2. 
.         label var min_fed_mw  "`time_level' Federal Minimum"
  3.         label var min_mw      "`time_level' State Minimum"
  4. 
.         label var mean_fed_mw "`time_level' Federal Average"
  5.         label var mean_mw     "`time_level' State Average"
  6. 
.         label var max_fed_mw  "`time_level' Federal Maximum"
  7.         label var max_mw      "`time_level' State Maximum"      
  8. end

. 
. *EXECUTE
. main 
(4 vars, 51 obs)
(0 real changes made)
(data now sorted by statename)
  (0 bytes saved)
==================================================================================================
File: ../temp/crosswalk.dta
Key: statename
==================================================================================================
  51:3(112010):1169891571:1356275751

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
   statename |          0
   statefips |         51    28.96078    15.83283          1         56
    stateabb |          0




(note: file ../temp/crosswalk.dta not found)
file ../temp/crosswalk.dta saved
1 2 4 5 6 8 9 10 11 12 13 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 44 45 46 47 4
> 8 49 50 51 53 54 55 56
(1,024 vars, 15 obs)
(3 real changes made)
(data now sorted by date)
(note: file ../output/VZ_federal_changes.csv not found)
file ../output/VZ_federal_changes.csv saved
        time variable:  date, 01may1974 to 01jul2016, but with gaps
                delta:  1 day
year:  (15,388 real changes made)
month:  (15,388 real changes made)
day:  (15,388 real changes made)
fed_mw:  (15,388 real changes made)
file /var/folders/ts/jpght56s4fx3lw4w3m18dbb40000gn/T//S_09334.000001 saved
file /var/folders/ts/jpght56s4fx3lw4w3m18dbb40000gn/T//S_09334.000002 saved
file /var/folders/ts/jpght56s4fx3lw4w3m18dbb40000gn/T//S_09334.000003 saved
file /var/folders/ts/jpght56s4fx3lw4w3m18dbb40000gn/T//S_09334.000004 saved
file /var/folders/ts/jpght56s4fx3lw4w3m18dbb40000gn/T//S_09334.000005 saved
file /var/folders/ts/jpght56s4fx3lw4w3m18dbb40000gn/T//S_09334.000006 saved
file /var/folders/ts/jpght56s4fx3lw4w3m18dbb40000gn/T//S_09334.000007 saved
file /var/folders/ts/jpght56s4fx3lw4w3m18dbb40000gn/T//S_09334.000008 saved
file /var/folders/ts/jpght56s4fx3lw4w3m18dbb40000gn/T//S_09334.000009 saved
file /var/folders/ts/jpght56s4fx3lw4w3m18dbb40000gn/T//S_09334.00000a saved
file /var/folders/ts/jpght56s4fx3lw4w3m18dbb40000gn/T//S_09334.00000b saved
file /var/folders/ts/jpght56s4fx3lw4w3m18dbb40000gn/T//S_09334.00000c saved
file /var/folders/ts/jpght56s4fx3lw4w3m18dbb40000gn/T//S_09334.00000d saved
file /var/folders/ts/jpght56s4fx3lw4w3m18dbb40000gn/T//S_09334.00000e saved
file /var/folders/ts/jpght56s4fx3lw4w3m18dbb40000gn/T//S_09334.00000f saved
file /var/folders/ts/jpght56s4fx3lw4w3m18dbb40000gn/T//S_09334.00000g saved
file /var/folders/ts/jpght56s4fx3lw4w3m18dbb40000gn/T//S_09334.00000h saved
file /var/folders/ts/jpght56s4fx3lw4w3m18dbb40000gn/T//S_09334.00000i saved
file /var/folders/ts/jpght56s4fx3lw4w3m18dbb40000gn/T//S_09334.00000j saved
file /var/folders/ts/jpght56s4fx3lw4w3m18dbb40000gn/T//S_09334.00000k saved
file /var/folders/ts/jpght56s4fx3lw4w3m18dbb40000gn/T//S_09334.00000l saved
file /var/folders/ts/jpght56s4fx3lw4w3m18dbb40000gn/T//S_09334.00000m saved
file /var/folders/ts/jpght56s4fx3lw4w3m18dbb40000gn/T//S_09334.00000n saved
file /var/folders/ts/jpght56s4fx3lw4w3m18dbb40000gn/T//S_09334.00000o saved
file /var/folders/ts/jpght56s4fx3lw4w3m18dbb40000gn/T//S_09334.00000p saved
file /var/folders/ts/jpght56s4fx3lw4w3m18dbb40000gn/T//S_09334.00000q saved
file /var/folders/ts/jpght56s4fx3lw4w3m18dbb40000gn/T//S_09334.00000r saved
file /var/folders/ts/jpght56s4fx3lw4w3m18dbb40000gn/T//S_09334.00000s saved
file /var/folders/ts/jpght56s4fx3lw4w3m18dbb40000gn/T//S_09334.00000t saved
file /var/folders/ts/jpght56s4fx3lw4w3m18dbb40000gn/T//S_09334.00000u saved
file /var/folders/ts/jpght56s4fx3lw4w3m18dbb40000gn/T//S_09334.00000v saved
file /var/folders/ts/jpght56s4fx3lw4w3m18dbb40000gn/T//S_09334.00000w saved
file /var/folders/ts/jpght56s4fx3lw4w3m18dbb40000gn/T//S_09334.00000x saved
file /var/folders/ts/jpght56s4fx3lw4w3m18dbb40000gn/T//S_09334.000010 saved
file /var/folders/ts/jpght56s4fx3lw4w3m18dbb40000gn/T//S_09334.000011 saved
file /var/folders/ts/jpght56s4fx3lw4w3m18dbb40000gn/T//S_09334.000012 saved
file /var/folders/ts/jpght56s4fx3lw4w3m18dbb40000gn/T//S_09334.000013 saved
file /var/folders/ts/jpght56s4fx3lw4w3m18dbb40000gn/T//S_09334.000014 saved
file /var/folders/ts/jpght56s4fx3lw4w3m18dbb40000gn/T//S_09334.000015 saved
file /var/folders/ts/jpght56s4fx3lw4w3m18dbb40000gn/T//S_09334.000016 saved
file /var/folders/ts/jpght56s4fx3lw4w3m18dbb40000gn/T//S_09334.000017 saved
file /var/folders/ts/jpght56s4fx3lw4w3m18dbb40000gn/T//S_09334.000018 saved
file /var/folders/ts/jpght56s4fx3lw4w3m18dbb40000gn/T//S_09334.000019 saved
file /var/folders/ts/jpght56s4fx3lw4w3m18dbb40000gn/T//S_09334.00001a saved
file /var/folders/ts/jpght56s4fx3lw4w3m18dbb40000gn/T//S_09334.00001b saved
file /var/folders/ts/jpght56s4fx3lw4w3m18dbb40000gn/T//S_09334.00001c saved
file /var/folders/ts/jpght56s4fx3lw4w3m18dbb40000gn/T//S_09334.00001d saved
file /var/folders/ts/jpght56s4fx3lw4w3m18dbb40000gn/T//S_09334.00001e saved
file /var/folders/ts/jpght56s4fx3lw4w3m18dbb40000gn/T//S_09334.00001f saved
file /var/folders/ts/jpght56s4fx3lw4w3m18dbb40000gn/T//S_09334.00001g saved
file /var/folders/ts/jpght56s4fx3lw4w3m18dbb40000gn/T//S_09334.00001h saved
file /var/folders/ts/jpght56s4fx3lw4w3m18dbb40000gn/T//S_09334.00001i saved
  variable date was float now int
  variable statefips was float now byte
  (3,927,765 bytes saved)
(data now sorted by date statefips)
  (0 bytes saved)
==================================================================================================
File: ../temp/fedmw.dta
Key: date statefips
==================================================================================================
  785553:3(96450):3330260879:335093677

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
        date |    785,553       12935    4446.466       5234      20636
   statefips |    785,553    28.96078    15.67685          1         56
      fed_mw |    785,553    4.573745    1.564033          2       7.25




(note: file ../temp/fedmw.dta not found)
file ../temp/fedmw.dta saved
(11 vars, 602 obs)
(596 missing values generated)
(578 missing values generated)

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                               602  
    -----------------------------------------
(data now sorted by statefips date)
(note: file ../output/VZ_state_changes.csv not found)
file ../output/VZ_state_changes.csv saved
       panel variable:  statefips (unbalanced)
        time variable:  date, 08feb1943 to 31dec2020, but with gaps
                delta:  1 day
(75,247 real changes made)
(510,767 real changes made)
(3,498 real changes made)
(22,867 real changes made)

    Result                           # of obs.
    -----------------------------------------
    not matched                       415,958
        from master                    70,887  
        from using                    345,071  

    matched                           440,482  
    -----------------------------------------

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                           856,440  
    -----------------------------------------
(345,071 missing values generated)
(85,166 real changes made)
(345,071 real changes made)
(70,887 observations deleted)
(data now sorted by statefips date)
  variable date was float now int
  (1,571,106 bytes saved)
==================================================================================================
File: ../temp/data.dta
Key: statefips date
==================================================================================================
  785553:9(106708):954589161:295318411

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
   statefips |    785,553    28.96078    15.67685          1         56
        date |    785,553       12935    4446.466       5234      20636
   statename |          0
    stateabb |          0
      fed_mw |    785,553    4.573745    1.564033          2       7.25
-------------+---------------------------------------------------------
          mw |    785,553    4.765857    1.762111          2       11.5
mw_healthi~e |      3,504    6.698716    .7869183       5.15       7.25
mw_smallbu~s |     22,860    5.017288    1.101783          4       7.25
source_notes |          0




(note: file ../temp/data.dta not found)
file ../temp/data.dta saved
(data already sorted by statefips date)
(note: file ../output/VZ_state_daily.csv not found)
file ../output/VZ_state_daily.csv saved
(data now sorted by statefips monthly_date)
(note: file ../output/VZ_state_monthly.csv not found)
file ../output/VZ_state_monthly.csv saved
(data now sorted by statefips quarterly_date)
(note: file ../output/VZ_state_quarterly.csv not found)
file ../output/VZ_state_quarterly.csv saved
(data now sorted by statefips year)
(note: file ../output/VZ_state_annual.csv not found)
file ../output/VZ_state_annual.csv saved

. 
end of do-file


Execute:  stataSE -e do "./substate_mw.do"

  ___  ____  ____  ____  ____ (R)
 /__    /   ____/   /   ____/
___/   /   /___/   /   /___/   16.1   Copyright 1985-2019 StataCorp LLC
  Statistics/Data Analysis            StataCorp
                                      4905 Lakeway Drive
     Special Edition                  College Station, Texas 77845 USA
                                      800-STATA-PC        http://www.stata.com
                                      979-696-4600        stata@stata.com
                                      979-696-4601 (fax)

120-user Stata network perpetual license:
       Serial number:  401606201670
         Licensed to:  Brown University
                       Brown University

Notes:
      1.  Stata is running in batch mode.
      2.  Unicode is supported; see help unicode_advice.
      3.  Maximum number of variables is set to 5000; see help set_maxvar.

. do ./substate_mw.do 

. set more off

. clear all

. adopath + ../../lib/stata/gslab_misc/ado
  [1]  (BASE)      "/Applications/Stata/ado/base/"
  [2]  (SITE)      "/Applications/Stata/ado/site/"
  [3]              "."
  [4]  (PERSONAL)  "/Users/dgentil1/Documents/Stata/ado/personal/"
  [5]  (PLUS)      "/Users/dgentil1/Library/Application Support/Stata/ado/plus/"
  [6]  (OLDPLACE)  "~/ado/"
  [7]              "../../lib/stata/gslab_misc/ado"

. 
. program main 
  1.         local raw "../../raw_data/min_wage/"
  2.         local exports "../output/"
  3.         local temp "../temp/"
  4. 
.         import_crosswalk, instub(`raw') outstub(`exports')
  5.         substate_min_wage_change, instub(`raw') outstub(`exports') temp(`temp')
  6.         prepare_local, temp(`temp')
  7.         prepare_state, outstub(`exports') temp(`temp') finaldate(01Jul2016)
  8.         prepare_finaldata, temp(`temp') finaldate(01Jul2016)
  9. 
.         export_substate_daily,     outstub(`exports') temp(`temp')
 10.         export_substate_monthly,   outstub(`exports') temp(`temp')
 11.         export_substate_quarterly, outstub(`exports') temp(`temp')
 12.         export_substate_annually,  outstub(`exports') temp(`temp')
 13. end 

. 
. program import_crosswalk, rclass
  1.         syntax, instub(str) outstub(str)
  2.         import excel using `instub'FIPS_crosswalk.xlsx, clear firstrow 
  3.         
.         rename Name statename
  4.         rename FIPSStateNumericCode statefips
  5.         rename OfficialUSPSCode stateabb
  6.         replace stateabb = upper(stateabb)
  7.         label var stateabb "State Abbreviation"
  8.         
.         keep statename statefips stateabb
  9. 
.         save `outstub'crosswalk.dta, replace
 10. end

. 
. program substate_min_wage_change
  1.         syntax, instub(str) outstub(str) temp(str)
  2. 
.         import excel using `instub'VZ_SubstateMinimumWage_Changes.xlsx, clear firstrow
  3. 
.         gen date = mdy(month,day,year)
  4.         format date %td
  5. 
.         gen double mw = round(VZ_mw, .01)
  6.         gen double mw_tipped = round(VZ_mw_tipped, .01)
  7.         gen double mw_healthinsurance = round(VZ_mw_healthinsurance, .01)
  8.         gen double mw_smallbusiness = round(VZ_mw_smallbusiness, .01)
  9.         gen double mw_smallbusiness_mincomp = round(VZ_mw_smallbusiness_mincompensat, .01)
 10.         gen double mw_hotel = round(VZ_mw_hotel, .01)
 11.         drop VZ_mw*
 12. 
.         merge m:1 statefips using `temp'crosswalk.dta, nogen keep(3)
 13.         label var statefips "State FIPS Code"
 14.         label var statename "State"
 15.         label var stateabb "State Abbreviation"
 16.         label var locality "City/County"
 17.         label var mw "Minimum Wage"
 18.         order statefips statename stateabb locality year month day date mw mw_* source source_2 source_notes
 19. 
.         sort locality date
 20.         export delim using `outstub'VZ_substate_changes.csv, replace 
 21. end

. 
. program prepare_local
  1.         syntax, temp(str)
  2.         preserve
  3.         egen tag = tag(statefips locality)
  4.         keep if tag == 1
  5.         keep statefips locality
  6. 
.         save `temp'localities.dta, replace
  7.         restore
  8. end

. 
. program prepare_state
  1.         syntax, outstub(str) temp(str) finaldate(str)
  2.         sum year
  3.         local minyear = r(min)
  4.         preserve
  5.         // use ${exports}VZ_state_daily.dta, clear
.         import delim `outstub'VZ_state_daily.csv, clear 
  6.         g date2 = date(date, "DMY")
  7.         format date2 %td
  8.         order date2, after(date)
  9.         drop date 
 10.         rename date2 date
 11.         keep if year(date) >= `minyear' & date <= td(`finaldate')
 12.         joinby statefips using `temp'localities.dta
 13.         keep statefips statename stateabb locality date mw
 14.         rename mw state_mw
 15.         save `temp'statemw.dta, replace
 16.         restore
 17. end

. 
. program prepare_finaldata
  1.         syntax, temp(str) finaldate(str)
  2.         
.         encode locality, gen(locality_temp)
  3. 
.         tsset locality_temp date
  4.         tsfill
  5. 
.         foreach x of varlist statename stateabb locality source_notes {
  6.           bysort locality_temp (date): replace `x' = `x'[_n-1] if `x' == ""
  7.         }
  8.         foreach x of varlist statefips mw* {
  9.           bysort locality_temp (date): replace `x' = `x'[_n-1] if `x' == .
 10.         }
 11. 
.         keep if date <= td(`finaldate')
 12. 
.         merge 1:m statefips locality date using `temp'statemw.dta, assert(2 3) nogenerate
 13.         replace mw = state_mw if mw == .
 14.         replace mw = round(mw,0.01)
 15.         gen abovestate = mw > state_mw
 16.         label var abovestate "Local > State min wage"
 17. 
.         keep statefips statename stateabb date locality mw mw_* abovestate source_notes
 18.         order statefips statename stateabb date locality mw mw_* abovestate source_notes
 19.         notes mw: The mw variable represents the most applicable minimum wage across the locality.
 20. 
.         save `temp'data.dta, replace
 21. end

. 
. program export_substate_daily
  1.         syntax, outstub(str) temp(str)  
  2.                 
.         use `temp'data.dta, clear
  3.         sort locality date
  4.         export delim using `outstub'VZ_substate_daily.csv, replace
  5. end

. 
. program export_substate_monthly
  1.         syntax, outstub(str) temp(str)
  2.         use `temp'data.dta, clear
  3. 
.         gen monthly_date = mofd(date)
  4.         format monthly_date %tm
  5. 
.         collapse (min) min_mw = mw (mean) mean_mw = mw (max) max_mw = mw abovestate, by(statefips statename stateabb loca
> lity monthly_date)
  6. 
.         label var monthly_date "Monthly Date"
  7.         label_mw_vars, time_level("Monthly")
  8. 
.         sort locality monthly_date
  9. 
.         export delim using `outstub'VZ_substate_monthly.csv, replace 
 10. end 

. 
. program export_substate_quarterly
  1.         syntax, outstub(str) temp(str)
  2.         use `temp'data.dta, clear
  3. 
.         gen quarterly_date = qofd(date)
  4.         format quarterly_date %tq
  5. 
.         collapse (min) min_mw = mw (mean) mean_mw = mw (max) max_mw = mw abovestate, by(statefips statename stateabb loca
> lity quarterly_date)
  6. 
.         label var quarterly_date "Quarterly Date"
  7.         label_mw_vars, time_level("Quarterly")
  8. 
.         sort locality quarterly_date
  9. 
.         export delim using `outstub'VZ_substate_quarterly.csv, replace
 10. end 

. 
. program export_substate_annually
  1.         syntax, outstub(str) temp(str)
  2.         use `temp'data.dta, clear
  3. 
.         gen year = yofd(date)
  4.         format year %ty
  5. 
.         collapse (min) min_mw = mw (mean) mean_mw = mw (max) max_mw = mw abovestate, by(statefips statename stateabb loca
> lity year)
  6. 
.         label var year "Year"
  7.         label_mw_vars, time_level("Annual")
  8. 
.         sort locality year
  9. 
.         export delim using `outstub'VZ_substate_annual.csv, replace 
 10. end

. 
. program label_mw_vars
  1.         syntax, time_level(str)
  2. 
.         label var min_mw     "`time_level' Minimum"
  3.         label var mean_mw    "`time_level' Average"
  4.         label var max_mw     "`time_level' Maximum"
  5.         label var abovestate "Local > State min wage"   
  6. end

. 
. * EXECUTE
. main 
(4 vars, 51 obs)
(0 real changes made)
(note: file ../output/crosswalk.dta not found)
file ../output/crosswalk.dta saved
(15 vars, 171 obs)
(13 missing values generated)
(139 missing values generated)
(156 missing values generated)
(137 missing values generated)
(164 missing values generated)
(170 missing values generated)

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                               171  
    -----------------------------------------
(note: file ../output/VZ_substate_changes.csv not found)
file ../output/VZ_substate_changes.csv saved
(137 observations deleted)
(note: file ../temp/localities.dta not found)
file ../temp/localities.dta saved

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
        year |        171    2015.632    3.480863       2004       2024
(9 vars, 785,553 obs)
(552,687 observations deleted)
(note: file ../temp/statemw.dta not found)
file ../temp/statemw.dta saved
       panel variable:  locality_temp (unbalanced)
        time variable:  date, 01jan2004 to 01jan2024, but with gaps
                delta:  1 day
(48,808 real changes made)
(48,808 real changes made)
(48,808 real changes made)
(27,588 real changes made)
(48,808 real changes made)
(48,821 real changes made)
(8,013 real changes made)
(7,750 real changes made)
(9,743 real changes made)
(3,191 real changes made)
(1,826 real changes made)
(20,739 observations deleted)

    Result                           # of obs.
    -----------------------------------------
    not matched                       127,004
        from master                         0  
        from using                    127,004  

    matched                            28,240  
    -----------------------------------------
(127,004 real changes made)
(28,772 real changes made)
file ../temp/data.dta saved
(note: file ../output/VZ_substate_daily.csv not found)
file ../output/VZ_substate_daily.csv saved
(note: file ../output/VZ_substate_monthly.csv not found)
file ../output/VZ_substate_monthly.csv saved
(note: file ../output/VZ_substate_quarterly.csv not found)
file ../output/VZ_substate_quarterly.csv saved
(note: file ../output/VZ_substate_annual.csv not found)
file ../output/VZ_substate_annual.csv saved

. 
end of do-file

 make.py ended: 2020-03-05 15:28:14
