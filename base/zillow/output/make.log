
 make.py started: 2023-04-02 16:24:08 C:\Users\shermo\Documents\GitHub\min_wage_rent\base\zillow\code 




Execute:  R CMD BATCH --no-save "./build_county.R" build_county.Rout

R version 4.1.1 (2021-08-10) -- "Kick Things"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> remove(list = ls())
> source("../../../lib/R/load_packages.R")
> source("../../../lib/R/save_data.R")

Please cite as: 

 Hlavac, Marek (2018). stargazer: Well-Formatted Regression and Summary Statistics Tables.
 R package version 5.2.2. https://CRAN.R-project.org/package=stargazer 


Attaching package: 'dplyr'

The following objects are masked from 'package:stats':

    filter, lag

The following objects are masked from 'package:base':

    intersect, setdiff, setequal, union


Attaching package: 'data.table'

The following objects are masked from 'package:dplyr':

    between, first, last

Warning messages:
1: package 'dplyr' was built under R version 4.1.3 
2: package 'data.table' was built under R version 4.1.3 
> source("fix_varnames.R")
> 
> load_packages(c('stringr', 'data.table'))
Warning message:
package 'stringr' was built under R version 4.1.3 
> 
> main <- function() {
+    
+    datadir  <- "../../../drive/raw_data/zillow/County_122019"
+    outdir   <- "../../../drive/base_large/zillow"
+    log_file <- "../output/data_file_manifest.log"
+    
+    raw_filenames <- list.files(datadir, pattern = "*.csv", full.names = T)
+    
+    dts <- lapply(raw_filenames, load_and_clean)
+    
+    dts <- reshape_zillow(dts, raw_filenames)
+    
+    dt <- build_frame(dts)
+    
+    for (i in 1:length(dts)) {
+       dt <- merge(dt, dts[[i]], by = c('countyfips', 'date'), all.x = TRUE)
+    }
+    
+    dt[, c('year', 'month') :=  .(as.numeric(substr(date, 1, 4)),
+                                  as.numeric(substr(date, 6, 7)))]
+    dt[, date := NULL]
+ 
+    save_data(dt, key = c('countyfips', 'year', 'month'), 
+              filename = file.path(outdir, 'zillow_county_clean.csv'),
+              logfile = log_file)
+    save_data(dt, key = c('countyfips', 'year', 'month'), 
+              filename = file.path(outdir, 'zillow_county_clean.dta'),
+              logfile = log_file)
+ }
> 
> load_and_clean <- function(x) {
+    dt <- fread(x, colClasses = )[, SizeRank := NULL]
+    
+    all_names <- colnames(dt)
+    date_names <- all_names[str_detect(all_names, "[0-9]")]
+    vars_to_keep <- c("StateCodeFIPS", "MunicipalCodeFIPS", date_names)
+    
+    dt <- dt[, ..vars_to_keep]
+    dt[, countyfips := paste0(str_pad(StateCodeFIPS, 2, "left", pad = 0),
+                              str_pad(MunicipalCodeFIPS, 3, "left", pad = 0))]
+    dt[, c("StateCodeFIPS", "MunicipalCodeFIPS") := NULL]
+    
+    return(dt)
+ }
> 
> reshape_zillow <- function(dts, filenames) {
+    
+    value_names <- str_replace_all(basename(filenames), "County_|.csv", "")
+    value_names <- fix_varnames_county(value_names)
+    
+    dt_zillow <- mapply(reshape_single_file,
+                        dt = dts, valname = value_names, SIMPLIFY = F)
+    
+    return(dt_zillow)
+ }
> 
> reshape_single_file <- function(dt, valname) {
+    
+    dt <- melt(dt, id.vars = 'countyfips',
+               variable.name = 'date', value.name = valname)
+    
+    return(dt)
+ }
> 
> build_frame <- function(dts){
+    
+    counties <- unique(unlist(lapply(dts, function(dt) unique(dt$countyfips))))
+    dates    <- unique(unlist(lapply(dts, function(dt) unique(dt$date))))
+    
+    return(data.table(
+       "countyfips" = rep(counties, each = length(dates)),
+       "date"       = rep(dates, times = length(counties))
+    ))
+ }
> 
> # Execute
> main()
[1] "File '../../../drive/base_large/zillow/zillow_county_clean.csv' saved successfully."
[1] "File '../../../drive/base_large/zillow/zillow_county_clean.dta' saved successfully."
[1] "Log file generated successfully."
> 
> proc.time()
   user  system elapsed 
   3.14    1.07    8.89 


Execute:  R CMD BATCH --no-save "./build_zipcode.R" build_zipcode.Rout

R version 4.1.1 (2021-08-10) -- "Kick Things"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> remove(list = ls())
> source("../../../lib/R/load_packages.R")
> source("../../../lib/R/save_data.R")

Please cite as: 

 Hlavac, Marek (2018). stargazer: Well-Formatted Regression and Summary Statistics Tables.
 R package version 5.2.2. https://CRAN.R-project.org/package=stargazer 


Attaching package: 'dplyr'

The following objects are masked from 'package:stats':

    filter, lag

The following objects are masked from 'package:base':

    intersect, setdiff, setequal, union


Attaching package: 'data.table'

The following objects are masked from 'package:dplyr':

    between, first, last

Warning messages:
1: package 'dplyr' was built under R version 4.1.3 
2: package 'data.table' was built under R version 4.1.3 
> source("fix_varnames.R")
> 
> load_packages(c('stringr', 'data.table'))
Warning message:
package 'stringr' was built under R version 4.1.3 
> 
> main <- function() {
+    
+    datadir      <- "../../../drive/raw_data/zillow/Zip_122019"
+    datadir_2023 <- "../../../drive/raw_data/zillow_2023/orig"
+    outdir       <- "../../../drive/base_large/zillow"
+    log_file     <- "../output/data_file_manifest.log"
+    
+    raw_filenames <- list.files(datadir, pattern = "*.csv", full.names = T)
+    raw_filenames <- raw_filenames[!str_detect(raw_filenames, "_Summary.csv")]
+ 
+    l <- lapply(raw_filenames, clean_rawdata) # Recursively rename vars and save files in ../temp
+ 
+    dts <- reshape_zillow("../temp")
+    
+    dt <- build_frame(dts)
+    
+    for (name in names(dts)) {
+       dt <- merge(dt, dts[[name]], by = c('zipcode', 'date'), all.x = TRUE)
+    }
+ 
+    dt[, c('year', 'month') :=  .(as.numeric(substr(date, 1, 4)),
+                                  as.numeric(substr(date, 6, 7)))]
+    dt[, date := NULL]
+    
+    dt <- add_data_2023(dt, datadir_2023)
+    
+    dt[, zipcode := str_pad(zipcode, 5, pad = 0)]
+    
+    save_data(dt, key = c('zipcode', 'year', 'month'), 
+              filename = file.path(outdir, 'zillow_zipcode_clean.csv'),
+              logfile = log_file)
+    save_data(dt, key = c('zipcode', 'year', 'month'), 
+              filename = file.path(outdir, 'zillow_zipcode_clean.dta'),
+              logfile = log_file)
+ }
> 
> clean_rawdata <- function(x) {
+    dt <- fread(x, stringsAsFactors = F)
+    
+    all_names <- colnames(dt)
+    date_names <- all_names[str_detect(all_names, "[0-9]")]
+    vars_to_keep <- c("RegionName", date_names)
+    
+    dt <- dt[, ..vars_to_keep]
+    setnames(dt, old = "RegionName", new = "zipcode")
+    
+    save_data(dt, key = "zipcode", 
+              filename = file.path("../temp", basename(x)),
+              nolog = T)
+ }
> 
> reshape_zillow <- function(infolder) {
+    
+    files <- list.files(infolder, pattern = "*.csv")
+    
+    value_names <- str_replace_all(files, "Zip_|.csv", "")
+    value_names <- fix_varnames_zipcode(value_names)
+    
+    dts <- mapply(reshape_single_file,
+                  filename = files, valname = value_names,
+                  MoreArgs = list(infolder), SIMPLIFY = F)
+    
+    return(dts)
+ }
> 
> reshape_single_file <- function(filename, valname, infolder) {
+    dt <- fread(file.path(infolder, filename), stringsAsFactors = F)
+    
+    dt <- melt(dt, id.vars = 'zipcode',
+               variable.name = 'date', value.name = valname)
+    
+    return(dt)
+ }
> 
> build_frame <- function(dts){
+    
+    zipcodes <- unique(unlist(lapply(dts, function(dt) unique(dt$zipcode))))
+    dates    <- unique(unlist(lapply(dts, function(dt) unique(dt$date))))
+    
+    return(data.table(
+       "zipcode" = rep(zipcodes, each = length(dates)),
+       "date"    = rep(dates, times = length(zipcodes))
+    ))
+ }
> 
> add_data_2023 <- function(dt, datadir_2023) {
+   
+   zori <- fread(file.path(datadir_2023, "Zip_zori_sm_month.csv"))
+   
+   date_vars <- names(zori)[grepl("20", names(zori))]
+   keep_vars <- c("RegionID", date_vars)
+   
+   zori <- zori[, ..keep_vars]
+   setnames(zori, old = "RegionID", new = "zipcode")
+   
+   zori <- melt(zori,
+                id.vars = "zipcode",
+                measure.vars = date_vars,
+                variable.name = "date",
+                value.name = "zori_2023",
+                variable.factor = F)
+   
+   zori[, year  := as.numeric(substr(date, 1, 4))]
+   zori[, month := as.numeric(substr(date, 6, 7))]
+   zori[, date := NULL]
+   
+   zori <- zori[year <= 2020]   # Drop years after 2020
+   
+   dt <- merge(dt, zori, 
+               all = T,  # Keep all matches
+               by = c("zipcode", "year", "month"))
+   
+   return(dt)
+ }
> 
> # Execute
> main()
[1] "File '../temp/Zip_MedianDailyListings_NSA_AllHomes.csv' saved successfully."
[1] "File '../temp/Zip_MedianListingPrice_AllHomes.csv' saved successfully."
[1] "File '../temp/Zip_MedianListingPrice_BottomTier.csv' saved successfully."
[1] "File '../temp/Zip_MedianListingPrice_TopTier.csv' saved successfully."
[1] "File '../temp/Zip_MedianListingPricePerSqft_AllHomes.csv' saved successfully."
[1] "File '../temp/Zip_MedianListingPricePerSqft_BottomTier.csv' saved successfully."
[1] "File '../temp/Zip_MedianListingPricePerSqft_TopTier.csv' saved successfully."
[1] "File '../temp/Zip_MedianPctOfPriceReduction_AllHomes.csv' saved successfully."
[1] "File '../temp/Zip_MedianRentalPrice_1Bedroom.csv' saved successfully."
[1] "File '../temp/Zip_MedianRentalPrice_2Bedroom.csv' saved successfully."
[1] "File '../temp/Zip_MedianRentalPrice_3Bedroom.csv' saved successfully."
[1] "File '../temp/Zip_MedianRentalPrice_4Bedroom.csv' saved successfully."
[1] "File '../temp/Zip_MedianRentalPrice_5BedroomOrMore.csv' saved successfully."
[1] "File '../temp/Zip_MedianRentalPrice_AllHomes.csv' saved successfully."
[1] "File '../temp/Zip_MedianRentalPrice_CondoCoop.csv' saved successfully."
[1] "File '../temp/Zip_MedianRentalPrice_DuplexTriplex.csv' saved successfully."
[1] "File '../temp/Zip_MedianRentalPrice_Mfr5Plus.csv' saved successfully."
[1] "File '../temp/Zip_MedianRentalPrice_Sfr.csv' saved successfully."
[1] "File '../temp/Zip_MedianRentalPrice_Studio.csv' saved successfully."
[1] "File '../temp/Zip_MedianRentalPricePerSqft_1Bedroom.csv' saved successfully."
[1] "File '../temp/Zip_MedianRentalPricePerSqft_2Bedroom.csv' saved successfully."
[1] "File '../temp/Zip_MedianRentalPricePerSqft_3Bedroom.csv' saved successfully."
[1] "File '../temp/Zip_MedianRentalPricePerSqft_4Bedroom.csv' saved successfully."
[1] "File '../temp/Zip_MedianRentalPricePerSqft_5BedroomOrMore.csv' saved successfully."
[1] "File '../temp/Zip_MedianRentalPricePerSqft_AllHomes.csv' saved successfully."
[1] "File '../temp/Zip_MedianRentalPricePerSqft_CondoCoop.csv' saved successfully."
[1] "File '../temp/Zip_MedianRentalPricePerSqft_DuplexTriplex.csv' saved successfully."
[1] "File '../temp/Zip_MedianRentalPricePerSqft_Mfr5Plus.csv' saved successfully."
[1] "File '../temp/Zip_MedianRentalPricePerSqft_Sfr.csv' saved successfully."
[1] "File '../temp/Zip_MedianRentalPricePerSqft_Studio.csv' saved successfully."
[1] "File '../temp/Zip_MonthlyListings_NSA_AllHomes.csv' saved successfully."
[1] "File '../temp/Zip_NewMonthlyListings_NSA_AllHomes.csv' saved successfully."
[1] "File '../temp/Zip_PctOfListingsWithPriceReductions_AllHomes.csv' saved successfully."
[1] "File '../temp/Zip_Sale_Counts.csv' saved successfully."
[1] "File '../temp/Zip_SalesPrevForeclosed_Share.csv' saved successfully."
[1] "File '../temp/Zip_Zhvi_2bedroom.csv' saved successfully."
[1] "File '../temp/Zip_Zhvi_AllHomes.csv' saved successfully."
[1] "File '../temp/Zip_Zhvi_Condominum.csv' saved successfully."
[1] "File '../temp/Zip_Zhvi_SingleFamilyResidence.csv' saved successfully."
[1] "File '../temp/Zip_Zri_AllHomesPlusMultifamily.csv' saved successfully."
[1] "File '../temp/Zip_Zri_MultiFamilyResidenceRental.csv' saved successfully."
[1] "File '../../../drive/base_large/zillow/zillow_zipcode_clean.csv' saved successfully."
[1] "File '../../../drive/base_large/zillow/zillow_zipcode_clean.dta' saved successfully."
[1] "Log file generated successfully."
There were 12 warnings (use warnings() to see them)
> 
> proc.time()
   user  system elapsed 
 415.67  157.62  410.87 

 make.py ended: 2023-04-02 16:31:12
