
 make.py started: 2021-02-09 15:45:59 C:\Users\shermo\Documents\GitHub\min_wage_rent\base\zillow\code 




Execute:  R CMD BATCH --no-save "./build_county.R" build_county.Rout

R version 4.0.3 (2020-10-10) -- "Bunny-Wunnies Freak Out"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> remove(list = ls())
> source("../../../lib/R/load_packages.R")
> source("../../../lib/R/save_data.R")

Please cite as: 

 Hlavac, Marek (2018). stargazer: Well-Formatted Regression and Summary Statistics Tables.
 R package version 5.2.2. https://CRAN.R-project.org/package=stargazer 


Attaching package: 'dplyr'

The following objects are masked from 'package:stats':

    filter, lag

The following objects are masked from 'package:base':

    intersect, setdiff, setequal, union


Attaching package: 'data.table'

The following objects are masked from 'package:dplyr':

    between, first, last

> source("fix_varnames.R")
> 
> load_packages(c('stringr', 'data.table'))
> 
> main <- function() {
+    
+    datadir  <- "../../../drive/raw_data/zillow/County_122019"
+    outdir   <- "../../../drive/base_large/zillow"
+    log_file <- "../output/data_file_manifest.log"
+    
+    raw_filenames <- list.files(datadir, pattern = "*.csv", full.names = T)
+    
+    dts <- lapply(raw_filenames, rename_geovars)
+    
+    dts <- reshape_zillow(dts, raw_filenames)
+    
+    dt <- Reduce(function(...) merge(..., all = TRUE), dts)
+    
+    dt[, county := str_replace_all(county, " County", "")]
+    
+    save_data(dt, key = c('countyfips', 'statefips', 'date'), 
+              filename = file.path(outdir, 'zillow_county_clean.csv'),
+              logfile = log_file)
+ }
> 
> rename_geovars <- function(x) {
+    dt <- fread(x, stringsAsFactors = F)[, SizeRank := NULL]
+    
+    old_geo_names <- colnames(dt)[!str_detect(colnames(dt), "[0-9]")]
+    new_geo_names <- c("county", "stateabb", "msa", "statefips", "countyfips")
+    
+    setnames(dt, old = old_geo_names, new = new_geo_names)
+    
+    n_unique <- dim(unique(dt[, ..new_geo_names]))[1]
+    stopifnot(n_unique == dim(dt)[1])  # Check if key
+    
+    return(dt)
+ }
> 
> reshape_zillow <- function(dts, filenames) {
+    
+    value_names <- str_replace_all(basename(filenames), "County_|.csv", "")
+    value_names <- fix_varnames_county(value_names)
+    
+    dt_zillow <- mapply(reshape_single_file,
+                        dt = dts, valname = value_names, SIMPLIFY = F)
+    
+    return(dt_zillow)
+ }
> 
> reshape_single_file <- function(dt, valname) {
+    
+    idvars <- names(dt)[!str_detect(names(dt), "[0-9]")]
+    
+    dt <- melt(dt, id.vars = idvars,
+               variable.name = 'date', value.name = valname)
+    
+    return(dt)
+ }
> 
> # Execute
> main()
[1] "File '../../../drive/base_large/zillow/zillow_county_clean.csv' saved successfully."
[1] "Log file generated successfully."
> 
> proc.time()
   user  system elapsed 
   2.17    0.31    2.29 


Execute:  R CMD BATCH --no-save "./build_zipcode.R" build_zipcode.Rout

R version 4.0.3 (2020-10-10) -- "Bunny-Wunnies Freak Out"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> remove(list = ls())
> source("../../../lib/R/load_packages.R")
> source("../../../lib/R/save_data.R")

Please cite as: 

 Hlavac, Marek (2018). stargazer: Well-Formatted Regression and Summary Statistics Tables.
 R package version 5.2.2. https://CRAN.R-project.org/package=stargazer 


Attaching package: 'dplyr'

The following objects are masked from 'package:stats':

    filter, lag

The following objects are masked from 'package:base':

    intersect, setdiff, setequal, union


Attaching package: 'data.table'

The following objects are masked from 'package:dplyr':

    between, first, last

> source("fix_varnames.R")
> 
> load_packages(c('stringr', 'data.table'))
> 
> main <- function() {
+    
+    datadir  <- "../../../drive/raw_data/zillow/Zip_122019"
+    outdir   <- "../../../drive/base_large/zillow"
+    log_file <- "../output/data_file_manifest.log"
+    
+    raw_filenames <- list.files(datadir, pattern = "*.csv", full.names = T)
+    raw_filenames <- raw_filenames[!str_detect(raw_filenames, "_Summary.csv")]
+    
+    lapply(raw_filenames, rename_zillow) # Recursively rename and saves files in ../temp
+    
+    dts_list <- reshape_zillow("../temp")
+    
+    dt <- merge_zillow(l = dts_list, key = c('zipcode', 'date'))
+    
+    save_data(dt, key = c('zipcode', 'date'), 
+              filename = file.path(outdir, 'zillow_zipcode_clean.csv'),
+              logfile = log_file)
+ }
> 
> rename_zillow <- function(x) {
+    df <- fread(x, stringsAsFactors = F)
+    
+    if (any(c("DataTypeDescription", "SizeRank", "RegionType") %in% names(df))) {
+       df[, c("DataTypeDescription", "SizeRank", "RegionType") := NULL]
+    }
+    
+    geo_names <- colnames(df)
+    geo_names <- geo_names[!str_detect(geo_names, "[0-9]")]
+    
+    geo_names_1 <- c("RegionName", "City", "CountyName", "Metro", "StateFullName")
+    geo_names_2 <- c("RegionID", "RegionName", "City", "County", "State", "Metro")
+    geo_names_3 <- c("RegionName", "City", "State", "Metro", "CountyName")
+    geo_names_4 <- c("RegionID", "RegionName", "City", "State", "Metro", "CountyName")
+    geo_names_5 <- c("RegionID", "RegionName", "City", "County", "State", "Metro")
+    geo_names_6 <- c("RegionID", "RegionName", "StateName")
+    
+    if (identical(geo_names, geo_names_1)) {
+       newgeonames <- c("zipcode", "city", "county", "msa", "statename")
+       setnames(df, old = geo_names, new = newgeonames)
+       
+    } else if (identical(geo_names, geo_names_2)) {
+       newgeonames <- c("old_id", "zipcode", "city", "county", "stateabb", "msa")
+       setnames(df, old = geo_names, new = newgeonames)
+       
+    } else if (identical(geo_names, geo_names_3)) {
+       newgeonames <- c("zipcode", "city", "stateabb", "msa", "county")
+       setnames(df, old = geo_names, new = newgeonames)
+ 
+    } else if (identical(geo_names, geo_names_4)) {
+       newgeonames <- c("old_id", "zipcode", "city", "stateabb", "msa", "county")
+       setnames(df, old = geo_names, new = newgeonames)
+       
+    } else if (identical(geo_names, geo_names_5)) {
+       newgeonames <- c("old_id", "zipcode", "city", "county", "stateabb", "msa")
+       setnames(df, old = geo_names, new = newgeonames)
+       
+    } else if (identical(geo_names, geo_names_6)) {
+       newgeonames <- c("old_id", "zipcode", "stateabb")
+       setnames(df, old = geo_names, new = newgeonames)
+    }
+    
+    df[, zipcode := str_pad(as.character(zipcode), 5, pad = "0")]
+    if ("RegionID" %in% geo_names) {
+       df[, old_id := NULL]
+       newgeonames <- newgeonames[-1]
+    }
+    if ("county" %in% newgeonames) df[, county := str_replace_all(county, " County", "")]
+ 
+    save_data(df = df, key = newgeonames, 
+              filename = file.path("../temp", basename(x)),
+              nolog = T)
+ }
> 
> reshape_zillow <- function(infolder) {
+    
+    files <- list.files(infolder, pattern = "*.csv")
+    
+    value_names <- str_replace_all(files, "Zip_|.csv", "")
+    value_names <- fix_varnames_zipcode(value_names)
+    
+    id_fullvars <- c("zipcode", "city", "county", "msa", "stateabb")
+    
+    dt_zillow <- mapply(reshape_single_file,
+                        filename = files, valname = value_names,
+                        MoreArgs = list(infolder, id_fullvars), SIMPLIFY = F)
+    
+    return(dt_zillow)
+ }
> 
> reshape_single_file <- function(filename, valname, infolder, id_fullvars) {
+    
+    dt <- fread(file.path(infolder, filename), stringsAsFactors = F)
+    
+    idvars <- colnames(dt)
+    idvars <- idvars[!str_detect(idvars, "[0-9]")]
+    
+    dt <- melt(dt, id.vars = idvars,
+               variable.name = 'date', value.name = valname)
+    
+    missing_id_vars <- setdiff(id_fullvars, idvars)
+    dt[, (missing_id_vars) := ""]
+    
+    return(dt)
+ }
> 
> merge_zillow <- function(l, key) {
+    
+    geovars <- c('zipcode', 'city', 'msa', 'county', 'stateabb')
+    geovars_exclude_zip <- geovars[-1]
+    
+    dt <- lapply(l, function(x) {
+       state_name <- x[, ..geovars]
+       state_name <- unique(state_name)
+    })
+    dt <- rbindlist(dt, use.names = T)
+    
+    dt <- as.data.frame(unique(dt))
+    dt[dt == ""] <- NA
+    
+    dt <- setDT(dt)[,lapply(.SD, function(y) y[!is.na(y)]),
+                                  by = c('zipcode', 'city', 'msa', 'county')]
+    dt <- dt[, city := str_replace_all(city, "^Town of | Township$", "")]
+    
+    dt <- dt[, lapply(.SD, function(y) y[!is.na(y)]),
+                           by = c('zipcode', 'city', 'msa', 'county')]
+    dt <- unique(dt)
+    
+    ## SH: What are the following lines doing?
+    dt <- dt[, totNA := rowSums(is.na(dt))]
+    dt <- dt[, minNA := min(totNA), by = zipcode][totNA == minNA, ]
+    
+    setkey(dt, 'zipcode')
+    dt <- dt[J(unique(zipcode)), mult = "first"]
+    
+    dt[, c('totNA', 'minNA') := NULL]
+    ## up to here?
+    
+    l <- lapply(l, function(y) y[, (geovars_exclude_zip) := NULL])
+    
+    file_combined <- Reduce(function(...) merge(..., all = T, by = key), l)
+    file_combined <- setDT(dt)[file_combined, on = 'zipcode']
+    
+    setorder(file_combined, zipcode, date)
+    
+    return(file_combined)
+ }
> 
> # Execute
> main()
[1] "File '../temp/Zip_MedianDailyListings_NSA_AllHomes.csv' saved successfully."
[1] "File '../temp/Zip_MedianListingPrice_AllHomes.csv' saved successfully."
[1] "File '../temp/Zip_MedianListingPrice_BottomTier.csv' saved successfully."
[1] "File '../temp/Zip_MedianListingPrice_TopTier.csv' saved successfully."
[1] "File '../temp/Zip_MedianListingPricePerSqft_AllHomes.csv' saved successfully."
[1] "File '../temp/Zip_MedianListingPricePerSqft_BottomTier.csv' saved successfully."
[1] "File '../temp/Zip_MedianListingPricePerSqft_TopTier.csv' saved successfully."
[1] "File '../temp/Zip_MedianPctOfPriceReduction_AllHomes.csv' saved successfully."
[1] "File '../temp/Zip_MedianRentalPrice_1Bedroom.csv' saved successfully."
[1] "File '../temp/Zip_MedianRentalPrice_2Bedroom.csv' saved successfully."
[1] "File '../temp/Zip_MedianRentalPrice_3Bedroom.csv' saved successfully."
[1] "File '../temp/Zip_MedianRentalPrice_4Bedroom.csv' saved successfully."
[1] "File '../temp/Zip_MedianRentalPrice_5BedroomOrMore.csv' saved successfully."
[1] "File '../temp/Zip_MedianRentalPrice_AllHomes.csv' saved successfully."
[1] "File '../temp/Zip_MedianRentalPrice_CondoCoop.csv' saved successfully."
[1] "File '../temp/Zip_MedianRentalPrice_DuplexTriplex.csv' saved successfully."
[1] "File '../temp/Zip_MedianRentalPrice_Mfr5Plus.csv' saved successfully."
[1] "File '../temp/Zip_MedianRentalPrice_Sfr.csv' saved successfully."
[1] "File '../temp/Zip_MedianRentalPrice_Studio.csv' saved successfully."
[1] "File '../temp/Zip_MedianRentalPricePerSqft_1Bedroom.csv' saved successfully."
[1] "File '../temp/Zip_MedianRentalPricePerSqft_2Bedroom.csv' saved successfully."
[1] "File '../temp/Zip_MedianRentalPricePerSqft_3Bedroom.csv' saved successfully."
[1] "File '../temp/Zip_MedianRentalPricePerSqft_4Bedroom.csv' saved successfully."
[1] "File '../temp/Zip_MedianRentalPricePerSqft_5BedroomOrMore.csv' saved successfully."
[1] "File '../temp/Zip_MedianRentalPricePerSqft_AllHomes.csv' saved successfully."
[1] "File '../temp/Zip_MedianRentalPricePerSqft_CondoCoop.csv' saved successfully."
[1] "File '../temp/Zip_MedianRentalPricePerSqft_DuplexTriplex.csv' saved successfully."
[1] "File '../temp/Zip_MedianRentalPricePerSqft_Mfr5Plus.csv' saved successfully."
[1] "File '../temp/Zip_MedianRentalPricePerSqft_Sfr.csv' saved successfully."
[1] "File '../temp/Zip_MedianRentalPricePerSqft_Studio.csv' saved successfully."
[1] "File '../temp/Zip_MonthlyListings_NSA_AllHomes.csv' saved successfully."
[1] "File '../temp/Zip_NewMonthlyListings_NSA_AllHomes.csv' saved successfully."
[1] "File '../temp/Zip_PctOfListingsWithPriceReductions_AllHomes.csv' saved successfully."
[1] "File '../temp/Zip_Sale_Counts.csv' saved successfully."
[1] "File '../temp/Zip_SalesPrevForeclosed_Share.csv' saved successfully."
[1] "File '../temp/Zip_Zhvi_2bedroom.csv' saved successfully."
[1] "File '../temp/Zip_Zhvi_AllHomes.csv' saved successfully."
[1] "File '../temp/Zip_Zhvi_Condominum.csv' saved successfully."
[1] "File '../temp/Zip_Zhvi_SingleFamilyResidence.csv' saved successfully."
[1] "File '../temp/Zip_Zri_AllHomesPlusMultifamily.csv' saved successfully."
[1] "File '../temp/Zip_Zri_MultiFamilyResidenceRental.csv' saved successfully."
[1] "File '../../../drive/base_large/zillow/zillow_zipcode_clean.csv' saved successfully."
[1] "Log file generated successfully."
There were 50 or more warnings (use warnings() to see the first 50)
> 
> proc.time()
   user  system elapsed 
 180.89   82.01  131.25 

 make.py ended: 2021-02-09 15:48:15
