# Import libraries
check_packages(c('tidyverse', 'data.table'))
# Load zcta to county relationship file
zip_county10 <- fread(paste0(datadir,'census/zip_county10.csv'))
setorder(zip_county10, zipcode)
View(zip_county10)
zip_county10 <- zip_county10[zippcthouse10>=50,] # Keep only zip code county matches where at least 50 percent of houses are in zipcode
zip_county10
View(zip_places10)
View(zip_places10)
# Prepare Final Dataset
DF <- dfZillow
head(DF)
length(unique(zip_county10$zipcode))
DF <-
tail(DF)
DF <-
tail(DF)
View(DF)
countyDuplicates <- duplicated(zip_county10$zipcode)
countyDuplicates <- zip_county10[countyDuplicates]
View(countyDuplicates)
countyDuplicates <- duplicated(zip_county10$zipcode)
countyDuplicates <- duplicated(zip_county10$zipcode)
countyDuplicates <- zip_county10[countyDuplicates,]
View(countyDuplicates)
countyDuplicates <- duplicated(zip_county10$zipcode, zip_county10$state)
countyDuplicates <- zip_county10[countyDuplicates,]
View(countyDuplicates)
dupIndex <- which(duplicated(zip_county10[c('state', 'county'),]))
dupIndex <- which(duplicated(zip_county10[, c('state', 'county')]))
dupIndex <- which(duplicated(zip_county10[, c('state', 'county')]),)
z <- zip_county10[duplicated(zip_county10[, c('state', 'county')]),]
View(z)
z <- zip_county10[duplicated(zip_county10[, c('zipcode')]),]
View(z)
head(dfZillow)
zip_county10[, ind := max(zippctpop10, na.rm = T), by = 'zipcode'][, ind:= ifelse(ind==zippctpop10, 1, 0)]
zip_county10
z <- zip_county10[ind==1,]
zip_county10 <- zip_county10[, ind:=NULL]
# Prepare Final Dataset
DF <- dfZillow
min(dfZillow$date, na.rm = T)
min(dfZillow[!is.na(rent2BR_median),]$date, na.rm = T)
min(dfZillow[!is.na(rent2BR_psqft_median),]$date, na.rm = T)
min(dfZillow[!is.na(rent_psqft_median_SFR),]$date, na.rm = T)
DF <- zip_county10[dfZillow, on = 'zipcode']
str(zip_county10)
zip_county10[, zipcode := str_pad(as.character(zipcode), 5, pad = 0)]
DF <- zip_county10[dfZillow, on = 'zipcode']
head(DF)
tail(DF)
zip_places10
zip_places10[, zipcode := str_pad(as.character(zipcode), 5, pad = 0)]
zip_county10[, ind := max(zippctpop10, na.rm = T), by = 'zipcode'][, ind:= ifelse(ind==zippctpop10, 1, 0)]
zip_places10[, ind := max(zippctpop10, na.rm = T), by = 'zipcode'][, ind:= ifelse(ind==zippctpop10, 1, 0)]
zip_places10[ind==0,]
zip_places10[, ind:=NULL]
z <- zip_places10[duplicated(dataset[c('zipcode')]),]
z <- zip_places10[duplicated(zip_places10[c('zipcode')]),]
z <- zip_places10[duplicated(zip_places10[,c('zipcode')]),]
lenght(unique(zip_places10$zipcode))
length(unique(zip_places10$zipcode))
head(zip_places10)
DF
DF <-
names(zip_places10)
names(dfZillow)
DF <-
names(zip_places10)
names(zip_places10)
names(dfZillow)
names(zip_county10)
head(zip_county10)
head(dfZillow)
str(zip_county10)
str(dfZillow)
setnames(dfZillow, old = 'county', new = 'countyname')
#' Add minimum wage data to Zillow data
if (getwd()!= dirname(rstudioapi::getSourceEditorContext()$path)) setwd(dirname(rstudioapi::getSourceEditorContext()$path))
# Set dependencies
lib <- "../../lib/R/"
datadir_zillow <- '../temp/'
datadir <- '../../base/output/'
outputdir <- "../output/"
tempdir <- "../temp/"
# Import custom functions
source(paste0(lib, 'check_packages.R'))
source(paste0(lib, 'fwrite_key.R'))
source(paste0(lib, 'setkey_unique.R'))
# Import libraries
check_packages(c('tidyverse', 'data.table'))
# Load Zillow Clean Data
dfZillow <- fread(paste0(datadir_zillow, 'zillow_clean.csv'))
dfZillow[, zipcode := str_pad(as.character(zipcode), 5, pad = 0)]
dfZillow[,date := as.Date(paste0(date, "_01"), "%Y_%m_%d")]
setnames(dfZillow, old = 'county', new = 'countyname')
# Load Min Wage - State Level
dfStatemw <- fread(paste0(datadir, 'min_wage/VZ_state_monthly.csv'))
setnames(dfStatemw, old = c('statefips', 'monthly_date'), new = c('state', 'date'))
dfStatemw[,date := str_replace_all(date, "m", "_")][,date:= as.Date(paste0(date, "_01"), "%Y_%m_%d")]
# Load Min Wage - Local Level
dfLocalmw <- fread(paste0(datadir, 'min_wage/VZ_substate_monthly.csv'))
setnames(dfLocalmw, old = c('statefips', 'monthly_date'), new = c('state', 'date'))
dfLocalmw[,date := str_replace_all(date, "m", "_")][,date:= as.Date(paste0(date, "_01"), "%Y_%m_%d")]
# Load zcta to place relationship file
place10 <- fread(paste0(datadir, 'census/places10.csv'))
place10 <- place10[placetype=="city",] #Keep only cities (as local min wages are applied in cities and counties only)
zip_places10 <- fread(paste0(datadir,'census/zip_places10.csv'))
setorder(zip_places10, zipcode)
zip_places10 <- zip_places10[zippcthouse10>=50,] # Keep only zip code place matches where at least 50 percent of houses are in zipcode
zip_places10 <- place10[zip_places10, on = c('state', 'place')]
zip_places10[, zipcode := str_pad(as.character(zipcode), 5, pad = 0)]
zip_places10[, c('state', 'stateabb', '')]
# Load zcta to county relationship file
zip_county10 <- fread(paste0(datadir,'census/zip_county10.csv'))
setorder(zip_county10, zipcode)
zip_county10 <- zip_county10[zippcthouse10>=50,] # Keep only zip code county matches where at least 50 percent of houses are in zipcode
zip_county10[, ind := max(zippctpop10, na.rm = T), by = 'zipcode'][, ind:= ifelse(ind==zippctpop10, 1, 0)]
zip_county10 <- zip_county10[ind==1,]
zip_county10 <- zip_county10[, ind:=NULL]
zip_county10[, zipcode := str_pad(as.character(zipcode), 5, pad = 0)]
zip_county10[, c('state', 'county', 'zipcode', 'zippctpop10', 'zippcthouse10', 'zippctland')]
zip_county10- <- zip_county10[, c('state', 'county', 'zipcode', 'zippctpop10', 'zippcthouse10', 'zippctland')]
zip_county10<- zip_county10[, c('state', 'county', 'zipcode', 'zippctpop10', 'zippcthouse10', 'zippctland')]
str(dfZillow)
DF <- dfZillow
DF <- zip_county10[dfZillow, on = 'zipcode']
str(DF)
#' Add minimum wage data to Zillow data
if (getwd()!= dirname(rstudioapi::getSourceEditorContext()$path)) setwd(dirname(rstudioapi::getSourceEditorContext()$path))
# Set dependencies
lib <- "../../lib/R/"
datadir_zillow <- '../temp/'
datadir <- '../../base/output/'
outputdir <- "../output/"
tempdir <- "../temp/"
# Import custom functions
source(paste0(lib, 'check_packages.R'))
source(paste0(lib, 'fwrite_key.R'))
source(paste0(lib, 'setkey_unique.R'))
# Import libraries
check_packages(c('tidyverse', 'data.table'))
# Load Zillow Clean Data
dfZillow <- fread(paste0(datadir_zillow, 'zillow_clean.csv'))
dfZillow[, zipcode := str_pad(as.character(zipcode), 5, pad = 0)]
dfZillow[,date := as.Date(paste0(date, "_01"), "%Y_%m_%d")]
# setnames(dfZillow, old = 'county', new = 'countyname')
dfZillow[,county:=NULL]
# Load Min Wage - State Level
dfStatemw <- fread(paste0(datadir, 'min_wage/VZ_state_monthly.csv'))
setnames(dfStatemw, old = c('statefips', 'monthly_date'), new = c('state', 'date'))
dfStatemw[,date := str_replace_all(date, "m", "_")][,date:= as.Date(paste0(date, "_01"), "%Y_%m_%d")]
# Load Min Wage - Local Level
dfLocalmw <- fread(paste0(datadir, 'min_wage/VZ_substate_monthly.csv'))
setnames(dfLocalmw, old = c('statefips', 'monthly_date'), new = c('state', 'date'))
dfLocalmw[,date := str_replace_all(date, "m", "_")][,date:= as.Date(paste0(date, "_01"), "%Y_%m_%d")]
# Load zcta to place relationship file
place10 <- fread(paste0(datadir, 'census/places10.csv'))
place10 <- place10[placetype=="city",] #Keep only cities (as local min wages are applied in cities and counties only)
zip_places10 <- fread(paste0(datadir,'census/zip_places10.csv'))
setorder(zip_places10, zipcode)
zip_places10 <- zip_places10[zippcthouse10>=50,] # Keep only zip code place matches where at least 50 percent of houses are in zipcode
zip_places10 <- place10[zip_places10, on = c('state', 'place')]
zip_places10[, zipcode := str_pad(as.character(zipcode), 5, pad = 0)]
# Load zcta to county relationship file
zip_county10 <- fread(paste0(datadir,'census/zip_county10.csv'))
setorder(zip_county10, zipcode)
zip_county10 <- zip_county10[zippcthouse10>=50,] # Keep only zip code county matches where at least 50 percent of houses are in zipcode
zip_county10[, ind := max(zippctpop10, na.rm = T), by = 'zipcode'][, ind:= ifelse(ind==zippctpop10, 1, 0)]
zip_county10 <- zip_county10[ind==1,]
zip_county10 <- zip_county10[, ind:=NULL]
zip_county10[, zipcode := str_pad(as.character(zipcode), 5, pad = 0)]
zip_county10<- zip_county10[, c('state', 'county', 'countyname', 'zipcode', 'zippctpop10', 'zippcthouse10', 'zippctland')]
zip_county10<- zip_county10[, c('state', 'county', 'countyname', 'zipcode', 'zippctpop10', 'zippcthouse10', 'zippctland')]
DF <- dfZillow
DF <- zip_county10[dfZillow, on = 'zipcode']
DF
str(DF)
str(zip_places10)
zip_places10 <- zip_places10[, c('zipcode','place', 'placename', 'placetype', 'placepop')]
zip_places10 <- zip_places10[, c('zipcode','place', 'placename', 'placetype', 'placepop10')]
DF <- zip_places10[DF, on = 'zipcode']
head(DF)
str(DF)
View(dfStatemw)
setnames(dfStatemw, old = c('min_mw', 'mean_mw', 'max_mw'), new = c('min_state_mw', 'mean_state_mw', 'max_state_mw'))
setnames(dfLocalmw, old = c('min_mw', 'mean_mw', 'max_mw'), new = c('min_local_mw', 'mean_local_mw', 'max_local_mw'))
View(dfStatemw)
# Add State Level Minimum wage
DF <- dfStatemw[DF, on = c('state', 'stateabb', 'date')]
str(dfLocalmw)
str(DF)
View(dfLocalmw)
dfLocalmw[,iscounty:=str_extract_all(locality, " County")][,iscounty:= ifelse(iscounty==" County", 1, 0)]
View(dfLocalmw)
dfCountymw <- dfLocalmw[iscounty==1,][,iscounty:=NULL]
setnames(dfCountymw, old = c('locality', 'min_mw', 'mean_mw', 'max_mw'), new = c('countyname', 'min_county_mw', 'mean_county_mw', 'max_county_mw'))
str(DF)
head(DF)
head(DF[10000:10010,])
#' Add minimum wage data to Zillow data
if (getwd()!= dirname(rstudioapi::getSourceEditorContext()$path)) setwd(dirname(rstudioapi::getSourceEditorContext()$path))
# Set dependencies
lib <- "../../lib/R/"
datadir_zillow <- '../temp/'
datadir <- '../../base/output/'
outputdir <- "../output/"
tempdir <- "../temp/"
# Import custom functions
source(paste0(lib, 'check_packages.R'))
source(paste0(lib, 'fwrite_key.R'))
source(paste0(lib, 'setkey_unique.R'))
# Import libraries
check_packages(c('tidyverse', 'data.table'))
# Load Zillow Clean Data
dfZillow <- fread(paste0(datadir_zillow, 'zillow_clean.csv'))
dfZillow[, zipcode := str_pad(as.character(zipcode), 5, pad = 0)]
dfZillow[,date := as.Date(paste0(date, "_01"), "%Y_%m_%d")]
# setnames(dfZillow, old = 'county', new = 'countyname')
dfZillow[,county:=NULL]
# Load Min Wage - State Level
dfStatemw <- fread(paste0(datadir, 'min_wage/VZ_state_monthly.csv'))
setnames(dfStatemw, old = c('statefips', 'monthly_date'), new = c('state', 'date'))
dfStatemw[,date := str_replace_all(date, "m", "_")][,date:= as.Date(paste0(date, "_01"), "%Y_%m_%d")]
setnames(dfStatemw, old = c('min_mw', 'mean_mw', 'max_mw'), new = c('min_state_mw', 'mean_state_mw', 'max_state_mw'))
# Load Min Wage - Local Level
dfLocalmw <- fread(paste0(datadir, 'min_wage/VZ_substate_monthly.csv'))
setnames(dfLocalmw, old = c('statefips', 'monthly_date'), new = c('state', 'date'))
dfLocalmw[,date := str_replace_all(date, "m", "_")][,date:= as.Date(paste0(date, "_01"), "%Y_%m_%d")]
dfLocalmw[,iscounty:=str_extract_all(locality, " County")][,iscounty:= ifelse(iscounty==" County", 1, 0)]
dfCountymw <- dfLocalmw[iscounty==1,][,iscounty:=NULL]
setnames(dfCountymw, old = c('locality', 'min_mw', 'mean_mw', 'max_mw'), new = c('countyname', 'min_county_mw', 'mean_county_mw', 'max_county_mw'))
dfLocalmw <- dfLocalmw[iscounty==0,][,iscounty:=NULL]
setnames(dfCountymw, old = c('locality', 'min_mw', 'mean_mw', 'max_mw'), new = c('placename', 'min_local_mw', 'mean_local_mw', 'max_local_mw'))
# Load zcta to place relationship file
place10 <- fread(paste0(datadir, 'census/places10.csv'))
place10 <- place10[placetype=="city",] #Keep only cities (as local min wages are applied in cities and counties only)
zip_places10 <- fread(paste0(datadir,'census/zip_places10.csv'))
setorder(zip_places10, zipcode)
zip_places10 <- zip_places10[zippcthouse10>=50,] # Keep only zip code place matches where at least 50 percent of houses are in zipcode
zip_places10 <- place10[zip_places10, on = c('state', 'place')]
zip_places10[, zipcode := str_pad(as.character(zipcode), 5, pad = 0)]
# Load zcta to county relationship file
zip_county10 <- fread(paste0(datadir,'census/zip_county10.csv'))
setorder(zip_county10, zipcode)
zip_county10 <- zip_county10[zippcthouse10>=50,] # Keep only zip code county matches where at least 50 percent of houses are in zipcode
zip_county10[, ind := max(zippctpop10, na.rm = T), by = 'zipcode'][, ind:= ifelse(ind==zippctpop10, 1, 0)]
zip_county10 <- zip_county10[ind==1,]
zip_county10 <- zip_county10[, ind:=NULL]
zip_county10[, zipcode := str_pad(as.character(zipcode), 5, pad = 0)]
# Select variables to merge with Zillow Data (some are redundant)
zip_county10<- zip_county10[, c('state', 'county', 'countyname', 'zipcode', 'zippctpop10', 'zippcthouse10', 'zippctland')]
zip_places10 <- zip_places10[, c('zipcode','place', 'placename', 'placetype', 'placepop10')]
# Prepare Final Dataset
DF <- dfZillow
DF <- zip_county10[dfZillow, on = 'zipcode']
DF <- zip_places10[DF, on = 'zipcode']
# Add State Level Minimum wage
DF <- dfStatemw[DF, on = c('state', 'stateabb', 'date')]
#' Add minimum wage data to Zillow data
if (getwd()!= dirname(rstudioapi::getSourceEditorContext()$path)) setwd(dirname(rstudioapi::getSourceEditorContext()$path))
# Set dependencies
lib <- "../../lib/R/"
datadir_zillow <- '../temp/'
datadir <- '../../base/output/'
outputdir <- "../output/"
tempdir <- "../temp/"
# Import custom functions
source(paste0(lib, 'check_packages.R'))
source(paste0(lib, 'fwrite_key.R'))
source(paste0(lib, 'setkey_unique.R'))
# Import libraries
check_packages(c('tidyverse', 'data.table'))
# Load Zillow Clean Data
dfZillow <- fread(paste0(datadir_zillow, 'zillow_clean.csv'))
dfZillow[, zipcode := str_pad(as.character(zipcode), 5, pad = 0)]
dfZillow[,date := as.Date(paste0(date, "_01"), "%Y_%m_%d")]
# setnames(dfZillow, old = 'county', new = 'countyname')
dfZillow[,county:=NULL]
# Load Min Wage - State Level
dfStatemw <- fread(paste0(datadir, 'min_wage/VZ_state_monthly.csv'))
setnames(dfStatemw, old = c('statefips', 'monthly_date'), new = c('state', 'date'))
dfStatemw[,date := str_replace_all(date, "m", "_")][,date:= as.Date(paste0(date, "_01"), "%Y_%m_%d")]
setnames(dfStatemw, old = c('min_mw', 'mean_mw', 'max_mw'), new = c('min_state_mw', 'mean_state_mw', 'max_state_mw'))
# Load Min Wage - Local Level
dfLocalmw <- fread(paste0(datadir, 'min_wage/VZ_substate_monthly.csv'))
setnames(dfLocalmw, old = c('statefips', 'monthly_date'), new = c('state', 'date'))
dfLocalmw[,date := str_replace_all(date, "m", "_")][,date:= as.Date(paste0(date, "_01"), "%Y_%m_%d")]
dfLocalmw[,iscounty:=str_extract_all(locality, " County")][,iscounty:= ifelse(iscounty==" County", 1, 0)]
dfCountymw <- dfLocalmw[iscounty==1,][,iscounty:=NULL]
head(dfCountymw)
setnames(dfCountymw, old = c('locality', 'min_mw', 'mean_mw', 'max_mw'), new = c('countyname', 'min_county_mw', 'mean_county_mw', 'max_county_mw'))
dfLocalmw <- dfLocalmw[iscounty==0,][,iscounty:=NULL]
setnames(dfLocalmw, old = c('locality', 'min_mw', 'mean_mw', 'max_mw'), new = c('placename', 'min_local_mw', 'mean_local_mw', 'max_local_mw'))
place10 <- fread(paste0(datadir, 'census/places10.csv'))
place10 <- place10[placetype=="city",] #Keep only cities (as local min wages are applied in cities and counties only)
zip_places10 <- fread(paste0(datadir,'census/zip_places10.csv'))
setorder(zip_places10, zipcode)
zip_places10 <- zip_places10[zippcthouse10>=50,] # Keep only zip code place matches where at least 50 percent of houses are in zipcode
zip_places10 <- place10[zip_places10, on = c('state', 'place')]
zip_places10[, zipcode := str_pad(as.character(zipcode), 5, pad = 0)]
# Load zcta to county relationship file
zip_county10 <- fread(paste0(datadir,'census/zip_county10.csv'))
setorder(zip_county10, zipcode)
zip_county10 <- zip_county10[zippcthouse10>=50,] # Keep only zip code county matches where at least 50 percent of houses are in zipcode
zip_county10[, ind := max(zippctpop10, na.rm = T), by = 'zipcode'][, ind:= ifelse(ind==zippctpop10, 1, 0)]
zip_county10 <- zip_county10[ind==1,]
zip_county10 <- zip_county10[, ind:=NULL]
zip_county10[, zipcode := str_pad(as.character(zipcode), 5, pad = 0)]
# Select variables to merge with Zillow Data (some are redundant)
zip_county10<- zip_county10[, c('state', 'county', 'countyname', 'zipcode', 'zippctpop10', 'zippcthouse10', 'zippctland')]
zip_places10 <- zip_places10[, c('zipcode','place', 'placename', 'placetype', 'placepop10')]
# Prepare Final Dataset
DF <- dfZillow
DF <- zip_county10[dfZillow, on = 'zipcode']
DF <- zip_places10[DF, on = 'zipcode']
# Add State Level Minimum wage
DF <- dfStatemw[DF, on = c('state', 'stateabb', 'date')]
str(dfCountymw)
head(DF[10000:10010,])
DF <- dfCountymw[DF, on = c('state', 'statename', 'stateabb', 'countyname', 'date')]
names(dfLocalmw)
names(DF)
source('C:/Users/gabriel/Dropbox (Brown)/research/min_wage_rent/derived/code/addMinWage.R', echo=TRUE)
head(DF)
z <- DF[!is.na(min_state_mw) & !is.na(zhvi2BR),]
head(z)
min(z$date)
max(z$date)
max(dfZillow$date)
max(dfZillow$date, na.rm= T)
z <- DF[!is.na(min_state_mw) & !is.na(zhvi2BR) & min_state_mw!=max_state_mw,]
z
head(z)
names(DF)
colorder1 <- c('date', 'zipcode', 'place', 'placename', 'city', 'msa', 'countyname', 'state', 'stateabb', 'statename')
colorder2 <- setdiff(colorder1, names(DF))
setcolorder(DF, c(colorder1,colorder2))
DF
z <- DF[!is.na(min_state_mw) & !is.na(zhvi2BR),]
head(z)
colorder1 <- c('date', 'zipcode', 'place', 'placename', 'city', 'msa', 'county', 'countyname', 'state', 'stateabb', 'statename')
colorder2 <- setdiff(colorder1, names(DF))
setcolorder(DF, c(colorder1,colorder2))
z <- DF[!is.na(min_state_mw) & !is.na(zhvi2BR),]
head(z)
# Import libraries
check_packages(c('tidyverse', 'data.table', 'ejanalysis'))
# Import libraries
check_packages(c('tidyverse', 'data.table', 'fBasics'))
require('fBasics')
install.packages('fBasics')
# Import libraries
check_packages(c('tidyverse', 'data.table', 'fBasics'))
names(DF)
DF[,min_actual_mw:= rowMaxs(DF[,c('min_fed_mw', 'min_state_mw', 'min_county_mw', 'min_local_mw')])]
DF[,c('min_fed_mw', 'min_state_mw', 'min_county_mw', 'min_local_mw')]
rowMaxs(DF[,c('min_fed_mw', 'min_state_mw', 'min_county_mw', 'min_local_mw')])
z <- DF[!is.na(min_state_mw) & !is.na(zhvi2BR),]
z[,min_actual_mw:= rowMaxs(z[,c('min_fed_mw', 'min_state_mw', 'min_county_mw', 'min_local_mw')])]
zz <- rowMaxs(z[,c('min_fed_mw', 'min_state_mw', 'min_county_mw', 'min_local_mw')])
# Import libraries
check_packages(c('tidyverse', 'data.table', 'matrixStats'))
zz <- rowMaxs(z[,c('min_fed_mw', 'min_state_mw', 'min_county_mw', 'min_local_mw')])
zz <- rowMaxs(as.matrix(z[,c('min_fed_mw', 'min_state_mw', 'min_county_mw', 'min_local_mw')])
)
head(zz)
head(z[,c('min_fed_mw', 'min_state_mw', 'min_county_mw', 'min_local_mw')])
zz <- rowMaxs(as.matrix(z[,c('min_fed_mw', 'min_state_mw', 'min_county_mw', 'min_local_mw')]), na.rm = T)
head(zz)
tail(z[,c('min_fed_mw', 'min_state_mw', 'min_county_mw', 'min_local_mw')])
tail(zz)
DF[,min_actual_mw:= rowMaxs(as.matrix(DF[,c('min_fed_mw', 'min_state_mw', 'min_county_mw', 'min_local_mw')]), na.rm = T)]
head(DF)
tail(DF)
DF[,mean_actual_mw:= rowMaxs(as.matrix(DF[,c('mean_fed_mw', 'mean_state_mw', 'mean_county_mw', 'mean_local_mw')]), na.rm = T)][,mean_actual_mw:= ifelse(mean_actual_mw==-Inf, NA, mean_actual_mw)]
DF[,max_actual_mw:= rowMaxs(as.matrix(DF[,c('max_fed_mw', 'max_state_mw', 'max_county_mw', 'max_local_mw')]), na.rm = T)][,max_actual_mw:= ifelse(max_actual_mw==-Inf, NA, max_actual_mw)]
tail(DF)
#' Add minimum wage data to Zillow data
if (getwd()!= dirname(rstudioapi::getSourceEditorContext()$path)) setwd(dirname(rstudioapi::getSourceEditorContext()$path))
# Set dependencies
lib <- "../../lib/R/"
datadir_zillow <- '../temp/'
datadir <- '../../base/output/'
outputdir <- "../output/"
tempdir <- "../temp/"
# Import custom functions
source(paste0(lib, 'check_packages.R'))
source(paste0(lib, 'fwrite_key.R'))
source(paste0(lib, 'setkey_unique.R'))
# Import libraries
check_packages(c('tidyverse', 'data.table', 'matrixStats'))
dfZillow <- fread(paste0(datadir_zillow, 'zillow_clean.csv'))
dfZillow[, zipcode := str_pad(as.character(zipcode), 5, pad = 0)]
dfZillow[,date := as.Date(paste0(date, "_01"), "%Y_%m_%d")]
# setnames(dfZillow, old = 'county', new = 'countyname')
dfZillow[,county:=NULL]
# Load Min Wage - State Level
dfStatemw <- fread(paste0(datadir, 'min_wage/VZ_state_monthly.csv'))
setnames(dfStatemw, old = c('statefips', 'monthly_date'), new = c('state', 'date'))
dfStatemw[,date := str_replace_all(date, "m", "_")][,date:= as.Date(paste0(date, "_01"), "%Y_%m_%d")]
setnames(dfStatemw, old = c('min_mw', 'mean_mw', 'max_mw'), new = c('min_state_mw', 'mean_state_mw', 'max_state_mw'))
dfLocalmw <- fread(paste0(datadir, 'min_wage/VZ_substate_monthly.csv'))
setnames(dfLocalmw, old = c('statefips', 'monthly_date'), new = c('state', 'date'))
dfLocalmw[,date := str_replace_all(date, "m", "_")][,date:= as.Date(paste0(date, "_01"), "%Y_%m_%d")]
dfLocalmw[,iscounty:=str_extract_all(locality, " County")][,iscounty:= ifelse(iscounty==" County", 1, 0)]
dfCountymw <- dfLocalmw[iscounty==1,][,iscounty:=NULL]
setnames(dfCountymw, old = c('locality', 'min_mw', 'mean_mw', 'max_mw', 'abovestate'), new = c('countyname', 'min_county_mw', 'mean_county_mw', 'max_county_mw', 'countyabovestate'))
dfLocalmw <- dfLocalmw[iscounty==0,][,iscounty:=NULL]
setnames(dfLocalmw, old = c('locality', 'min_mw', 'mean_mw', 'max_mw', 'abovestate'), new = c('placename', 'min_local_mw', 'mean_local_mw', 'max_local_mw', 'localabovestate'))
place10 <- fread(paste0(datadir, 'census/places10.csv'))
place10 <- place10[placetype=="city",] #Keep only cities (as local min wages are applied in cities and counties only)
zip_places10 <- fread(paste0(datadir,'census/zip_places10.csv'))
setorder(zip_places10, zipcode)
zip_places10 <- zip_places10[zippcthouse10>=50,] # Keep only zip code place matches where at least 50 percent of houses are in zipcode
zip_places10 <- place10[zip_places10, on = c('state', 'place')]
zip_places10[, zipcode := str_pad(as.character(zipcode), 5, pad = 0)]
zip_county10 <- fread(paste0(datadir,'census/zip_county10.csv'))
setorder(zip_county10, zipcode)
zip_county10 <- zip_county10[zippcthouse10>=50,] # Keep only zip code county matches where at least 50 percent of houses are in zipcode
zip_county10[, ind := max(zippctpop10, na.rm = T), by = 'zipcode'][, ind:= ifelse(ind==zippctpop10, 1, 0)]
zip_county10 <- zip_county10[ind==1,]
zip_county10 <- zip_county10[, ind:=NULL]
zip_county10[, zipcode := str_pad(as.character(zipcode), 5, pad = 0)]
zip_county10<- zip_county10[, c('state', 'county', 'countyname', 'zipcode', 'zippctpop10', 'zippcthouse10', 'zippctland')]
zip_places10 <- zip_places10[, c('zipcode','place', 'placename', 'placetype', 'placepop10')]
DF <- dfZillow
DF <- zip_county10[dfZillow, on = 'zipcode'] # Add county names
DF <- zip_places10[DF, on = 'zipcode'] # Add Place names
DF <- dfStatemw[DF, on = c('state', 'stateabb', 'date')] # Add State Level Minimum wage
DF <- dfCountymw[DF, on = c('state', 'statename', 'stateabb', 'countyname', 'date')]
DF <- dfLocalmw[DF, on = c('state', 'statename', 'stateabb', 'placename', 'date')]
colorder1 <- c('date', 'zipcode', 'place', 'placename', 'city', 'msa', 'county', 'countyname', 'state', 'stateabb', 'statename')
colorder2 <- setdiff(colorder1, names(DF))
setcolorder(DF, c(colorder1,colorder2))
DF[,min_actual_mw:= rowMaxs(as.matrix(DF[,c('min_fed_mw', 'min_state_mw', 'min_county_mw', 'min_local_mw')]), na.rm = T)][,min_actual_mw:= ifelse(min_actual_mw==-Inf, NA, min_actual_mw)]
DF[,mean_actual_mw:= rowMaxs(as.matrix(DF[,c('mean_fed_mw', 'mean_state_mw', 'mean_county_mw', 'mean_local_mw')]), na.rm = T)][,mean_actual_mw:= ifelse(mean_actual_mw==-Inf, NA, mean_actual_mw)]
DF[,max_actual_mw:= rowMaxs(as.matrix(DF[,c('max_fed_mw', 'max_state_mw', 'max_county_mw', 'max_local_mw')]), na.rm = T)][,max_actual_mw:= ifelse(max_actual_mw==-Inf, NA, max_actual_mw)]
# Create event dummy
z <- DF[city=='Los Angeles',]
View(z)
setorderv(z, cols = c('zipcode', 'date'))
View(z)
z[,min_event := min_actual_mw - shift(min_actual_mw), by = 'zipcode']
View(z)
z <- DF[city=='Los Angeles',]
setorderv(z, cols = c('zipcode', 'date'))
z[,Dmin_actual_mw := min_actual_mw - shift(min_actual_mw), by = 'zipcode'][,min_event := ifelse(Dmin_actual_mw>0,1,0), by = 'zipcode']
View(z)
z[,Dmean_actual_mw := mean_actual_mw - shift(mean_actual_mw), by = 'zipcode'][,mean_event := ifelse(Dmean_actual_mw>0,1,0), by = 'zipcode']
z[,Dmax_actual_mw := max_actual_mw - shift(max_actual_mw), by = 'zipcode'][,max_event := ifelse(Dmax_actual_mw>0,1,0), by = 'zipcode']
View(z)
setorderv(DF, cols = c('zipcode', 'date'))
DF[,Dmin_actual_mw := min_actual_mw - shift(min_actual_mw), by = 'zipcode'][,min_event := ifelse(Dmin_actual_mw>0,1,0), by = 'zipcode']
DF[,Dmean_actual_mw := mean_actual_mw - shift(mean_actual_mw), by = 'zipcode'][,mean_event := ifelse(Dmean_actual_mw>0,1,0), by = 'zipcode']
DF[,Dmax_actual_mw := max_actual_mw - shift(max_actual_mw), by = 'zipcode'][,max_event := ifelse(Dmax_actual_mw>0,1,0), by = 'zipcode']
head(DF)
DF[,Dmin_actual_mw := min_actual_mw - shift(min_actual_mw), by = 'zipcode'][,min_event := ifelse(Dmin_actual_mw>0,1,0), by = 'zipcode']
z <- DF[zipcode=="00602",]
View(z)
setorderv(z, cols = c('zipcode', 'date'))
View(z)
z[,Dmin_actual_mw := min_actual_mw - shift(min_actual_mw), by = 'zipcode'][,min_event := ifelse(Dmin_actual_mw>0,1,0), by = 'zipcode']
View(z)
DF <- dfZillow
DF <- zip_county10[dfZillow, on = 'zipcode'] # Add county names
DF <- zip_places10[DF, on = 'zipcode'] # Add Place names
DF <- dfStatemw[DF, on = c('state', 'stateabb', 'date')] # Add State Level Minimum wage
DF <- dfCountymw[DF, on = c('state', 'statename', 'stateabb', 'countyname', 'date')]
DF <- dfLocalmw[DF, on = c('state', 'statename', 'stateabb', 'placename', 'date')]
colorder1 <- c('date', 'zipcode', 'place', 'placename', 'city', 'msa', 'county', 'countyname', 'state', 'stateabb', 'statename')
colorder2 <- setdiff(colorder1, names(DF))
setcolorder(DF, c(colorder1,colorder2))
# Create actual mininum wage for each zipcode (compare federal, state, county and place minimum wages)
DF[,min_actual_mw:= rowMaxs(as.matrix(DF[,c('min_fed_mw', 'min_state_mw', 'min_county_mw', 'min_local_mw')]), na.rm = T)][,min_actual_mw:= ifelse(min_actual_mw==-Inf, NA, min_actual_mw)]
DF[,mean_actual_mw:= rowMaxs(as.matrix(DF[,c('mean_fed_mw', 'mean_state_mw', 'mean_county_mw', 'mean_local_mw')]), na.rm = T)][,mean_actual_mw:= ifelse(mean_actual_mw==-Inf, NA, mean_actual_mw)]
DF[,max_actual_mw:= rowMaxs(as.matrix(DF[,c('max_fed_mw', 'max_state_mw', 'max_county_mw', 'max_local_mw')]), na.rm = T)][,max_actual_mw:= ifelse(max_actual_mw==-Inf, NA, max_actual_mw)]
z <- DF[zipcode=="00602",]
setorderv(z, cols = c('zipcode', 'date'))
z[,Dmin_actual_mw := min_actual_mw - shift(min_actual_mw), by = 'zipcode'][,min_event := ifelse(Dmin_actual_mw>0,1,0), by = 'zipcode']
View(z)
z <- DF[zipcode=="00602" | zipcode=="44001",]
setorderv(z, cols = c('zipcode', 'date'))
View(z)
z[,Dmin_actual_mw := min_actual_mw - shift(min_actual_mw), by = 'zipcode'][,min_event := ifelse(Dmin_actual_mw>0,1,0), by = 'zipcode']
z[,Dmin_actual_mw := min_actual_mw - shift(min_actual_mw), by = 'zipcode']
View(z)
z <- DF[zipcode=="00602" | zipcode=="44001",]
setorderv(z, cols = c('zipcode', 'date'))
z[,Dmin_actual_mw := min_actual_mw - shift(min_actual_mw), by = 'zipcode']
View(z)
z[,min_event := ifelse(Dmin_actual_mw>0,1,0), by = 'zipcode']
z[,min_event := ifelse(Dmin_actual_mw>0,1,0)]
View(z)
# Create event dummy
setorderv(DF, cols = c('zipcode', 'date'))
DF[,Dmin_actual_mw := min_actual_mw - shift(min_actual_mw), by = 'zipcode'][,min_event := ifelse(Dmin_actual_mw>0,1,0)]
DF[,Dmean_actual_mw := mean_actual_mw - shift(mean_actual_mw), by = 'zipcode'][,mean_event := ifelse(Dmean_actual_mw>0,1,0)]
DF[,Dmax_actual_mw := max_actual_mw - shift(max_actual_mw), by = 'zipcode'][,max_event := ifelse(Dmax_actual_mw>0,1,0)]
tail(DF)
# Set key and Save
setkey_unique(DF, cols = c('date', 'zipcode'))
fwrite_key(DF, file = paste0(outputdir, 'data_clean.csv'))
source('C:/Users/gabriel/Dropbox (Brown)/research/min_wage_rent/derived/code/main.R', echo=TRUE)
head(DF)
setorder(DF, cols = c('zipcode', 'date'))
setorderv(DF, cols = c('zipcode', 'date'))
DF
source('C:/Users/gabriel/Dropbox (Brown)/research/min_wage_rent/derived/code/main.R', echo=TRUE)
head(DF)
