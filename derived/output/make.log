
 make.py started: 2020-03-06 13:31:35 C:\Users\gabriel\Dropbox (Brown)\research\min_wage_rent\derived\code 




Execute:  StataMP-64 /e do "./label_final_dta.do"

  ___  ____  ____  ____  ____ (R)
 /__    /   ____/   /   ____/
___/   /   /___/   /   /___/   15.1   Copyright 1985-2017 StataCorp LLC
  Statistics/Data Analysis            StataCorp
                                      4905 Lakeway Drive
     MP - Parallel Edition            College Station, Texas 77845 USA
                                      800-STATA-PC        http://www.stata.com
                                      979-696-4600        stata@stata.com
                                      979-696-4601 (fax)

Single-user 32-core Stata perpetual license:
       Serial number:  501506205566
         Licensed to:  KU Leuven FEB (CES)
                       KU Leuven

Notes:
      1.  Stata is running in batch mode.
      2.  Unicode is supported; see help unicode_advice.
      3.  More than 2 billion observations are allowed; see help obs_advice.
      4.  Maximum number of variables is set to 5000; see help set_maxvar.

. do ./label_final_dta.do 

. set more off

. clear all

. adopath + ../../lib/stata/gslab_misc/ado
  [1]  (BASE)      "C:\Program Files (x86)\Stata15\ado\base/"
  [2]  (SITE)      "C:\Program Files (x86)\Stata15\ado\site/"
  [3]              "."
  [4]  (PERSONAL)  "c:\ado\personal/"
  [5]  (PLUS)      "c:\ado\plus/"
  [6]  (OLDPLACE)  "c:\ado/"
  [7]              "../../lib/stata/gslab_misc/ado"

. adopath + ../../lib/stata/mental_coupons/ado
  [1]  (BASE)      "C:\Program Files (x86)\Stata15\ado\base/"
  [2]  (SITE)      "C:\Program Files (x86)\Stata15\ado\site/"
  [3]              "."
  [4]  (PERSONAL)  "c:\ado\personal/"
  [5]  (PLUS)      "c:\ado\plus/"
  [6]  (OLDPLACE)  "c:\ado/"
  [7]              "../../lib/stata/gslab_misc/ado"
  [8]              "../../lib/stata/mental_coupons/ado"

. 
. cap mkdir "../output/"

. 
. 
. program main 
  1.         local csv_data "../output/"
  2.         local temp "../temp/"
  3. 
.         import_csv, instub(`csv_data')
  4.         clean_vars
  5.         label_vars
  6. 
.         local output "../output/"
  7.         compress
  8.         save_data `output'data_ready.dta, key(year_month zipcode) replace
  9. end 

. 
. program import_csv
  1.         syntax, instub(str)
  2.         import delim `instub'data_clean.csv, delim(",")
  3. end 

. 
. program clean_vars
  1.         *clean date
.         g year_month = date(date, "YMD")
  2.         replace year_month = mofd(year_month)
  3.         format year_month %tm 
  4.         order year_month, after(date)
  5.         drop date 
  6. 
.         drop if missing(year_month)
  7. 
.         * Remove obs with no data on minimum wage 
.         bys zipcode (year_month): egen no_mw_min_data = min(min_actual_mw)
  8.         bys zipcode (year_month): egen no_mw_mean_data = min(mean_actual_m
> w)
  9.         bys zipcode (year_month): egen no_mw_max_data = min(max_actual_mw)
>       
 10.         drop if missing(no_mw_min_data) & missing(no_mw_mean_data) & missi
> ng(no_mw_max_data)    
 11.         drop no_mw_min_data no_mw_mean_data no_mw_max_data
 12. 
.         *clean place/city name: since city has no missing keep that (BUT ZIP 
> CODE CAN BELONG TO DIFFERENT CITIES!!!!!)
.         * als, there are some 70000s zipcode-date where placename and city do
> esn't match (why)
.         drop placename 
 13.         local dropwords = `" " Town$" "^Town of " " Township$" "'
 14.                 foreach w in `dropwords' {
 15.                         replace city = regexr(city, "`w'", "")
 16.         }
 17. 
. end

. 
. 
. program label_vars 
  1.         sort state county city zipcode year_month
  2. 
.         foreach var in city msa {
  3.                 encode `var', g(`var'2)
  4.                 order `var'2, after(`var')
  5.                 drop `var'
  6.                 rename `var'2 `var'
  7.         }
  8.         
.         bysort state (statename): replace statename = statename[_N]
  9.         labmask state, values(statename)
 10.         drop statename 
 11.         
.         g countyfips = string(state, "%02.0f") + string(county, "%03.0f") 
 12.         destring countyfips, replace force 
 13.         order countyfips, after(county)
 14.         labmask countyfips, values(countyname)
 15.         drop countyname
 16. 
.         order placetype, after(stateabb)
 17.         encode placetype, g(ptype2)
 18.         order ptype2, after(placetype)
 19.         drop placetype
 20.         rename ptype2 placetype
 21. 
. 
.         sort state county city zipcode year_month       
 22. 
.         tsset year_month zipcode
 23. end 

. 
. 
. 
. 
. 
. 
. 
. main
(43 vars, 7,719,943 obs)
(26,985 missing values generated)
(7,692,958 real changes made)
(26,985 observations deleted)
(95475 missing values generated)
(95475 missing values generated)
(95475 missing values generated)
(95,475 observations deleted)
(1,140 real changes made)
(102,030 real changes made)
(289,560 real changes made)
(1,093,429 real changes made)
countyfips: all characters numeric; replaced as long
       panel variable:  year_month (unbalanced)
        time variable:  zipcode, 1001 to 99901, but with gaps
                delta:  1 unit
  variable year_month was float now int
  variable city was long now int
  variable msa was long now int
  variable placetype was long now byte
  (68,377,347 bytes saved)
(data already sorted by year_month zipcode)
  (0 bytes saved)
===============================================================================
> ===================
File: ../output/data_ready.dta
Key: year_month zipcode
===============================================================================
> ===================
  7597483:41(60979):1799046850:4094407296

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
  year_month |  7,597,483    577.0246     82.2744        435        719
     zipcode |  7,597,483    48426.78    27595.03       1001      99901
       place |  3,648,166    41872.93     23865.7        100      89300
        city |  7,597,483    6443.842    3747.067          1      13034
         msa |  5,984,668    436.7477    244.9903          1        859
-------------+---------------------------------------------------------
      county |  7,597,483     83.3507    83.45062          1        840
  countyfips |  7,597,483    29835.41    15130.56       1001      56045
       state |  7,597,483    29.75206    15.11902          1         56
    stateabb |          0
   placetype |  2,350,204           1           0          1          1
-------------+---------------------------------------------------------
min_local_mw |     60,400    8.052595    1.205039       5.15      15.24
mean_local~w |     60,400    8.054255    1.206666       5.15      15.24
max_local_mw |     60,400    8.055538    1.206877       5.15      15.24
localabove~e |     60,400    .1940563    .3954757          0          1
min_county~w |     58,437    7.582709    1.094743       5.15      10.91
-------------+---------------------------------------------------------
mean_count~w |     58,437    7.583254    1.094215       5.15      10.91
max_county~w |     58,437    7.585026    1.093746       5.15      10.91
countyabov~e |     58,437    .0549994     .227981          0          1
  min_fed_mw |  6,504,054    5.936359    1.023754       4.25       7.25
min_state_mw |  6,504,054    6.261964    1.228608       4.25       11.5
-------------+---------------------------------------------------------
 mean_fed_mw |  6,504,054     5.93858     1.02376       4.25       7.25
mean_state~w |  6,504,054    6.262971    1.228386       4.25       11.5
  max_fed_mw |  6,504,054    5.944964    1.025931       4.25       7.25
max_state_mw |  6,504,054    6.265792    1.229233       4.25       11.5
  placepop10 |  2,350,204    390591.8     1262634         49    8175133
-------------+---------------------------------------------------------
 zippctpop10 |  7,597,483    96.09259    9.688794          0        100
zippcthou~10 |  7,597,483    96.03763    9.564327         50        100
  zippctland |  7,597,483    93.35915    14.75699         .4        100
rent2br_me~n |    106,315    1764.751    877.7131        475      19500
rent2br_ps~n |     92,450    1.682024    .8027275   .5015197   12.55461
-------------+---------------------------------------------------------
rent_psqft~r |    144,062    1.145787    1.003317   .1039069   24.48466
     zhvi2br |  5,511,420    146088.1    132845.4       7100    3893638
min_actual~w |  6,504,054    6.264558    1.234563       4.25      15.24
mean_actua~w |  6,504,054    6.265579    1.234377       4.25      15.24
max_actual~w |  6,504,054    6.268411    1.235238       4.25      15.24
-------------+---------------------------------------------------------
dmin_actua~w |  6,477,385    .0155776    .1027601         -1       5.81
   min_event |  6,477,385    .0312018    .1738627          0          1
dmean_actu~w |  6,477,385    .0155756    .0984937         -1       5.81
  mean_event |  6,477,385    .0381443    .1915444          0          1
dmax_actua~w |  6,477,385    .0155739    .1027536         -1       5.81
-------------+---------------------------------------------------------
   max_event |  6,477,385    .0311927    .1738381          0          1




(note: file ../output/data_ready.dta not found)
file ../output/data_ready.dta saved

. 
end of do-file

 make.py ended: 2020-03-06 14:08:56
