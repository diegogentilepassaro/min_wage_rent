
 make.py started: 2022-07-21 08:28:31 C:\Users\diegog\Desktop\Diego\min_wage_rent\descriptive\mw_US\code 




Execute:  StataMP-64 /e do "./plot_mw.do"

  ___  ____  ____  ____  ____ (R)
 /__    /   ____/   /   ____/
___/   /   /___/   /   /___/   15.1   Copyright 1985-2017 StataCorp LLC
  Statistics/Data Analysis            StataCorp
                                      4905 Lakeway Drive
     MP - Parallel Edition            College Station, Texas 77845 USA
                                      800-STATA-PC        http://www.stata.com
                                      979-696-4600        stata@stata.com
                                      979-696-4601 (fax)

Single-user 32-core Stata perpetual license:
       Serial number:  501506205566
         Licensed to:  KU Leuven FEB (CES)
                       KU Leuven

Notes:
      1.  Stata is running in batch mode.
      2.  Unicode is supported; see help unicode_advice.
      3.  More than 2 billion observations are allowed; see help obs_advice.
      4.  Maximum number of variables is set to 5000; see help set_maxvar.


running c:\ado\personal\profile.do ...

. do ./plot_mw.do 

. clear all

. set more off

. adopath + ../../../lib/stata/gslab_misc/ado
  [1]  (BASE)      "C:\Program Files\Stata15\ado\base/"
  [2]  (SITE)      "C:\Program Files\Stata15\ado\site/"
  [3]              "."
  [4]  (PERSONAL)  "c:\ado\personal/"
  [5]  (PLUS)      "c:\ado\plus/"
  [6]  (OLDPLACE)  "c:\ado/"
  [7]              "../../../lib/stata/gslab_misc/ado"

. 
. program main
  1.     local in_mw_panels   "../../../drive/derived_large/min_wage_panels"
  2.     local in_zip_master  "../../../drive/base_large/zipcode_master"
  3.     local outstub        "../output"
  4. 
.     use "`in_mw_panels'/zip_statutory_mw.dta", clear
  5.     merge m:1 zipcode using "`in_zip_master'/zipcode_master.dta", nogen //
> /
>         assert(3) keepusing(place_code countyfips cbsa statefips)
  6.     drop if (year == 2020 & month > 6)
  7.     destring(statefips), gen(statefips_num)
  8.     gen year_month = ym(year, month)
  9.     format year_month %tm
 10.     drop year month
 11. 
.     flag_states_with_mw
 12.     flag_county_or_local_with_mw
 13. 
.     make_autofill_values
 14. 
.     plot_mw_levels, outstub(`outstub')
 15. end

. 
. program flag_states_with_mw
  1.     preserve
  2.         collapse (mean) fed_mw state_mw, by(statefips statefips_num year_m
> onth)
  3.         keep if !missing(state_mw)
  4.         bysort statefips: egen max_state_mw = max(state_mw)
  5.         keep if (round(max_state_mw, 0.001) > round(fed_mw, 0.001))
  6.         save_data "../temp/states_with_mw_and_their_levels_over_time.dta",
>  ///
>             replace key(statefips year_month) log(none)
  7.     restore
  8. end

. 
. program flag_county_or_local_with_mw
  1.     preserve
  2.         collapse (mean) fed_mw state_mw county_mw, ///
>             by(countyfips statefips year_month)
  3.         egen max_state_fed = rowmax(state_mw fed_mw)
  4.         keep if !missing(county_mw)
  5.         keep if (round(county_mw, 0.001) > round(max_state_fed, 0.001))
  6.         keep countyfips year_month county_mw
  7.         save_data "../temp/counties_with_mw_and_their_levels_over_time.dta
> ", ///
>             replace key(countyfips year_month) log(none)                
  8.     restore 
  9. 
.     preserve
 10.         collapse (mean) fed_mw state_mw county_mw local_mw, ///
>             by(place_code countyfips statefips year_month)
 11.         egen max_county_state_fed = rowmax(county_mw state_mw fed_mw)
 12.         keep if !missing(local_mw)
 13.         keep if (round(local_mw, 0.001) > round(max_county_state_fed, 0.00
> 1))
 14.         duplicates drop place_code year_month, force /* Some places are in
>  more than one county*/
 15.         unique place_code
 16.         keep place_code year_month local_mw
 17.         save_data "../temp/places_with_mw_and_their_levels_over_time.dta",
>  ///
>             replace key(place_code year_month) log(none)        
 18.     restore
 19. end

. 
. program plot_mw_levels
  1.     syntax, outstub(str) [width(int 2221) height(int 1615)]
  2. 
.     use "../temp/states_with_mw_and_their_levels_over_time.dta", clear
  3.     
.     bysort statefips: egen min_year_month = min(year_month)
  4.     gen state_mw_at_min_year_month = state_mw if year_month == min_year_mo
> nth
  5.     
.     xtset statefips_num year_month
  6.     unique statefips
  7.     
.     local n_states = r(unique)
  8.     local plotopts ""
  9.     forval i = 1(1)`n_states'{
 10.         local plotopts "`plotopts' plot`i'(lcol(gray))"
 11.     }
 12. 
.     xtline state_mw, overlay                                                 
> ///
>         xtitle("Monthly date") ytitle("Minimum wage level ($)")              
> ///
>         xlabel(`=mofd(td(01jun2010))'(6)`=mofd(td(01jun2020))', labsize(small
> ) angle(45)) ///
>         ylabel(7(2)17, labsize(small))                                       
> ///
>         graphregion(color(white)) bgcolor(white) legend(off)                 
> ///
>         addplot(scatter state_mw_at_min_year_month min_year_month,           
> ///
>         msymbol(diamond) mcolor(gray)) `plotopts'
 13.     
.     graph export `outstub'/state_mw_levels.png, replace width(`width') height
> (`height')
 14.     graph export `outstub'/state_mw_levels.eps, replace
 15. 
.     use "../temp/counties_with_mw_and_their_levels_over_time.dta", clear
 16.     append using "../temp/places_with_mw_and_their_levels_over_time.dta"
 17.     gen     jur_code = countyfips
 18.     replace jur_code = place_code if missing(jur_code)
 19.     destring(jur_code), gen(jur_code_num)
 20.     
.     gen jur_mw = county_mw
 21.     replace jur_mw = local_mw if missing(jur_mw)
 22. 
.     xtset jur_code_num year_month
 23.     unique jur_code
 24.     local n_jur = r(unique)
 25.     local plotopts ""
 26.     forval i = 1(1)`n_jur'{
 27.         local plotopts "`plotopts' plot`i'(lcol(gray))"
 28.     }
 29. 
.     bysort jur_code: egen min_year_month = min(year_month)
 30.     gen jur_mw_at_min_year_month = jur_mw if year_month == min_year_month
 31.     
.     xtline jur_mw, overlay                                                   
> ///
>         xtitle("Monthly date") ytitle("Minimum wage level ($)")              
> ///
>         xlabel(`=mofd(td(01jun2010))'(6)`=mofd(td(01jun2020))', labsize(small
> ) angle(45)) ///
>         ylabel(7(2)17, labsize(small))                                       
> ///
>         graphregion(color(white)) bgcolor(white) legend(off)                 
> ///
>         addplot(scatter jur_mw_at_min_year_month min_year_month,             
> ///
>         msymbol(diamond) mcolor(gray)) `plotopts'
 32.     
.     graph export `outstub'/local_mw_levels.png, replace width(`width') height
> (`height')
 33.     graph export `outstub'/local_mw_levels.eps, replace
 34. end

. 
. program make_autofill_values 
  1. 
.     preserve
  2.         use "../temp/states_with_mw_and_their_levels_over_time.dta", clear
  3.         unique statefips
  4.         local nbr_state_with_mw = r(unique)
  5. 
.         use "../temp/counties_with_mw_and_their_levels_over_time.dta", clear
  6.         unique countyfips
  7.         local nbr_county_with_mw = r(unique)
  8. 
.         use "../temp/places_with_mw_and_their_levels_over_time.dta", clear
  9.         unique place_code
 10.         local nbr_places_with_mw = r(unique)
 11. 
.         local nbr_local_with_mw = `nbr_county_with_mw' + `nbr_places_with_mw'
 12. 
.         cap file close f
 13.         file open   f using "../output/autofill.tex", write replace
 14.         file write  f "\newcommand{\stateBindingMW}{\textnormal{"  %2.0f  
> (`nbr_state_with_mw')  "}}" _n
 15.         file write  f "\newcommand{\countyBindingMW}{\textnormal{" %2.0f  
> (`nbr_county_with_mw') "}}" _n
 16.         file write  f "\newcommand{\placeBindingMW}{\textnormal{"  %2.0f  
> (`nbr_places_with_mw') "}}" _n
 17.         file write  f "\newcommand{\localBindingMW}{\textnormal{"  %2.0f  
> (`nbr_local_with_mw')  "}}" _n
 18.         file close  f
 19.     restore
 20. end

. 
. main

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                         4,201,032  
    -----------------------------------------
(190,956 observations deleted)
statefips: all characters numeric; statefips_num generated as byte
(0 observations deleted)
(2,646 observations deleted)
(data now sorted by statefips year_month)
  variable year_month was float now int
  (7,560 bytes saved)
===============================================================================
File: ../temp/states_with_mw_and_their_levels_over_time.dta
Key: statefips year_month
===============================================================================
  3780:6(71642):3226817449:1273506015

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
   statefips |          0
  year_month |      3,780       662.5    36.37673        600        725
statefips_~m |      3,780    25.93333    15.21809          2         54
      fed_mw |      3,780        7.25           0       7.25       7.25
    state_mw |      3,780    8.538086    1.274202       7.25         14
-------------+---------------------------------------------------------
max_state_mw |      3,780    10.49194    1.561395       8.25         14




(note: file ../temp/states_with_mw_and_their_levels_over_time.dta not found)
file ../temp/states_with_mw_and_their_levels_over_time.dta saved
(393,750 observations deleted)
(749 observations deleted)
(data now sorted by countyfips year_month)
  variable year_month was float now int
  (1,022 bytes saved)
===============================================================================
File: ../temp/counties_with_mw_and_their_levels_over_time.dta
Key: countyfips year_month
===============================================================================
  511:3(41526):2605845985:2911494246

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
  countyfips |          0
  year_month |        511     694.317    20.34114        642        725
   county_mw |        511    10.72406    1.505869          8      14.25




(note: file ../temp/counties_with_mw_and_their_levels_over_time.dta not found)
file ../temp/counties_with_mw_and_their_levels_over_time.dta saved
(1,809,360 observations deleted)
(3,483 observations deleted)

Duplicates in terms of place_code year_month

(168 observations deleted)
Number of unique values of place_code is  27
Number of records is  1389
(data now sorted by place_code year_month)
  variable year_month was float now int
  (2,778 bytes saved)
===============================================================================
File: ../temp/places_with_mw_and_their_levels_over_time.dta
Key: place_code year_month
===============================================================================
  1389:3(32776):2513612223:398498652

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
  place_code |          0
  year_month |      1,389    687.3017    27.34256        600        725
    local_mw |      1,389      12.056    2.350006   8.009583      16.39




(note: file ../temp/places_with_mw_and_their_levels_over_time.dta not found)
file ../temp/places_with_mw_and_their_levels_over_time.dta saved
Number of unique values of statefips is  30
Number of records is  3780
Number of unique values of countyfips is  10
Number of records is  511
Number of unique values of place_code is  27
Number of records is  1389
(note: file ../output/autofill.tex not found)
(3,750 missing values generated)
       panel variable:  statefips_num (strongly balanced)
        time variable:  year_month, 2010m1 to 2020m6
                delta:  1 month
Number of unique values of statefips is  30
Number of records is  3780
(note: file ../output/state_mw_levels.png not found)
(file ../output/state_mw_levels.png written in PNG format)
(note: file ../output/state_mw_levels.eps not found)
(file ../output/state_mw_levels.eps written in EPS format)
(1,389 missing values generated)
variable jur_code was str5 now str7
(1,389 real changes made)
jur_code: all characters numeric; jur_code_num generated as long
(1,389 missing values generated)
(1,389 real changes made)
       panel variable:  jur_code_num (unbalanced)
        time variable:  year_month, 2010m1 to 2020m6, but with gaps
                delta:  1 month
Number of unique values of jur_code is  37
Number of records is  1900
(1,863 missing values generated)
(note: file ../output/local_mw_levels.png not found)
(file ../output/local_mw_levels.png written in PNG format)
(note: file ../output/local_mw_levels.eps not found)
(file ../output/local_mw_levels.eps written in EPS format)

. 
end of do-file

 make.py ended: 2022-07-21 08:29:48
