
 make.py started: 2020-11-08 15:33:05 C:\Users\shermo\Documents\GitHub\min_wage_rent\analysis\descriptive\code 




Execute:  R CMD BATCH --no-save "./build_summary_tables.R" build_summary_tables.Rout

R version 3.6.3 (2020-02-29) -- "Holding the Windsock"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> remove(list = ls())
> source("../../../lib/R/load_packages.R")
> source("../../../lib/R/save_data.R")

Please cite as: 

 Hlavac, Marek (2018). stargazer: Well-Formatted Regression and Summary Statistics Tables.
 R package version 5.2.2. https://CRAN.R-project.org/package=stargazer 


Attaching package: 'dplyr'

The following objects are masked from 'package:stats':

    filter, lag

The following objects are masked from 'package:base':

    intersect, setdiff, setequal, union


Attaching package: 'data.table'

The following objects are masked from 'package:dplyr':

    between, first, last

> 
> load_packages(c('readr', 'readxl', 'haven', 'dplyr', 'stringr', 'stargazer'))
> 
> 
> main <- function() {
+   instub_base_l <- "../../../drive/base_large/output"
+   instub_derv_l <- "../../../drive/derived_large/output"
+   instub_cbsa   <- "../../../drive/raw_data/census/cbsa/nhgis0049_csv"
+   instub_xwalk  <- "../../../raw/crosswalk"
+   outstub       <- "../output/"
+   
+   rent_vars <- paste0("medrentpricepsqft", c("_2br", "_mfr5plus", "_sfcc"))
+   
+   df_zipdemo <- read_csv(file.path(instub_base_l, "zip_demo.csv"))
+     
+   df_cbsa    <- load_top_CBSA(df_zipdemo, instub_cbsa, instub_xwalk)
+   
+   df_rents_panel <- load_rents(df_zipdemo, instub_derv_l, rent_vars)
+   df_rents_all   <- load_rents(df_zipdemo, instub_derv_l, rent_vars, all = T)
+   
+   panel_zipcodes  <- unique(df_rents_panel$zipcode)
+   zillow_zipcodes <- unique(df_rents_all %>% 
+                               filter(!is.na(medrentpricepsqft_sfcc)) %>%
+                               pull(zipcode))
+   
+   # Compare our sample to full US and urban US
+   US_stats   <- build_basic_stats(df_zipdemo)
+   CBSA_stats <- build_basic_stats(df_cbsa)
+   rents_panel_stats <- build_basic_stats(df_zipdemo %>% filter(zipcode %in% panel_zipcodes))
+   rents_all_stats   <- build_basic_stats(df_zipdemo %>% filter(zipcode %in% zillow_zipcodes))
+   
+   stats <- rbind(US_stats, CBSA_stats, rents_all_stats, rents_panel_stats)
+   
+   stats <- add_basic_rents_and_format(stats, df_rents_panel, df_rents_all, rent_vars[3])
+   
+   row_labels <- c("Population (millions) (2010)", "Population as share of U.S.", 
+                   "Housing Units (millions) (2010)", "Housing Units as share of U.S.", 
+                   paste0(c("Urban", "College", "African-American", "Hispanic", "Elder",
+                            "Poor", "Unemployed"), " Share (2010)"),
+                   "Mean HH income (2010)", "Rent House Share (2010)", 
+                   "Work in same county share (2010)", "Unique zipcodes", 
+                   paste0("Share of ", c("state ", "county ", " local"), "events"), 
+                   paste0(c("Mean ", "Unique zipcodes "), "SFCC psqft rent"))
+   rownames(stats) <- row_labels
+   
+   stargazer(stats, summary = F, digits = 2,
+             float = F, out = file.path(outstub, "stats_sample.tex"))
+   
+   # Statistics of estimating panel
+   df_est <- as.data.frame(df_rents_panel %>% 
+                             select(c("zipcode", "year_month", rent_vars, "medrentprice_sfcc",
+                                      "estcount_servpr", "avgwwage_servpr", "emp_servpr")) %>%
+                             mutate(zipcode = as.factor(zipcode),
+                                    year_month = as.factor(year_month)))
+   
+   var_labels = c(paste0("Median rent price per sqft.", c(" 2BR", " MFR5plus", "SFCC")), "Median rent price SFCC",
+                  paste0(c("Establishment count", "Average wage", "Employment"), " Services"))
+   
+   stargazer(df_est, digits = 2,
+             omit.summary.stat = c("p25", "p75"), covariate.labels = var_labels,
+             #add.lines = list(c("Unique zipcodes", format(length(panel_zipcodes), big.mark = ","), "", "", "", "")),
+             float = F, out = file.path(outstub, "stats_est_panel.tex"))
+ }
> 
> load_top_CBSA <- function(df_zipdemo, instub_cbsa, instub_xwalk, n = 100) {
+   
+   zip_cbsa <- read_excel(file.path(instub_xwalk, "ZIP_CBSA_122019.xlsx"),
+                          col_types = "numeric") %>%
+     rename(zipcode = ZIP, cbsa = CBSA, totratio = TOT_RATIO) %>%
+     select(zipcode, cbsa, totratio)
+   
+   df <- left_join(zip_cbsa, df_zipdemo) %>%
+     filter(totratio > 0.5) %>%
+     group_by(cbsa) %>%
+     mutate(pop_cbsa = sum(pop2010)) %>%
+     ungroup()
+   
+   pop_cbsa <- read_csv(file.path(instub_cbsa, "nhgis0049_ds172_2010_cbsa.csv")) %>%
+     rename(pop_cbsa = H7V001, cbsa = CBSAA) %>%
+     select(pop_cbsa, cbsa) %>% arrange(-pop_cbsa) %>%
+     mutate(topn = ifelse(row_number() <= n, 1, 0))
+   
+   df <- left_join(df, pop_cbsa[, c("cbsa", "topn")])
+   
+   return(df %>% filter(topn == 1))
+ }
> 
> load_rents <- function(df_zipdemo, instub, rent_vars, all = F) {
+   
+   if (all) {
+     df_rents <- read_dta(file.path(instub, "zipcode_yearmonth_panel_all.dta")) %>%
+       select(c("zipcode", "year_month", "year", "month", rent_vars, "medrentprice_sfcc",
+                "state_event", "county_event", "local_event"))
+   } else {
+     df_rents <- read_dta(file.path(instub, "baseline_rent_panel.dta"))
+     
+     cpi      <- read_csv(file.path("../../../drive/raw_data/bls", "cpi_bls.csv")) %>%
+       mutate(Period = as.numeric(str_replace(Period, "M", ""))) %>%
+       rename(year = Year, month = Period, cpi = Value) %>%
+       filter(year != 2020) %>% select(year, month, cpi) %>%
+       mutate(cpi = cpi/last(cpi))    # Bring everything to Dec 2019 prices
+     
+     df_rents <- left_join(df_rents, cpi, by = c('year', 'month'))
+     for (var in rent_vars){
+       df_rents[, var] <- df_rents[, var]/df_rents$cpi
+     }
+     df_rents <- df_rents %>% mutate(cpi = NULL)
+   }
+   
+   return(df_rents)
+ }
> 
> 
> build_basic_stats <- function(df) {
+   
+   stats <- df %>%
+     summarise(pop_2010            = sum(pop2010, na.rm = T)/1e6,
+               housing_units_2010  = sum(housing_units2010, na.rm = T)/1e6,
+               urb_share2010       = mean(urb_share2010, na.rm = T),
+               college_share2010   = mean(urb_share2010, na.rm = T),
+               poor_share20105     = mean(urb_share2010, na.rm = T),
+               black_share2010     = mean(urb_share2010, na.rm = T),
+               hisp_share2010      = mean(hisp_share2010, na.rm = T),
+               elder_share2010     = mean(elder_share2010, na.rm = T),
+               unemp_share20105    = mean(unemp_share20105, na.rm = T),
+               med_hhinc20105      = mean(med_hhinc20105, na.rm = T),
+               renthouse_share2010 = mean(renthouse_share2010, na.rm = T),
+               work_county_share20105 = mean(work_county_share20105, na.rm = T),
+               zip_count           = n_distinct(zipcode))
+   
+   return(stats)
+ }
> 
> add_basic_rents_and_format <- function(stats, df_rents_panel, df_rents_all, rent_var) {
+   
+   stats <- stats %>%
+     mutate(sh_pop     = pop_2010/first(pop_2010), 
+            sh_housing = housing_units_2010/first(housing_units_2010))
+   
+   for (type in c("state", "county", "local")) {
+     var <- paste0(type, "_event")
+     stats[, paste0(var, "_sh")] = c(NA, NA, mean(pull(df_rents_panel, var), na.rm = T), 
+                              mean(pull(df_rents_all, var), na.rm = T))
+   }
+   
+   stats$mean_sfcc_psqft <- c(NA, NA, mean(pull(df_rents_all, rent_var), na.rm = T), 
+                                      mean(pull(df_rents_panel, rent_var), na.rm = T))
+   
+   stats$non_na_zipcod <- c(NA, NA, 
+                            n_distinct(df_rents_all[!is.na(pull(df_rents_all, rent_var)), "zipcode"], na.rm = T), 
+                            n_distinct(df_rents_panel[!is.na(pull(df_rents_panel, rent_var)), "zipcode"], na.rm = T))
+   
+   desired_order <- c("pop_2010", "sh_pop", "housing_units_2010", "sh_housing", 
+                      "urb_share2010", "college_share2010", "black_share2010", "hisp_share2010", 
+                      "elder_share2010", "poor_share20105", "unemp_share20105", 
+                      "med_hhinc20105", "renthouse_share2010", "work_county_share20105", 
+                      "zip_count", "state_event_sh", "county_event_sh", "local_event_sh", 
+                      "mean_sfcc_psqft", "non_na_zipcod")
+   
+   stats <- t(stats[, desired_order])
+   colnames(stats) <- c("U.S.", "Top 100 CBSA", "Full Panel", "Est. Panel")
+   
+   return(stats)
+ }
> 
> main()

-- Column specification --------------------------------------------------------
cols(
  .default = col_double()
)
i Use `spec()` for the full column specifications.

Joining, by = "zipcode"

-- Column specification --------------------------------------------------------
cols(
  .default = col_logical(),
  GISJOIN = col_character(),
  YEAR = col_double(),
  CBSA = col_character(),
  CBSAA = col_double(),
  CSAA = col_double(),
  NAME = col_character(),
  H7V001 = col_double()
)
i Use `spec()` for the full column specifications.

Joining, by = "cbsa"

-- Column specification --------------------------------------------------------
cols(
  `Series ID` = col_character(),
  Year = col_double(),
  Period = col_character(),
  Label = col_character(),
  Value = col_double()
)

Note: Using an external vector in selections is ambiguous.
i Use `all_of(rent_vars)` instead of `rent_vars` to silence this message.
i See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

% Table created by stargazer v.5.2.2 by Marek Hlavac, Harvard University. E-mail: hlavac at fas.harvard.edu
% Date and time: Sun, Nov 08, 2020 - 3:45:47 PM
\begin{tabular}{@{\extracolsep{5pt}} ccccc} 
\\[-1.8ex]\hline 
\hline \\[-1.8ex] 
 & U.S. & Top 100 CBSA & Full Panel & Est. Panel \\ 
\hline \\[-1.8ex] 
Population (millions) (2010) & $311.18$ & $189.71$ & $110.17$ & $50.62$ \\ 
Population as share of U.S. & $1$ & $0.61$ & $0.35$ & $0.16$ \\ 
Housing Units (millions) (2010) & $132.83$ & $78.74$ & $46.72$ & $21.32$ \\ 
Housing Units as share of U.S. & $1$ & $0.59$ & $0.35$ & $0.16$ \\ 
Urban Share (2010) & $0.46$ & $0.75$ & $0.96$ & $0.97$ \\ 
College Share (2010) & $0.46$ & $0.75$ & $0.96$ & $0.97$ \\ 
African-American Share (2010) & $0.46$ & $0.75$ & $0.96$ & $0.97$ \\ 
Hispanic Share (2010) & $0.10$ & $0.14$ & $0.17$ & $0.19$ \\ 
Elder Share (2010) & $0.15$ & $0.13$ & $0.12$ & $0.11$ \\ 
Poor Share (2010) & $0.46$ & $0.75$ & $0.96$ & $0.97$ \\ 
Unemployed Share (2010) & $0.09$ & $0.09$ & $0.09$ & $0.09$ \\ 
Mean HH income (2010) & $52,492.56$ & $62,773.64$ & $65,475.16$ & $66,919.72$ \\ 
Rent House Share (2010) & $0.29$ & $0.35$ & $0.38$ & $0.38$ \\ 
Work in same county share (2010) & $0.70$ & $0.68$ & $0.76$ & $0.76$ \\ 
Unique zipcodes & $38,893$ & $14,583$ & $3,315$ & $1,305$ \\ 
Share of state events & $$ & $$ & $0.03$ & $0.03$ \\ 
Share of county events & $$ & $$ & $0.001$ & $0.001$ \\ 
Share of  localevents & $$ & $$ & $0.003$ & $0.0005$ \\ 
Mean SFCC psqft rent & $$ & $$ & $1.30$ & $1.27$ \\ 
Unique zipcodes SFCC psqft rent & $$ & $$ & $3,316$ & $1,143$ \\ 
\hline \\[-1.8ex] 
\end{tabular} 

% Table created by stargazer v.5.2.2 by Marek Hlavac, Harvard University. E-mail: hlavac at fas.harvard.edu
% Date and time: Sun, Nov 08, 2020 - 3:45:48 PM
\begin{tabular}{@{\extracolsep{5pt}}lccccc} 
\\[-1.8ex]\hline 
\hline \\[-1.8ex] 
Statistic & \multicolumn{1}{c}{N} & \multicolumn{1}{c}{Mean} & \multicolumn{1}{c}{St. Dev.} & \multicolumn{1}{c}{Min} & \multicolumn{1}{c}{Max} \\ 
\hline \\[-1.8ex] 
Median rent price per sqft. 2BR & 24,789 & 1.96 & 0.97 & 0.53 & 6.51 \\ 
Median rent price per sqft. MFR5plus & 37,588 & 1.96 & 1.05 & 0.55 & 6.69 \\ 
Median rent price per sqft.SFCC & 113,375 & 1.27 & 0.83 & 0.47 & 7.25 \\ 
Median rent price SFCC & 125,644 & 1,651.10 & 702.99 & 595.00 & 6,595.00 \\ 
Establishment count Services & 152,334 & 44,916.45 & 55,846.62 & 321.00 & 474,767.00 \\ 
Average wage Services & 152,334 & 1,000.93 & 364.54 & 375.00 & 3,356.00 \\ 
Employment Services & 152,334 & 595,498.80 & 612,701.90 & 2,751.00 & 3,449,324.00 \\ 
\hline \\[-1.8ex] 
\end{tabular} 
There were 50 or more warnings (use warnings() to see the first 50)
> 
> proc.time()
   user  system elapsed 
 659.48   78.96  763.40 

 make.py ended: 2020-11-08 15:45:50
