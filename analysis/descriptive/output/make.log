
 make.py started: 2020-04-07 19:33:18 C:\Users\gabriel\Dropbox (Brown)\research\min_wage_rent\analysis\descriptive\code 




Execute:  R CMD BATCH --no-save "./zillow_descriptive.R" zillow_descriptive.Rout

R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> remove(list = ls())
> source("../../../lib/R/load_packages.R")
> source("../../../lib/R/save_data.R")

Please cite as: 

 Hlavac, Marek (2018). stargazer: Well-Formatted Regression and Summary Statistics Tables.
 R package version 5.2.2. https://CRAN.R-project.org/package=stargazer 


Attaching package: 'dplyr'

The following objects are masked from 'package:stats':

    filter, lag

The following objects are masked from 'package:base':

    intersect, setdiff, setequal, union


Attaching package: 'data.table'

The following objects are masked from 'package:dplyr':

    between, first, last

Warning message:
package 'dplyr' was built under R version 3.6.2 
> 
> load_packages(c('tidyverse', 'data.table', 'tidycensus', 'matrixStats', 'knitr', 'kableExtra', 'ggplot2', 'png', 'grid'))
-- Attaching packages --------------------------------------- tidyverse 1.3.0 --
v ggplot2 3.2.1     v purrr   0.3.3
v tibble  2.1.3     v stringr 1.4.0
v tidyr   1.0.0     v forcats 0.4.0
v readr   1.3.1     
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x data.table::between() masks dplyr::between()
x dplyr::filter()       masks stats::filter()
x data.table::first()   masks dplyr::first()
x dplyr::lag()          masks stats::lag()
x data.table::last()    masks dplyr::last()
x purrr::transpose()    masks data.table::transpose()

Attaching package: 'matrixStats'

The following object is masked from 'package:dplyr':

    count


Attaching package: 'kableExtra'

The following object is masked from 'package:dplyr':

    group_rows

Warning messages:
1: package 'tidyverse' was built under R version 3.6.2 
2: package 'ggplot2' was built under R version 3.6.2 
3: package 'tidyr' was built under R version 3.6.2 
4: package 'purrr' was built under R version 3.6.2 
> 
> theme_set(theme_minimal())
> 
> main <- function() {
+    datadir <- "../../../drive/derived_large/output/"
+    outdir <- "../output/"
+    tempdir <- "../temp/"
+    
+    df <- fread(paste0(datadir, "data_clean.csv"))
+    
+    df <- prepare_data(df)
+ 
+    descriptive_table(df, outdir)
+ 
+    zillow_plots(df, outdir)
+ }
> 
> 
> prepare_data <- function(x) {
+    x[,date := as.Date(date, "%Y-%m-%d")]
+ }
> 
> 
> descriptive_table <- function(d, outstub) {
+    
+    d <- setDT(d)
+    
+    geovars <- c('zipcode', 'date', 'city', 'msa', 'county', 'statename', 'stateabb', 'i.statename', 'place', 'placename', 'countyname', 'state', 'year', 'placetype', 'placepop10', 'zippctpop10', 'zippcthouse10', 'zippctland')
+    
+ 
+    minwage_vars <- names(d) %>%
+       str_subset(pattern = "mw")
+    
+    
+    zillow_varlist <- setdiff(colnames(d), 
+                              c(geovars, minwage_vars))
+    
+    
+    d[, year := as.numeric(substr(date, 1,4))]
+    
+    pre2010_varlist <- sapply(zillow_varlist, function(v) {
+       first_year <- d[
+          !is.na(get(v)), 
+          ]
+       
+       first_year <- min(first_year$year, na.rm = T)
+       
+       return(first_year)
+    })
+    pre2010_varlist<- names(pre2010_varlist[pre2010_varlist<2010])
+    post2010_varlist <- setdiff(zillow_varlist, pre2010_varlist)
+    
+    zillow_missingZip <- sapply(zillow_varlist, function(x) {
+       
+       if (x %in% post2010_varlist) d <- d[year>=2010,]
+       
+       tot_zip <- length(unique(d[!is.na(get(x)),]$zipcode))
+       totNA_zip <- length(unique(d$zipcode)) - tot_zip
+       
+       results <- c('totNA' = totNA_zip, 'tot_zip' = tot_zip)
+       return(results)
+    })
+    zillow_missingZip <- t(zillow_missingZip)
+    
+    
+    
+    zillow_sumstats <- sapply(zillow_varlist, function(x) {
+       
+       
+       if (x %in% post2010_varlist) d <- d[year>=2010,]
+       
+       sel_vars <- c('zipcode', 'mw_event', x)
+       
+       data <- d[,..sel_vars]
+       
+       data[, isNA := is.na(get(x))][
+          isNA==0, ]
+       
+       N <- data[, .N]
+       
+       data_len <- data[,.N, by = zipcode]
+       
+       summstats <- function(x) list(mean = mean(x, na.rm = T), sd = sd(x, na.rm = T), median = median(x, na.rm = T), min = min(x, na.rm = T), max = max(x, na.rm = T))
+       
+       len_subtable <- data_len[,unlist(lapply(.SD, summstats)), .SDcols = c('N')]
+       
+       event_per_zip <- data[,.(N.event = sum(mw_event, na.rm = T)), by = zipcode][,.(N.event = mean(N.event, na.rm = T))]
+       
+       event_per_zip <- event_per_zip$N.event
+       
+       summary_var <- data[,unlist(lapply(.SD, summstats)), .SDcols = x]
+       
+       names(summary_var) <- c('mean', 'SD', 'median', 'min', 'max')
+       
+       
+       results <- c( len_subtable,
+                     'EventPerZip' = event_per_zip,
+                     'N' = N,
+                     summary_var)
+       
+       
+       return(results)
+    })
+    zillow_sumstats <- t(zillow_sumstats)
+    
+    
+    options('scipen' = 999, 'digits' = 4)
+    final_table <- setDT(data.frame('ZillowSeries' = row.names(zillow_missingZip),
+                                    zillow_missingZip,
+                                    zillow_sumstats))
+    
+    save_data(final_table,
+              key = 'ZillowSeries',
+              filename = paste0(outstub, 'zillow_descriptive.csv'))
+ }
> 
> 
> zillow_plots <- function(data, outstub) {
+    geovars <- c('zipcode', 'date', 'city', 'msa', 'county', 'statename', 'stateabb', 'i.statename', 'place', 'placename', 'countyname', 'state', 'year', 'placetype', 'placepop10', 'zippctpop10', 'zippcthouse10', 'zippctland')
+    
+    
+    minwage_vars <- names(data) %>%
+       str_subset(pattern = "mw")
+    
+    
+    zillow_varlist <- setdiff(colnames(data), 
+                              c(geovars, minwage_vars))
+    
+    plots <- lapply(zillow_varlist, function(x) {
+       cols <- c('date', x)
+       d <- data[,..cols]
+       
+       d <- d[is.na(get(x))==0,]
+       
+       sdmean <- function(y) {
+          sdm <- sd(y, na.rm = T) / sqrt(length(y))
+          return(sdm)
+       }
+       
+       d <- d[, .('mean' = mean(get(x), na.rm = T), 'sdm' = sdmean(get(x))), by = 'date']
+       d[, c('CIlow', 'CIup'):= .((mean - 1.96*sdm), (mean + 1.96*sdm))]
+       
+       
+       d[,date := as.Date(date, format = "%Y-%m-%d")]
+       brks <- c('2010-06-01', '2011-06-01', '2012-06-01', '2013-06-01', '2014-06-01', '2015-06-01', '2016-06-01', '2017-06-01', '2018-06-01', '2019-06-01')
+       brks <- as.Date(brks, format = "%Y-%m-%d")
+       lbls <- lubridate::year(brks)
+       
+       plot <- ggplot(d, aes(x = date, group = 1)) +
+          geom_line(aes(y = mean)) +
+          geom_ribbon(aes(ymin = CIlow, ymax = CIup), fill = "gray80", alpha = 0.8) +
+          labs(title = x,
+               caption = "Source: Zillow.com") + 
+          scale_x_date(labels = lbls, breaks = brks)
+       print(plot)
+       return(plot)
+    })
+    names(plots) <- zillow_varlist
+    
+    pdf(paste0(outstub,'zillow_plots.pdf'))
+    lapply(plots,function(x){
+       img <- x
+       grid.draw(img)
+    })
+    dev.off()
+ }
> 
> 
> main()
[1] "File '../output/zillow_descriptive.csv' saved successfully."
pdf 
  2 
Warning messages:
1: Removed 1 rows containing missing values (geom_path). 
2: Removed 1 rows containing missing values (geom_path). 
3: Removed 1 rows containing missing values (geom_path). 
4: Removed 1 rows containing missing values (geom_path). 
> 
> proc.time()
   user  system elapsed 
 285.03   56.01  313.75 

 make.py ended: 2020-04-07 19:38:34
