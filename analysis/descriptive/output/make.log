
 make.py started: 2020-12-01 14:36:06 /Users/gabriborg/Dropbox (Brown)/research/min_wage_rent/analysis/descriptive/code 




Execute:  R CMD BATCH --no-save "./build_summary_tables.R" build_summary_tables.Rout

R version 4.0.2 (2020-06-22) -- "Taking Off Again"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> remove(list = ls())
> source("../../../lib/R/load_packages.R")
> source("../../../lib/R/save_data.R")

Please cite as: 

 Hlavac, Marek (2018). stargazer: Well-Formatted Regression and Summary Statistics Tables.
 R package version 5.2.2. https://CRAN.R-project.org/package=stargazer 


Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union


Attaching package: ‘data.table’

The following objects are masked from ‘package:dplyr’:

    between, first, last

> 
> load_packages(c('readr', 'readxl', 'haven', 'dplyr', 'stringr', 'stargazer'))
> 
> 
> main <- function() {
+   instub_base_l <- "../../../drive/base_large/output"
+   instub_derv_l <- "../../../drive/derived_large/output"
+   instub_cbsa   <- "../../../drive/raw_data/census/cbsa/nhgis0049_csv"
+   instub_xwalk  <- "../../../raw/crosswalk"
+   outstub       <- "../output/"
+   
+   rent_vars <- paste0("medrentpricepsqft", c("_2br", "_mfr5plus", "_sfcc"))
+   
+   df_zipdemo <- read_csv(file.path(instub_base_l, "zip_demo.csv"))
+     
+   df_cbsa    <- load_top_CBSA(df_zipdemo, instub_cbsa, instub_xwalk)
+   
+   df_rents_panel <- load_rents(df_zipdemo, instub_derv_l, rent_vars)
+   df_rents_all   <- load_rents(df_zipdemo, instub_derv_l, rent_vars, all = T)
+   
+   panel_zipcodes  <- unique(df_rents_panel$zipcode)
+   zillow_zipcodes <- unique(df_rents_all %>% 
+                               filter(!is.na(medrentpricepsqft_sfcc)) %>%
+                               pull(zipcode))
+   
+   # Compare our sample to full US and urban US
+   US_stats   <- build_basic_stats(df_zipdemo)
+   CBSA_stats <- build_basic_stats(df_cbsa)
+   rents_panel_stats <- build_basic_stats(df_zipdemo %>% filter(zipcode %in% panel_zipcodes))
+   rents_all_stats   <- build_basic_stats(df_zipdemo %>% filter(zipcode %in% zillow_zipcodes))
+   
+   stats <- rbind(US_stats, CBSA_stats, rents_all_stats, rents_panel_stats)
+   
+   stats <- add_basic_rents_and_format(stats, df_rents_panel, df_rents_all, rent_vars[3])
+   
+   row_labels <- c("Population (millions) (2010)", "Population as share of U.S.", 
+                   "Housing Units (millions) (2010)", "Housing Units as share of U.S.", 
+                   paste0(c("Urban", "College", "African-American", "Hispanic", "Elder",
+                            "Poor", "Unemployed"), " Share (2010)"),
+                   "Mean HH income (2010)", "Rent House Share (2010)", #"Work in same county share (2010)",
+                   "Unique zipcodes", 
+                   #paste0("Share of ", c("state ", "county ", "local "), "events"), 
+                   "Mean SFCC psqft rent")
+   rownames(stats) <- row_labels
+   
+   tab = capture.output(stargazer(stats, summary = F, digits = 2,
+                                type = "latex", float = F))
+   tab = gsub("ccccc", "lcccc", tab)
+   cat(paste(tab, "\n"), file = file.path(outstub, "stats_sample.tex"))
+   
+   
+   # Short Statistics of estimating panel
+   df_est <- as.data.frame(df_rents_panel %>% 
+                             select(c("zipcode", "year_month", 
+                                      "actual_mw", "exp_mw_totjob",
+                                      "medrentpricepsqft_sfcc", "medrentprice_sfcc",
+                                      paste0(c("avgwwage_", "emp_", "estcount_"), "fin"))) %>%
+                             mutate(zipcode = as.factor(zipcode),
+                                    year_month = as.factor(year_month)))
+   
+   var_labels = c("Statutory MW", "Experienced MW",
+                  "Median rent psqft. SFCC", "Median rent SFCC",
+                  paste0(c("Avg. wage", "Employment", "Estab. count"), " Fin. activities"))
+   
+   stargazer(df_est, digits = 2,
+             omit.summary.stat = c("p25", "p75"), covariate.labels = var_labels,
+             #add.lines = list(c("Unique zipcodes", format(length(panel_zipcodes), big.mark = ","), "", "", "", "")),
+             float = F, out = file.path(outstub, "stats_est_panel.tex"))
+   
+   # Full Statistics of estimating panel
+   df_est <- as.data.frame(df_rents_panel %>% 
+                             select(c("zipcode", "year_month", 
+                                      "actual_mw", "exp_mw_totjob", "exp_mw_job_lowinc", "exp_mw_job_young",
+                                      rent_vars, "medrentprice_sfcc",
+                                      paste0(c("avgwwage_", "emp_", "estcount_"), "fin"),
+                                      paste0(c("avgwwage_", "emp_", "estcount_"), "bizserv"),
+                                      paste0(c("avgwwage_", "emp_", "estcount_"), "info"))) %>%
+                             mutate(zipcode = as.factor(zipcode),
+                                    year_month = as.factor(year_month)))
+   
+   var_labels = c("Statutory MW", paste("Experienced MW", c("(total jobs)", "(low inc.)", "(young)")),
+                  paste0("Median rent psqft.", c(" 2BR", " MFR5plus", "SFCC")), "Median rent SFCC",
+                  paste0(c("Avg. wage", "Employment", "Estab. count"), " Fin. activities"),
+                  paste0(c("Avg. wage", "Employment", "Estab. count"), " Prof. and bus. serv."),
+                  paste0(c("Avg. wage", "Employment", "Estab. count"), " Information"))
+   
+   stargazer(df_est, digits = 2,
+             omit.summary.stat = c("p25", "p75"), covariate.labels = var_labels,
+             #add.lines = list(c("Unique zipcodes", format(length(panel_zipcodes), big.mark = ","), "", "", "", "")),
+             float = F, out = file.path(outstub, "stats_est_panel_full.tex"))
+ }
> 
> load_top_CBSA <- function(df_zipdemo, instub_cbsa, instub_xwalk, n = 100) {
+   
+   zip_cbsa <- read_excel(file.path(instub_xwalk, "ZIP_CBSA_122019.xlsx"),
+                          col_types = "numeric") %>%
+     rename(zipcode = ZIP, cbsa = CBSA, totratio = TOT_RATIO) %>%
+     select(zipcode, cbsa, totratio)
+   
+   df <- left_join(zip_cbsa, df_zipdemo) %>%
+     filter(totratio > 0.5) %>%
+     group_by(cbsa) %>%
+     mutate(pop_cbsa = sum(pop2010)) %>%
+     ungroup()
+   
+   pop_cbsa <- read_csv(file.path(instub_cbsa, "nhgis0049_ds172_2010_cbsa.csv")) %>%
+     rename(pop_cbsa = H7V001, cbsa = CBSAA) %>%
+     select(pop_cbsa, cbsa) %>% arrange(-pop_cbsa) %>%
+     mutate(topn = ifelse(row_number() <= n, 1, 0))
+   
+   df <- left_join(df, pop_cbsa[, c("cbsa", "topn")])
+   
+   return(df %>% filter(topn == 1))
+ }
> 
> load_rents <- function(df_zipdemo, instub, rent_vars, all = F) {
+   
+   if (all) {
+     df_rents <- read_dta(file.path(instub, "zipcode_yearmonth_panel_all.dta")) %>%
+       select(c("zipcode", "year_month", "year", "month", rent_vars, "medrentprice_sfcc",
+                "state_event", "county_event", "local_event"))
+   } else {
+     df_rents <- read_dta(file.path(instub, "baseline_rent_panel.dta"))
+     
+     cpi      <- read_csv(file.path("../../../drive/raw_data/bls", "cpi_bls.csv")) %>%
+       mutate(Period = as.numeric(str_replace(Period, "M", ""))) %>%
+       rename(year = Year, month = Period, cpi = Value) %>%
+       filter(year != 2020) %>% select(year, month, cpi) %>%
+       mutate(cpi = cpi/last(cpi))    # Bring everything to Dec 2019 prices
+     
+     df_rents <- left_join(df_rents, cpi, by = c('year', 'month'))
+     for (var in rent_vars){
+       df_rents[, var] <- df_rents[, var]/df_rents$cpi
+     }
+     df_rents <- df_rents %>% mutate(cpi = NULL)
+   }
+   
+   return(df_rents)
+ }
> 
> 
> build_basic_stats <- function(df) {
+   
+   stats <- df %>%
+     summarise(pop_2010            = sum(pop2010, na.rm = T)/1e6,
+               housing_units_2010  = sum(housing_units2010, na.rm = T)/1e6,
+               urb_share2010       = mean(urb_share2010, na.rm = T),
+               college_share2010   = mean(college_share20105, na.rm = T),
+               poor_share20105     = mean(poor_share20105, na.rm = T),
+               black_share2010     = mean(black_share2010, na.rm = T),
+               hisp_share2010      = mean(hisp_share2010, na.rm = T),
+               elder_share2010     = mean(elder_share2010, na.rm = T),
+               unemp_share20105    = mean(unemp_share20105, na.rm = T),
+               med_hhinc20105      = mean(med_hhinc20105, na.rm = T),
+               renthouse_share2010 = mean(renthouse_share2010, na.rm = T),
+               zip_count           = n_distinct(zipcode))
+   
+   return(stats)
+ }
> 
> add_basic_rents_and_format <- function(stats, df_rents_panel, df_rents_all, rent_var) {
+   
+   stats <- stats %>%
+     mutate(sh_pop     = pop_2010/first(pop_2010), 
+            sh_housing = housing_units_2010/first(housing_units_2010))
+   
+   # for (type in c("state", "county", "local")) {
+   #   var <- paste0(type, "_event")
+   #   stats[, paste0(var, "_sh")] = c(NA, NA, mean(pull(df_rents_panel, var), na.rm = T), 
+   #                            mean(pull(df_rents_all, var), na.rm = T))
+   # }
+   
+   stats$mean_sfcc_psqft <- c(NA, NA, mean(pull(df_rents_all, rent_var), na.rm = T), 
+                                      mean(pull(df_rents_panel, rent_var), na.rm = T))
+   # stats$non_na_zipcod <- c(NA, NA, 
+   #                          n_distinct(df_rents_all[!is.na(pull(df_rents_all, rent_var)), "zipcode"], na.rm = T), 
+   #                          n_distinct(df_rents_panel[!is.na(pull(df_rents_panel, rent_var)), "zipcode"], na.rm = T))
+   
+   desired_order <- c("pop_2010", "sh_pop", "housing_units_2010", "sh_housing", 
+                      "urb_share2010", "college_share2010", "black_share2010", "hisp_share2010", 
+                      "elder_share2010", "poor_share20105", "unemp_share20105", 
+                      "med_hhinc20105", "renthouse_share2010", #"work_county_share20105",
+                      "zip_count", 
+                      #"state_event_sh", "county_event_sh", "local_event_sh", 
+                      "mean_sfcc_psqft") #, "non_na_zipcod")
+   
+   stats <- t(stats[, desired_order])
+   colnames(stats) <- c("U.S.", "Top 100 CBSA", "Full Panel", "Est. Panel")
+   
+   return(stats)
+ }
> 
> main()
Parsed with column specification:
cols(
  .default = col_double()
)
See spec(...) for full column specifications.
Joining, by = "zipcode"
Parsed with column specification:
cols(
  .default = col_logical(),
  GISJOIN = col_character(),
  YEAR = col_double(),
  CBSA = col_character(),
  CBSAA = col_double(),
  CSAA = col_double(),
  NAME = col_character(),
  H7V001 = col_double()
)
See spec(...) for full column specifications.
Joining, by = "cbsa"
Parsed with column specification:
cols(
  `Series ID` = col_character(),
  Year = col_double(),
  Period = col_character(),
  Label = col_character(),
  Value = col_double()
)
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(rent_vars)` instead of `rent_vars` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.

% Table created by stargazer v.5.2.2 by Marek Hlavac, Harvard University. E-mail: hlavac at fas.harvard.edu
% Date and time: Tue, Dec 01, 2020 - 14:46:56
\begin{tabular}{@{\extracolsep{5pt}}lccccc} 
\\[-1.8ex]\hline 
\hline \\[-1.8ex] 
Statistic & \multicolumn{1}{c}{N} & \multicolumn{1}{c}{Mean} & \multicolumn{1}{c}{St. Dev.} & \multicolumn{1}{c}{Min} & \multicolumn{1}{c}{Max} \\ 
\hline \\[-1.8ex] 
Statutory MW & 156,600 & 8.08 & 1.21 & 7 & 16 \\ 
Experienced MW & 156,600 & 8.06 & 1.20 & 6.29 & 14.98 \\ 
Median rent psqft. SFCC & 113,375 & 1.27 & 0.83 & 0.47 & 7.25 \\ 
Median rent SFCC & 125,644 & 1,651.10 & 702.99 & 595.00 & 6,595.00 \\ 
Avg. wage Fin. activities & 152,334 & 1,561.71 & 965.21 & 0.00 & 9,547.00 \\ 
Employment Fin. activities & 152,334 & 59,557.25 & 75,803.56 & 0.00 & 398,481.00 \\ 
Estab. count Fin. activities & 152,334 & 5,103.54 & 5,200.22 & 31.00 & 30,238.00 \\ 
\hline \\[-1.8ex] 
\end{tabular} 

% Table created by stargazer v.5.2.2 by Marek Hlavac, Harvard University. E-mail: hlavac at fas.harvard.edu
% Date and time: Tue, Dec 01, 2020 - 14:46:57
\begin{tabular}{@{\extracolsep{5pt}}lccccc} 
\\[-1.8ex]\hline 
\hline \\[-1.8ex] 
Statistic & \multicolumn{1}{c}{N} & \multicolumn{1}{c}{Mean} & \multicolumn{1}{c}{St. Dev.} & \multicolumn{1}{c}{Min} & \multicolumn{1}{c}{Max} \\ 
\hline \\[-1.8ex] 
Statutory MW & 156,600 & 8.08 & 1.21 & 7 & 16 \\ 
Experienced MW (total jobs) & 156,600 & 8.06 & 1.20 & 6.29 & 14.98 \\ 
Experienced MW (low inc.) & 156,600 & 8.06 & 1.20 & 5.81 & 15.02 \\ 
Experienced MW (young) & 156,600 & 8.06 & 1.20 & 6.19 & 15.07 \\ 
Median rent psqft. 2BR & 24,789 & 1.96 & 0.97 & 0.53 & 6.51 \\ 
Median rent psqft. MFR5plus & 37,588 & 1.96 & 1.05 & 0.55 & 6.69 \\ 
Median rent psqft.SFCC & 113,375 & 1.27 & 0.83 & 0.47 & 7.25 \\ 
Median rent SFCC & 125,644 & 1,651.10 & 702.99 & 595.00 & 6,595.00 \\ 
Avg. wage Fin. activities & 152,334 & 1,561.71 & 965.21 & 0.00 & 9,547.00 \\ 
Employment Fin. activities & 152,334 & 59,557.25 & 75,803.56 & 0.00 & 398,481.00 \\ 
Estab. count Fin. activities & 152,334 & 5,103.54 & 5,200.22 & 31.00 & 30,238.00 \\ 
Avg. wage Prof. and bus. serv. & 152,334 & 1,252.92 & 434.76 & 226.00 & 4,727.00 \\ 
Employment Prof. and bus. serv. & 152,334 & 134,293.30 & 143,883.80 & 329.00 & 642,234.00 \\ 
Estab. count Prof. and bus. serv. & 152,334 & 9,998.14 & 9,478.14 & 60.00 & 56,304.00 \\ 
Avg. wage Information & 152,334 & 1,504.75 & 620.23 & 0.00 & 7,381.00 \\ 
Employment Information & 152,334 & 21,043.15 & 35,144.92 & 0.00 & 240,358.00 \\ 
Estab. count Information & 152,334 & 920.67 & 1,382.30 & 4.00 & 13,212.00 \\ 
\hline \\[-1.8ex] 
\end{tabular} 
There were 50 or more warnings (use warnings() to see the first 50)
> 
> proc.time()
   user  system elapsed 
614.757  29.437 652.368 


Execute:  stataSE -e do "./plot_mw.do"

  ___  ____  ____  ____  ____ (R)
 /__    /   ____/   /   ____/
___/   /   /___/   /   /___/   16.1   Copyright 1985-2019 StataCorp LLC
  Statistics/Data analysis            StataCorp
                                      4905 Lakeway Drive
     Special Edition                  College Station, Texas 77845 USA
                                      800-STATA-PC        https://www.stata.com
                                      979-696-4600        stata@stata.com
                                      979-696-4601 (fax)

Stata license: 120-user network perpetual
Serial number: 401606201670
  Licensed to: Brown University
               Brown University

Notes:
      1. Stata is running in batch mode.
      2. Unicode is supported; see help unicode_advice.
      3. Maximum number of variables is set to 5,000; see help set_maxvar.

. do ./plot_mw.do 

. clear all

. set more off

. adopath + ../../../lib/stata/gslab_misc/ado
  [1]  (BASE)      "/Applications/Stata/ado/base/"
  [2]  (SITE)      "/Applications/Stata/ado/site/"
  [3]              "."
  [4]  (PERSONAL)  "/Users/gabriborg/Documents/Stata/ado/personal/"
  [5]  (PLUS)      "/Users/gabriborg/Library/Application Support/Stata/ado/plus/"
  [6]  (OLDPLACE)  "~/ado/"
  [7]              "../../../lib/stata/gslab_misc/ado"

. adopath + ../../../lib/stata/min_wage/ado
  [1]  (BASE)      "/Applications/Stata/ado/base/"
  [2]  (SITE)      "/Applications/Stata/ado/site/"
  [3]              "."
  [4]  (PERSONAL)  "/Users/gabriborg/Documents/Stata/ado/personal/"
  [5]  (PLUS)      "/Users/gabriborg/Library/Application Support/Stata/ado/plus/"
  [6]  (OLDPLACE)  "~/ado/"
  [7]              "../../../lib/stata/gslab_misc/ado"
  [8]              "../../../lib/stata/min_wage/ado"

. set maxvar 32000


. 
. program main
  1.         local instub "../../../drive/derived_large/output"
  2.         local outstub "../output"
  3. 
.         load_data, instub(`instub')
  4.         plot_mw_dist, outstub(`outstub')
  5. end

. 
. program load_data
  1.         syntax, instub(str)
  2. 
.         local instub "../../../drive/derived_large/output"
  3. 
.         use zipcode year_month actual_mw ///
>                 using `instub'/unbal_rent_panel.dta, clear
  4. 
.         bys zipcode (year_month): gen pct_ch_MW = 100*(actual_mw/L.actual_mw - 1
> )
  5. end

. 
. program plot_mw_dist
  1.         syntax, outstub(str)
  2. 
.         twoway (hist pct_ch_MW if pct_ch_MW>0, color(navy%80) lcolor(white) lw(v
> thin)), ///
>                         xtitle("Minimum wage changes (%)", size(small)) ytitle("
> Frequency", size(small)) ///
>                         xlabel(, labsize(small)) ylabel(, labsize(small)) ///
>                         graphregion(color(white)) bgcolor(white)
  3.         graph export `outstub'/pct_ch_mw_dist.png, replace 
  4.         graph export `outstub'/pct_ch_mw_dist.eps, replace
  5. 
.         keep if pct_ch_MW>0
  6.         twoway (hist year_month, color(navy%80) lcolor(white) lw(vthin)), ///
>                         xtitle("Monthly date", size(small)) ytitle("Frequency", 
> size(small)) ///
>                         xlabel(#20, labsize(small) angle(45)) ///
>                         graphregion(color(white)) bgcolor(white)
  7.         graph export `outstub'/pct_ch_mw_date_dist.png, replace 
  8.         graph export `outstub'/pct_ch_mw_date_dist.eps, replace 
  9. end

. 
. 
. main
(4,604 missing values generated)
(file /Users/gabriborg/Dropbox (Brown)/research/min_wage_rent/analysis/descriptive
> /code/../output/pct_ch_mw_dist.png written in PNG format)
(note: file ../output/pct_ch_mw_dist.eps not found)
(file ../output/pct_ch_mw_dist.eps written in EPS format)
(529,278 observations deleted)
(file /Users/gabriborg/Dropbox (Brown)/research/min_wage_rent/analysis/descriptive
> /code/../output/pct_ch_mw_date_dist.png written in PNG format)
(note: file ../output/pct_ch_mw_date_dist.eps not found)
(file ../output/pct_ch_mw_date_dist.eps written in EPS format)

. 
end of do-file

 make.py ended: 2020-12-01 14:47:04
