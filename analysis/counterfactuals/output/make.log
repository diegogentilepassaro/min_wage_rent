
 make.py started: 2022-03-26 08:43:51 C:\Users\shermo\Documents\GitHub\min_wage_rent\analysis\counterfactuals\code 




Execute:  StataMP-64 /e do "./prepare.do"

  ___  ____  ____  ____  ____ (R)
 /__    /   ____/   /   ____/
___/   /   /___/   /   /___/   15.1   Copyright 1985-2017 StataCorp LLC
  Statistics/Data Analysis            StataCorp
                                      4905 Lakeway Drive
     MP - Parallel Edition            College Station, Texas 77845 USA
                                      800-STATA-PC        http://www.stata.com
                                      979-696-4600        stata@stata.com
                                      979-696-4601 (fax)

Single-user 32-core Stata perpetual license:
       Serial number:  501506205566
         Licensed to:  KU Leuven FEB (CES)
                       KU Leuven

Notes:
      1.  Stata is running in batch mode.
      2.  Unicode is supported; see help unicode_advice.
      3.  More than 2 billion observations are allowed; see help obs_advice.
      4.  Maximum number of variables is set to 5000; see help set_maxvar.


running c:\ado\personal\profile.do ...

. do ./prepare.do 

. clear all

. set more off

. set maxvar 32000


. 
. program main
  1.         local in_zip_mth  "../../../drive/derived_large/zipcode_month"
  2.     local in_est      "../../../drive/derived_large/estimation_samples"
  3.     local in_cf_mw    "../../../drive/derived_large/min_wage_measures"
  4.         local in_zip_year "../../../drive/derived_large/zipcode_year"
  5.     
.     local cluster = "statefips"
  6.     local absorb  = "year_month"
  7.     
.     local mw_wkp_var "mw_wkp_tot_17"
  8. 
.     process_counterfactual_data, in_cf_mw(`in_cf_mw') in_zip_mth(`in_zip_mth'
> )
  9.     
.     use zipcode statefips year_month year month ///
>         mw_res `mw_wkp_var' medrentpricepsqft_SFCC ///
>         using "`in_zip_mth'/zipcode_month_panel.dta", clear
 10.         drop if year == 2020
 11.         gen ln_rents = log(medrentpricepsqft_SFCC)
 12.         destring zipcode, gen(zipcode_num)
 13.     add_baseline_zipcodes, instub(`in_est')
 14.     build_rents_for_cf, mw_wkp_var(`mw_wkp_var')
 15.         
.     keep zipcode year month d_mw_res d_`mw_wkp_var' ///
>         ln_rents_pre
 16.         order zipcode year month d_mw_res d_`mw_wkp_var' ///
>         ln_rents_pre
 17.     save_data "../output/d_ln_rents_cf_predictions.dta", ///
>         key(zipcode year month) replace
 18.                 
.     use "`in_zip_year'/zipcode_year.dta", clear
 19.         build_wagebill_for_cf, mw_wkp_var(`mw_wkp_var')
 20.         
.         keep zipcode year ln_wagebill_pre n_hhlds_pre
 21.         order zipcode year ln_wagebill_pre n_hhlds_pre
 22.         save_data "../output/ln_wagebill_cf_predictions.dta", ///
>             key(zipcode year) replace
 23. end

. 
. program process_counterfactual_data
  1.     syntax, in_cf_mw(str) in_zip_mth(str)
  2.     
.     use zipcode year month counterfactual mw_wkp_tot using ///
>         "`in_cf_mw'/zipcode_wkp_mw_cfs.dta", clear
  3.     
.     bysort zipcode counterfactual (year month): ///
>         gen d_mw_wkp_cf = mw_wkp_tot[_n] - mw_wkp_tot[_n - 1]
  4.         
.     keep if (year == 2020 & month == 1)
  5.     rename mw_wkp_tot mw_wkp_tot_cf
  6.     gen fed_mw_cf = 7.25*1.1 if counterfactual == "fed_10pc"
  7.     replace fed_mw_cf = 15 if counterfactual == "fed_15usd"
  8.     replace fed_mw_cf = 9 if counterfactual == "fed_9usd"
  9.     save "../temp/counterfactual.dta", replace
 10.     
.     use "`in_zip_mth'/zipcode_month_panel.dta", clear
 11.     keep if (year == 2019 & month == 12)
 12.     keep zipcode statutory_mw
 13.     expand 3
 14.     bysort zipcode: gen counterfactual = "fed_10pc" if _n == 1
 15.     bysort zipcode: replace counterfactual = "fed_15usd" if _n == 2
 16.     bysort zipcode: replace counterfactual = "fed_9usd" if _n == 3
 17.     merge 1:1 zipcode counterfactual using "../temp/counterfactual.dta", /
> //
>         nogen keep(3)
 18.     egen statutory_mw_cf = rowmax(statutory_mw fed_mw_cf)
 19.     gen d_mw_res_cf = log(statutory_mw_cf) - log(statutory_mw)
 20.     drop fed_mw_cf statutory_mw_cf mw_wkp_tot_cf
 21.     
.     foreach stub in "10pc" "9usd" "15usd" {
 22.         preserve
 23.             keep if counterfactual == "fed_`stub'"
 24.             drop counterfactual
 25.             save "../temp/counterfactual_fed_`stub'.dta", replace
 26.         restore
 27.     }
 28. end

. 
. program add_baseline_zipcodes
  1.     syntax, instub(str)
  2. 
.     preserve
  3.         use `instub'/zipcode_months.dta, clear
  4. 
.         keep if baseline_sample == 1
  5.         bys  zipcode: keep if _n == 1
  6.         keep zipcode baseline_sample
  7. 
.         tempfile zipcode_years_baseline
  8.         save    `zipcode_years_baseline'
  9.     restore
 10. 
.     merge m:1 zipcode using `zipcode_years_baseline', keep(1 3) nogen
 11. 
.     replace baseline_sample = 0 if baseline_sample != 1
 12. end

. 
. program build_rents_for_cf
  1.     syntax, mw_wkp_var(str)
  2. 
.     local mw_wkp_var "mw_wkp_tot_17"
  3. 
.     bysort zipcode (year_month): gen d_ln_rents = ln_rents[_n] - ln_rents[_n-
> 1]
  4.     bysort zipcode (year_month): gen d_mw_res = mw_res[_n] - mw_res[_n-1]
  5.     bysort zipcode (year_month): gen d_`mw_wkp_var' = `mw_wkp_var'[_n] - `
> mw_wkp_var'[_n-1]
  6.         
.     append using "../temp/counterfactual_fed_9usd.dta"
  7.     
.     replace d_mw_res = d_mw_res_cf if (year == 2020 & month == 1)
  8.     replace d_`mw_wkp_var' = d_mw_wkp_cf if (year == 2020 & month == 1)
  9.     
.     bysort zipcode (year month): gen ln_rents_pre = ///
>             ln_rents[_n-1] if (year == 2020 & month == 1)
 10.     gen counterfactual = 0
 11.     replace counterfactual = 1 if (year == 2020 & month == 1) 
 12.     replace year_month = `=tm(2019m12)' if year_month == 2020
 13. 
.     keep if counterfactual == 1
 14. end

. 
. program build_wagebill_for_cf
  1.     syntax, mw_wkp_var(str)
  2. 
.     keep if year == 2019
  3.     append using "../temp/counterfactual_fed_9usd.dta"
  4.         gen counterfactual = 0
  5.         replace counterfactual = 1 if year == 2020
  6.         keep zipcode year counterfactual ln_wagebill ln_n_hhdls
  7.         bysort zipcode (year): carryforward ln_wagebill, replace
  8.         gen n_hhlds = exp(ln_n_hhdls)
  9.         bysort zipcode (year): carryforward n_hhlds, replace
 10.         keep if counterfactual == 1
 11.         rename (ln_wagebill n_hhlds) (ln_wagebill_pre n_hhlds_pre)
 12. end

. 
. main
(94,839 missing values generated)
(94,839 observations deleted)
(63,226 missing values generated)
(31,613 real changes made)
(31,613 real changes made)
file ../temp/counterfactual.dta saved
(3,787,294 observations deleted)
(63,652 observations created)
(63,652 missing values generated)
(31,826 real changes made)
(31,826 real changes made)

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                            94,839  
    -----------------------------------------
(63,226 observations deleted)
file ../temp/counterfactual_fed_10pc.dta saved
(63,226 observations deleted)
file ../temp/counterfactual_fed_9usd.dta saved
(63,226 observations deleted)
file ../temp/counterfactual_fed_15usd.dta saved
(0 observations deleted)
(3,621,142 missing values generated)
zipcode: all characters numeric; zipcode_num generated as long
(64,378 observations deleted)
(132,255 observations deleted)
file C:\Users\shermo\AppData\Local\Temp\8\ST_698b8_000003.tmp saved

    Result                           # of obs.
    -----------------------------------------
    not matched                     3,657,720
        from master                 3,657,720  
        from using                          0  

    matched                           161,400  
    -----------------------------------------
(3,657,720 real changes made)
(3,624,458 missing values generated)
(31,826 missing values generated)
(57,173 missing values generated)
(note: variable year was int, now double to accommodate using data's values)
(note: variable month was byte, now double to accommodate using data's
       values)
(31,613 real changes made)
(31,613 real changes made)
(3,847,417 missing values generated)
(31,613 real changes made)
(0 real changes made)
(3,819,120 observations deleted)
(data already sorted by zipcode year month)
  variable year was double now int
  variable month was double now byte
  (410,969 bytes saved)
===============================================================================
File: ../output/d_ln_rents_cf_predictions.dta
Key: zipcode year month
===============================================================================
  31613:6(60207):194334164:2177432441

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
     zipcode |          0
        year |     31,613        2020           0       2020       2020
       month |     31,613           1           0          1          1
    d_mw_res |     31,613    .1085182    .1005629  -5.20e-08   .2162231
d_mw_wkp_~17 |     31,613    .1070453    .0942726          0   .2162231
-------------+---------------------------------------------------------
ln_rents_pre |      3,316     .240916    .4561595  -2.087003   2.741863




(note: file ../output/d_ln_rents_cf_predictions.dta not found)
file ../output/d_ln_rents_cf_predictions.dta saved
(286,434 observations deleted)
(note: variable year was int, now double to accommodate using data's values)
(31,613 real changes made)
ln_wagebill:  (27565 real changes made)
(35,869 missing values generated)
n_hhlds:  (27565 real changes made)
(31,826 observations deleted)
(data already sorted by zipcode year)
  variable year was double now int
  (189,678 bytes saved)
===============================================================================
File: ../output/ln_wagebill_cf_predictions.dta
Key: zipcode year
===============================================================================
  31613:4(86785):2671386553:2476083153

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
     zipcode |          0
        year |     31,613        2020           0       2020       2020
ln_wagebil~e |     27,565    11.37574    1.705545   6.527958   15.56616
 n_hhlds_pre |     27,565    5515.279    7312.897   90.00001   58999.98




(note: file ../output/ln_wagebill_cf_predictions.dta not found)
file ../output/ln_wagebill_cf_predictions.dta saved

. 
end of do-file


Execute:  StataMP-64 /e do "./figures.do"

  ___  ____  ____  ____  ____ (R)
 /__    /   ____/   /   ____/
___/   /   /___/   /   /___/   15.1   Copyright 1985-2017 StataCorp LLC
  Statistics/Data Analysis            StataCorp
                                      4905 Lakeway Drive
     MP - Parallel Edition            College Station, Texas 77845 USA
                                      800-STATA-PC        http://www.stata.com
                                      979-696-4600        stata@stata.com
                                      979-696-4601 (fax)

Single-user 32-core Stata perpetual license:
       Serial number:  501506205566
         Licensed to:  KU Leuven FEB (CES)
                       KU Leuven

Notes:
      1.  Stata is running in batch mode.
      2.  Unicode is supported; see help unicode_advice.
      3.  More than 2 billion observations are allowed; see help obs_advice.
      4.  Maximum number of variables is set to 5000; see help set_maxvar.


running c:\ado\personal\profile.do ...

. do ./figures.do 

. clear all

. set more off

. set maxvar 32000


. 
. program main
  1.     local instub      "../output"
  2.     local in_baseline "../../fd_baseline/output"
  3.     local in_wages    "../../twfe_wages/output"
  4.     local in_zip      "../../../drive/derived_large/zipcode"
  5. 
.     use "`in_zip'/zipcode_cross.dta", clear
  6.     load_parameters, in_baseline(`in_baseline') in_wages(`in_wages')
  7.     local beta    = r(beta)
  8.     local gamma   = r(gamma)
  9.     local epsilon = r(epsilon)
 10. 
.     di "Beta, Gamma, and Epsilon: `beta', `gamma', `epsilon'"
 11. 
.     use `instub'/d_ln_rents_cf_predictions.dta, clear
 12.     merge 1:1 zipcode using  `instub'/ln_wagebill_cf_predictions.dta, ///
>         nogen keep(1 3) keepusing(ln_wagebill_pre n_hhlds_pre)
 13.     merge 1:1 zipcode using "`in_zip'/zipcode_cross.dta", ///
>         nogen keep(1 3) keepusing(cbsa sh_rural_pop_2010)
 14.     gen rural = (sh_rural_pop_2010 >= 0.8)
 15.     drop sh_rural_pop_2010
 16. 
.     compute_vars, beta(`beta') gamma(`gamma') epsilon(`epsilon')
 17.     preserve
 18.         keep zipcode cbsa d_mw_res d_mw_wkp_tot_17 ///
>             change_ln_wagebill change_ln_rents rho
 19.         save_data "../output/predicted_changes_in_rents.dta", ///
>             key(zipcode) replace log(none)
 20.         export delimited "../output/predicted_changes_in_rents.csv", repla
> ce
 21.     restore
 22.     foreach var in d_mw_res d_mw_wkp_tot_17 ///
>                     perc_incr_rent perc_incr_wagebill ///
>                     ratio_increases rho {
 23.         
.         get_xlabel, var(`var')
 24.         local x_lab = r(x_lab)
 25.         
.         local scale_opts ""
 26.         local bin_opt    ""
 27.         if inlist("`var'", "d_mw_res", "d_mw_wkp_tot_17") {
 28.             local scale_opts "yscale(r(0 43)) xscale(r(0 0.23))"
 29.             local bin_opt    "bin(25)"
 30.         }
 31.         if inlist("`var'", "rho", "perc_incr_rent", "perc_incr_wagebill") 
> {
 32.             local bin_opt    "bin(30)"
 33.         }
 34. 
.         hist `var', percent `bin_opt'                                   ///
>             xtitle("`x_lab'") ytitle("Percentage") `scale_opts'         ///
>             graphregion(color(white)) bgcolor(white)                    ///
>             plotregion(margin(b = 1.5))
 35.         
.         graph export "../output/`var'.png", replace
 36.         graph export "../output/`var'.eps", replace
 37.     }
 38. 
.     save             "../output/data_counterfactuals.dta", replace
 39.     export delimited "../output/data_counterfactuals.csv", replace
 40. 
.     collapse (mean) rho_lb rho rho_ub, by(diff_qts)
 41. 
.     twoway (line     rho       diff_qts, lcol(navy))                        /
> //
>            (scatter  rho       diff_qts, mcol(navy)),                       /
> //
>         xtitle("Difference between change in wrk. and res. MW (deciles)")   /
> //
>         ytitle("Mean share accruing to landlord on each dollar")            /
> //
>         xlabel(1(1)10) ylabel(0(0.04)0.2)                                   /
> //
>         graphregion(color(white)) bgcolor(white) legend(off)
 42.         
.     graph export "../output/deciles_diff.png", replace
 43.     graph export "../output/deciles_diff.eps", replace
 44. end

. 
. 
. program load_parameters, rclass
  1.     syntax, in_baseline(str) in_wages(str)
  2. 
.     use `in_baseline'/estimates_static.dta, clear
  3.     keep if model == "static_both"
  4. 
.     qui sum b if var == "mw_res"
  5.     return local gamma = r(mean)
  6.     qui sum b if var == "mw_wkp_tot_17"
  7.     return local beta = r(mean)
  8. 
.     use `in_wages'/estimates_cbsa_time.dta, clear
  9.     qui sum b
 10.     return local epsilon = r(mean)
 11. end

. 
. program compute_vars
  1.     syntax, beta(str) gamma(str) epsilon(str) [s(real 0.35)]
  2. 
.     keep if rural == 0
  3. 
.     * Predictions with parameters
.     gen diff_mw    = d_mw_wkp_tot_17 - d_mw_res
  4.     xtile diff_qts = diff_mw, nquantiles(10)
  5. 
.     egen max_d_mw_res = max(d_mw_res)
  6.     gen no_direct_treatment       = d_mw_res == 0
  7.     gen fully_affected            = !no_direct_treatment
  8. 
.     gen change_ln_rents    = `beta'*d_mw_wkp_tot_17 + `gamma'*d_mw_res
  9.     gen change_ln_wagebill = `epsilon'*d_mw_wkp_tot_17
 10. 
.     gen perc_incr_rent     = exp(change_ln_rents)    - 1
 11.     gen perc_incr_wagebill = exp(change_ln_wagebill) - 1
 12.     gen ratio_increases    = perc_incr_rent/perc_incr_wagebill
 13. 
.     local s_lb = `s' - 0.1
 14.     local s_ub = `s' + 0.1
 15. 
.     gen rho    = `s'*ratio_increases
 16.     gen rho_lb = `s_lb'*ratio_increases
 17.     gen rho_ub = `s_ub'*ratio_increases
 18. end

. 
. program get_xlabel, rclass
  1.     syntax, var(str)
  2. 
.     if inlist("`var'", "p_d_ln_rents", "p_d_ln_rents_with_fe", ///
>               "p_d_ln_rents_zillow", "p_d_ln_rents_with_fe_zillow") {
  3.         return local x_lab "Change in log rents"
  4.     }
  5. 
.     if "`var'"=="d_mw_res"           return local x_lab "Change in residence 
> MW"
  6.     if "`var'"=="d_mw_wkp_tot_17"    return local x_lab "Change in workpla
> ce MW"
  7. 
.     if "`var'"=="perc_incr_rent"     return local x_lab "Percent increase in 
> rents per sq. foot"
  8.     if "`var'"=="perc_incr_wagebill" return local x_lab "Percent increase 
> in total wages"
  9. 
.     if "`var'"=="ratio_increases"    return local x_lab "Ratio of percent inc
> reases"
 10.     if "`var'"=="rho"                return local x_lab "Landlord share"  
>       
 11. 
. end

. 
. 
. main
(6 observations deleted)
Beta, Gamma, and Epsilon: .0546001419425011, -.0207457412034273, .1083480641245
> 842

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                            31,613  
    -----------------------------------------

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                            31,613  
    -----------------------------------------
(16,675 observations deleted)
(101 missing values generated)
(101 missing values generated)
(101 missing values generated)
(101 missing values generated)
(data already sorted by zipcode)
  (0 bytes saved)
===============================================================================
File: ../output/predicted_changes_in_rents.dta
Key: zipcode
===============================================================================
  14938:7(92670):3830736750:45993277

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
     zipcode |          0
    d_mw_res |     14,938    .0986265    .1001178  -5.20e-08   .2162231
d_mw_wkp_~17 |     14,938     .097427    .0946211          0   .2162231
        cbsa |          0
change_ln_~s |     14,938    .0032734    .0031231  -.0008849   .0075073
-------------+---------------------------------------------------------
change_ln_~l |     14,938     .010556     .010252          0   .0234274
         rho |     14,837    .1357838     .035256  -.0595299   .1763784




(note: file ../output/predicted_changes_in_rents.dta not found)
file ../output/predicted_changes_in_rents.dta saved
(note: file ../output/predicted_changes_in_rents.csv not found)
file ../output/predicted_changes_in_rents.csv saved
(bin=25, start=-5.199e-08, width=.00864893)
(note: file ../output/d_mw_res.png not found)
(file ../output/d_mw_res.png written in PNG format)
(note: file ../output/d_mw_res.eps not found)
(file ../output/d_mw_res.eps written in EPS format)
(bin=25, start=0, width=.00864892)
(note: file ../output/d_mw_wkp_tot_17.png not found)
(file ../output/d_mw_wkp_tot_17.png written in PNG format)
(note: file ../output/d_mw_wkp_tot_17.eps not found)
(file ../output/d_mw_wkp_tot_17.eps written in EPS format)
(bin=30, start=-.00088456, width=.00028067)
(note: file ../output/perc_incr_rent.png not found)
(file ../output/perc_incr_rent.png written in PNG format)
(note: file ../output/perc_incr_rent.eps not found)
(file ../output/perc_incr_rent.eps written in EPS format)
(bin=30, start=0, width=.00079013)
(note: file ../output/perc_incr_wagebill.png not found)
(file ../output/perc_incr_wagebill.png written in PNG format)
(note: file ../output/perc_incr_wagebill.eps not found)
(file ../output/perc_incr_wagebill.eps written in EPS format)
(bin=41, start=-.17008531, width=.0164396)
(note: file ../output/ratio_increases.png not found)
(file ../output/ratio_increases.png written in PNG format)
(note: file ../output/ratio_increases.eps not found)
(file ../output/ratio_increases.eps written in EPS format)
(bin=30, start=-.05952986, width=.00786361)
(note: file ../output/rho.png not found)
(file ../output/rho.png written in PNG format)
(note: file ../output/rho.eps not found)
(file ../output/rho.eps written in EPS format)
(note: file ../output/data_counterfactuals.dta not found)
file ../output/data_counterfactuals.dta saved
(note: file ../output/data_counterfactuals.csv not found)
file ../output/data_counterfactuals.csv saved
(note: file ../output/deciles_diff.png not found)
(file ../output/deciles_diff.png written in PNG format)
(note: file ../output/deciles_diff.eps not found)
(file ../output/deciles_diff.eps written in EPS format)

. 
end of do-file


Execute:  R CMD BATCH --no-save "./tables.R" tables.Rout

R version 4.1.1 (2021-08-10) -- "Kick Things"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> remove(list = ls())
> library(data.table)
> 
> main <- function() {
+   instub  <- "../output"
+   outstub <- "../output"
+   
+   dt <- fread(file.path(instub, "data_counterfactuals.csv"))
+   
+   alpha = 0.35
+   
+   txt <- c("<tab:counterfactuals>",
+            paste(alpha - 0.1, alpha + 0.1, sep = "\t"))
+   
+   for (sample in c("fully_affected", "no_direct_treatment")) {
+     
+     dt_sample <- dt[get(sample) == 1]
+     
+     txt <- c(txt, 
+              paste(dim(dt_sample)[1],
+                    mean(dt_sample[["d_mw_res"]],         na.rm = T),
+                    mean(dt_sample[["d_mw_wkp_tot_17"]],  na.rm = T),
+                    mean(dt_sample[["rho_lb"]],          na.rm = T),
+                    mean(dt_sample[["rho_ub"]],          na.rm = T),
+                    sep = "\t"))
+   }
+   
+   fileConn <- file(file.path(outstub, "counterfactuals.txt"))
+   writeLines(txt, fileConn)
+   close(fileConn)
+ }
> 
> 
> main()
> 
> proc.time()
   user  system elapsed 
   0.32    0.23    0.53 


Execute:  R CMD BATCH --no-save "./map_cfs.R" map_cfs.Rout

R version 4.1.1 (2021-08-10) -- "Kick Things"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> remove(list = ls())
> 
> library(data.table)
> library(sf)
Linking to GEOS 3.9.1, GDAL 3.2.1, PROJ 7.2.1
> library(dplyr)

Attaching package: 'dplyr'

The following objects are masked from 'package:data.table':

    between, first, last

The following objects are masked from 'package:stats':

    filter, lag

The following objects are masked from 'package:base':

    intersect, setdiff, setequal, union

> library(spData)
To access larger datasets in this package, install the spDataLarge
package with: `install.packages('spDataLarge',
repos='https://nowosad.github.io/drat/', type='source')`
> library(tmap)
> library(tmaptools)
> library(ggplot2)
> 
> main <- function(){
+   in_map  <- "../../../drive/raw_data/shapefiles/USPS_zipcodes"
+   in_data <- "../output/"
+ 
+   USPS_zipcodes <- read_sf(dsn = in_map, 
+                            layer = "USPS_zipcodes_July2020") %>%
+     select(ZIP_CODE, PO_NAME, STATE, POPULATION, SQMI, POP_SQMI) %>%
+     rename(zipcode = ZIP_CODE, zipcode_name = PO_NAME,
+            state_name = STATE)
+   
+   df_all <- fread(file.path(in_data, "predicted_changes_in_rents.csv"),
+                   colClasses = c(zipcode = "character"))
+   df_all <- left_join(USPS_zipcodes, df_all, by = "zipcode")
+   df_chicago <- df_all %>%
+     filter(cbsa == 16980)
+ 
+   max_break_mw <- round(max(df_chicago$d_mw_res, na.rm = TRUE), digits = 2)
+   
+   build_map(data = df_chicago, 
+             var = "d_mw_res", 
+             var_legend ="Counterfactual change\nin residence MW", 
+             break_values = c(0, max_break_mw/2, max_break_mw), 
+             map_name = "chicago_d_mw_res")
+   
+   build_map(data = df_chicago, 
+             var = "d_mw_wkp_tot_17", 
+             var_legend ="Counterfactual change\nin workplace MW", 
+             break_values = c(0, max_break_mw/2, max_break_mw), 
+             map_name = "chicago_d_mw_wkp_tot_17")
+   
+   min_break_rents <- round(min(df_chicago$change_ln_rents, na.rm = TRUE), digits = 2)
+   max_break_rents <- round(max(df_chicago$change_ln_rents, na.rm = TRUE), digits = 2)
+   
+   build_map(data = df_chicago, 
+             var = "change_ln_rents", 
+             var_legend ="Counterfactual change \nin log rents", 
+             break_values = c(min_break_rents, max_break_rents/2, max_break_rents), 
+             map_name = "chicago_d_ln_rents")
+ 
+   min_break_wagebill <- round(min(df_chicago$change_ln_wagebill, na.rm = TRUE), digits = 2)
+   max_break_wagebill <- round(max(df_chicago$change_ln_wagebill, na.rm = TRUE), digits = 2)
+   
+   build_map(data = df_chicago, 
+             var = "change_ln_wagebill", 
+             var_legend ="Counterfactual change\nin log total wages", 
+             break_values = c(min_break_wagebill, max_break_wagebill/2, max_break_wagebill), 
+             map_name = "chicago_d_ln_wagebill")
+ 
+   min_break_rho <- round(min(df_chicago$rho, na.rm = TRUE), digits = 2)
+   max_break_rho <- round(max(df_chicago$rho, na.rm = TRUE), digits = 2)
+   
+   build_map(data = df_chicago, 
+             var = "rho", 
+             var_legend ="Landlord\nshare", 
+             break_values = c(min_break_rho, max_break_rho/2, max_break_rho), 
+             map_name = "chicago_rho")
+ }
> 
> build_map <- function(data, var, var_legend, break_values,
+                       map_name, .dpi = 250) {
+   
+   map <- tm_shape(data) + 
+     tm_fill(col = var,
+             title = var_legend,
+             style = "cont",
+             palette = c("#A6E1F4", "#077187"),
+             breaks = break_values,
+             textNA = "NA") +
+     tm_borders(col = "white", lwd = .01, alpha = 0.7) +
+     tm_layout(legend.position = c("left", "bottom"),
+             frame = FALSE)
+   
+   tmap_save(map, 
+             paste0("../output/", map_name, ".png"),
+             dpi = .dpi)
+   tmap_save(map, 
+             paste0("../output/", map_name, ".eps"))
+ }
> 
> main()
Map saved to C:\Users\shermo\Documents\GitHub\min_wage_rent\analysis\counterfactuals\output\chicago_d_mw_res.png
Resolution: 1544.33 by 1983.061 pixels
Size: 6.177318 by 7.932245 inches (250 dpi)
Map saved to C:\Users\shermo\Documents\GitHub\min_wage_rent\analysis\counterfactuals\output\chicago_d_mw_res.eps
Size: 6.177318 by 7.932245 inches
Map saved to C:\Users\shermo\Documents\GitHub\min_wage_rent\analysis\counterfactuals\output\chicago_d_mw_wkp_tot_17.png
Resolution: 1544.33 by 1983.061 pixels
Size: 6.177318 by 7.932245 inches (250 dpi)
Map saved to C:\Users\shermo\Documents\GitHub\min_wage_rent\analysis\counterfactuals\output\chicago_d_mw_wkp_tot_17.eps
Size: 6.177318 by 7.932245 inches
Map saved to C:\Users\shermo\Documents\GitHub\min_wage_rent\analysis\counterfactuals\output\chicago_d_ln_rents.png
Resolution: 1544.33 by 1983.061 pixels
Size: 6.177318 by 7.932245 inches (250 dpi)
Map saved to C:\Users\shermo\Documents\GitHub\min_wage_rent\analysis\counterfactuals\output\chicago_d_ln_rents.eps
Size: 6.177318 by 7.932245 inches
Map saved to C:\Users\shermo\Documents\GitHub\min_wage_rent\analysis\counterfactuals\output\chicago_d_ln_wagebill.png
Resolution: 1544.33 by 1983.061 pixels
Size: 6.177318 by 7.932245 inches (250 dpi)
Map saved to C:\Users\shermo\Documents\GitHub\min_wage_rent\analysis\counterfactuals\output\chicago_d_ln_wagebill.eps
Size: 6.177318 by 7.932245 inches
Map saved to C:\Users\shermo\Documents\GitHub\min_wage_rent\analysis\counterfactuals\output\chicago_rho.png
Resolution: 1544.33 by 1983.061 pixels
Size: 6.177318 by 7.932245 inches (250 dpi)
Map saved to C:\Users\shermo\Documents\GitHub\min_wage_rent\analysis\counterfactuals\output\chicago_rho.eps
Size: 6.177318 by 7.932245 inches
There were 13 warnings (use warnings() to see them)
> 
> proc.time()
   user  system elapsed 
  60.70   42.84  106.18 

 make.py ended: 2022-03-26 08:46:44
