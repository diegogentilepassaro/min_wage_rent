
 make.py started: 2022-06-06 15:46:32 C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\counterfactuals\code 




Execute:  StataMP-64 /e do "./compute.do"

  ___  ____  ____  ____  ____ (R)
 /__    /   ____/   /   ____/
___/   /   /___/   /   /___/   15.1   Copyright 1985-2017 StataCorp LLC
  Statistics/Data Analysis            StataCorp
                                      4905 Lakeway Drive
     MP - Parallel Edition            College Station, Texas 77845 USA
                                      800-STATA-PC        http://www.stata.com
                                      979-696-4600        stata@stata.com
                                      979-696-4601 (fax)

Single-user 32-core Stata perpetual license:
       Serial number:  501506205566
         Licensed to:  KU Leuven FEB (CES)
                       KU Leuven

Notes:
      1.  Stata is running in batch mode.
      2.  Unicode is supported; see help unicode_advice.
      3.  More than 2 billion observations are allowed; see help obs_advice.
      4.  Maximum number of variables is set to 5000; see help set_maxvar.


running c:\ado\personal\profile.do ...

. do ./compute.do 

. clear all

. set more off

. set maxvar 32000


. 
. program main
  1.     local in_cf_mw     "../../../drive/derived_large/min_wage_measures"
  2.     local in_baseline  "../../fd_baseline/output"
  3.     local in_wages     "../../twfe_wages/output"
  4.     local in_exp_share "../../../drive/analysis_large/expenditure_shares"
  5.     local in_zip       "../../../drive/derived_large/zipcode"
  6. 
.     load_parameters, in_baseline(`in_baseline') in_wages(`in_wages')
  7.     local beta    = r(beta)
  8.     local gamma   = r(gamma)
  9.     local epsilon = r(epsilon)
 10. 
.     di "Beta, Gamma, and Epsilon: `beta', `gamma', `epsilon'"
 11. 
.     load_counterfactuals,  instub(`in_cf_mw')
 12.     select_urban_zipcodes, instub(`in_zip')
 13.     merge m:1 zipcode using "`in_exp_share'/s_by_zip.dta", ///
>         nogen keep(1 3)
 14.     
.     compute_vars,         beta(`beta') gamma(`gamma') epsilon(`epsilon')
 15.     flag_unaffected_cbsas
 16.     flag_treatment_status
 17. 
.     foreach cf in fed_10pc fed_9usd fed_15usd {
 18. 
.         qui unique cbsa if counterfactual == "`cf'"
 19.         local n_cbsas           = `r(unique)'
 20.         qui unique cbsa if cbsa_low_inc_increase == 0 & counterfactual == 
> "`cf'"
 21.         local n_cbsas_affected = `r(unique)'
 22. 
.         di "{bf: Counterfactual: `cf'}"
 23.         di "    Unique CBAs: `n_cbsas'"
 24.         di "    Unique CBAs strongly affected: `n_cbsas_affected'"
 25. 
.         di "    Distribution of rho"
 26.         sum rho if counterfactual == "`cf'" & year == 2020, d
 27.         di "    Distribution of rho for strongly affected CBAs"
 28.         sum rho if counterfactual == "`cf'" & year == 2020 & cbsa_low_inc_
> increase == 0, d
 29.     }
 30. 
.     save             "../output/data_counterfactuals.dta", replace
 31.     export delimited "../output/data_counterfactuals.csv", replace
 32. 
.     preserve
 33.         compute_tot_incidence
 34. 
.         qui sum tot_incidence if counterfactual == "fed_9usd"
 35.         local tot_inc = r(mean)
 36. 
.         export delimited "../output/tot_incidence.csv", replace
 37.     restore
 38. 
. end

. 
. program load_parameters, rclass
  1.     syntax, in_baseline(str) in_wages(str)
  2. 
.     use `in_baseline'/estimates_static.dta, clear
  3.     keep if model == "static_both"
  4. 
.     qui sum b if var == "mw_res"
  5.     return local gamma = r(mean)
  6.     qui sum b if var == "mw_wkp_tot_17"
  7.     return local beta = r(mean)
  8. 
.     use `in_wages'/estimates_all.dta if model == "cbsa_time", clear
  9.     qui sum b
 10.     return local epsilon = r(mean)
 11. end

. 
. program load_counterfactuals
  1.     syntax, instub(str)
  2. 
.     clear
  3.     use zipcode year month counterfactual mw_wkp_tot mw_res statutory_mw /
> //
>         using "`instub'/zipcode_wkp_mw_cfs.dta"
  4. 
.     bysort zipcode counterfactual (year month): ///
>         gen d_mw_wkp = mw_wkp_tot[_n] - mw_wkp_tot[_n - 1]
  5.     bysort zipcode counterfactual (year month): ///
>         gen d_mw_res = mw_res[_n] - mw_res[_n - 1]
  6.     
.     gen   diff_mw  = d_mw_wkp - d_mw_res
  7.     xtile diff_qts = diff_mw, nquantiles(10)
  8. end

. 
. program select_urban_zipcodes
  1.     syntax, instub(str)
  2. 
.     merge m:1 zipcode using `instub'/zipcode_cross.dta,  ///
>         assert(2 3) keep(3) nogen keepusing(cbsa urban_cbsa)
  3. 
.     keep if urban_cbsa
  4. end

. 
. program compute_vars
  1.     syntax, beta(str) gamma(str) epsilon(str)
  2. 
.     gen change_ln_rents    = `beta'*d_mw_wkp + `gamma'*d_mw_res
  3.     gen change_ln_wagebill = `epsilon'*d_mw_wkp
  4. 
.     gen perc_incr_rent     = exp(change_ln_rents)    - 1
  5.     gen perc_incr_wagebill = exp(change_ln_wagebill) - 1
  6.     gen ratio_increases    = perc_incr_rent/perc_incr_wagebill
  7. 
.     gen rho              = s*ratio_increases
  8.     gen rho_with_imputed = s_imputed*ratio_increases
  9. end

. 
. program flag_unaffected_cbsas
  1.     syntax, [thresh(real 0.001)]
  2. 
.     preserve
  3.         collapse (mean) perc_incr_wagebill perc_incr_rent,       ///
>             by(cbsa counterfactual)
  4. 
.         gen cbsa_low_inc_increase = perc_incr_wagebill < `thresh'
  5.         tempfile cbsa_averages
  6.         save    `cbsa_averages', replace
  7.     restore
  8. 
.     merge m:1 cbsa counterfactual using `cbsa_averages', ///
>         assert(3) nogen
  9. end

. 
. program flag_treatment_status
  1. 
.     preserve
  2.         keep if year == 2020 & !missing(s_imputed) & !missing(perc_incr_re
> nt)  ///
>                              & !missing(perc_incr_wagebill)
  3. 
.         gen no_direct_treatment = (d_mw_res == 0)            if cbsa_low_inc_
> increase == 0
  4.         gen fully_affected      = (no_direct_treatment == 0) if !missing(n
> o_direct_treatment)
  5. 
.         keep zipcode counterfactual no_direct_treatment fully_affected
  6.         
.         tempfile treatment_status
  7.         save    `treatment_status', replace
  8.     restore
  9. 
.     merge m:1 zipcode counterfactual using `treatment_status', assert(1 3) no
> gen
 10. end

. 
. program compute_tot_incidence
  1.     keep if !missing(s_imputed) & !missing(perc_incr_rent) &    ///
>             !missing(perc_incr_wagebill) & cbsa_low_inc_increase == 0
  2.     keep if (year == 2020 & month == 1)
  3.     keep zipcode counterfactual change_ln_rents perc_incr_rent ///
>         change_ln_wagebill perc_incr_wagebill                  ///
>         safmr2br_imputed wage_per_whhld_monthly_imputed
  4. 
.     gen num_terms_ti   = safmr2br_imputed               * perc_incr_rent
  5.     gen denom_terms_ti = wage_per_whhld_monthly_imputed * perc_incr_wagebi
> ll
  6. 
.     collapse (sum)   num_tot_incidence   = num_terms_ti    ///
>                      denom_tot_incidence = denom_terms_ti  ///
>              (count) N                   = num_terms_ti,   ///
>         by(counterfactual)
  7. 
.     gen tot_incidence = num_tot_incidence/denom_tot_incidence
  8. end

. 
. main
(6 observations deleted)
Beta, Gamma, and Epsilon: .0685098394751549, -.0218667536973953, .1083556264638
> 901
(94,839 missing values generated)
(95,157 missing values generated)
(95,157 missing values generated)

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                           189,678  
    -----------------------------------------
(122,154 observations deleted)

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                            67,524  
    -----------------------------------------
(33,933 missing values generated)
(33,762 missing values generated)
(33,933 missing values generated)
(33,762 missing values generated)
(34,512 missing values generated)
(36,867 missing values generated)
(34,937 missing values generated)
(note: file C:\Users\diegog\AppData\Local\Temp\2\ST_25c84_000003.tmp not found)
file C:\Users\diegog\AppData\Local\Temp\2\ST_25c84_000003.tmp saved

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                            67,524  
    -----------------------------------------
(34,473 observations deleted)
(10,918 missing values generated)
(10,918 missing values generated)
(note: file C:\Users\diegog\AppData\Local\Temp\2\ST_25c84_000003.tmp not found)
file C:\Users\diegog\AppData\Local\Temp\2\ST_25c84_000003.tmp saved

    Result                           # of obs.
    -----------------------------------------
    not matched                         1,422
        from master                     1,422  
        from using                          0  

    matched                            66,102  
    -----------------------------------------
 Counterfactual: fed_10pc
    Unique CBAs: 176
    Unique CBAs strongly affected: 77
    Distribution of rho

                             rho
-------------------------------------------------------------
      Percentiles      Smallest
 1%     .0416077        .014496
 5%     .0610251       .0168891
10%      .072211       .0191176       Obs              10,183
25%     .0938905       .0197583       Sum of Wgt.      10,183

50%     .1288072                      Mean            .140032
                        Largest       Std. Dev.       .062215
75%     .1729539       .4542883
90%     .2238037       .5275847       Variance       .0038707
95%     .2596698        .607181       Skewness       1.079865
99%     .3278658       .6695997       Kurtosis       4.924141
    Distribution of rho for strongly affected CBAs

                             rho
-------------------------------------------------------------
      Percentiles      Smallest
 1%     .0365525       .0168891
 5%     .0534363       .0191176
10%     .0627336       .0197583       Obs               4,508
25%     .0772789       .0203038       Sum of Wgt.       4,508

50%     .0975098                      Mean           .1079574
                        Largest       Std. Dev.      .0458078
75%     .1292591       .3435856
90%     .1663534        .345189       Variance       .0020984
95%     .1952127       .3671993       Skewness       1.528915
99%     .2687252       .5275847       Kurtosis       7.279452
 Counterfactual: fed_9usd
    Unique CBAs: 176
    Unique CBAs strongly affected: 105
    Distribution of rho

                             rho
-------------------------------------------------------------
      Percentiles      Smallest
 1%     .0404314       .0099258
 5%     .0591101       .0168296
10%     .0703022       .0190516       Obs              10,203
25%     .0887719        .019713       Sum of Wgt.      10,203

50%     .1221991                      Mean           .1344175
                        Largest       Std. Dev.      .0613415
75%     .1664103        .454279
90%     .2172357        .527189       Variance       .0037628
95%     .2523445       .6071773       Skewness       1.194544
99%     .3268207       .6695672       Kurtosis       5.326447
    Distribution of rho for strongly affected CBAs

                             rho
-------------------------------------------------------------
      Percentiles      Smallest
 1%     .0368017       .0099258
 5%      .053592       .0168296
10%     .0637439       .0190516       Obs               5,895
25%     .0780909        .019713       Sum of Wgt.       5,895

50%     .0987458                      Mean           .1082439
                        Largest       Std. Dev.      .0450659
75%      .129585       .3451256
90%     .1656428       .3671922       Variance       .0020309
95%     .1927753        .527189       Skewness       1.701762
99%     .2569042       .6695672       Kurtosis       10.67245
 Counterfactual: fed_15usd
    Unique CBAs: 176
    Unique CBAs strongly affected: 176
    Distribution of rho

                             rho
-------------------------------------------------------------
      Percentiles      Smallest
 1%     .0366471        .009667
 5%     .0547811       .0137221
10%     .0637759       .0163533       Obs              10,271
25%     .0781194       .0165002       Sum of Wgt.      10,271

50%     .0978942                      Mean           .1049987
                        Largest       Std. Dev.      .0388532
75%     .1251993       .3145672
90%      .155978        .376716       Variance       .0015096
95%     .1787123       .4134677       Skewness       1.132438
99%     .2250505       .4524385       Kurtosis       5.635684
    Distribution of rho for strongly affected CBAs

                             rho
-------------------------------------------------------------
      Percentiles      Smallest
 1%     .0366471        .009667
 5%     .0547811       .0137221
10%     .0637759       .0163533       Obs              10,271
25%     .0781194       .0165002       Sum of Wgt.      10,271

50%     .0978942                      Mean           .1049987
                        Largest       Std. Dev.      .0388532
75%     .1251993       .3145672
90%      .155978        .376716       Variance       .0015096
95%     .1787123       .4134677       Skewness       1.132438
99%     .2250505       .4524385       Kurtosis       5.635684
(note: file ../output/data_counterfactuals.dta not found)
file ../output/data_counterfactuals.dta saved
(note: file ../output/data_counterfactuals.csv not found)
file ../output/data_counterfactuals.csv saved
(45,391 observations deleted)
(0 observations deleted)
(note: file ../output/tot_incidence.csv not found)
file ../output/tot_incidence.csv saved

. 
end of do-file


Execute:  StataMP-64 /e do "./figures.do"

  ___  ____  ____  ____  ____ (R)
 /__    /   ____/   /   ____/
___/   /   /___/   /   /___/   15.1   Copyright 1985-2017 StataCorp LLC
  Statistics/Data Analysis            StataCorp
                                      4905 Lakeway Drive
     MP - Parallel Edition            College Station, Texas 77845 USA
                                      800-STATA-PC        http://www.stata.com
                                      979-696-4600        stata@stata.com
                                      979-696-4601 (fax)

Single-user 32-core Stata perpetual license:
       Serial number:  501506205566
         Licensed to:  KU Leuven FEB (CES)
                       KU Leuven

Notes:
      1.  Stata is running in batch mode.
      2.  Unicode is supported; see help unicode_advice.
      3.  More than 2 billion observations are allowed; see help obs_advice.
      4.  Maximum number of variables is set to 5000; see help set_maxvar.


running c:\ado\personal\profile.do ...

. do ./figures.do 

. clear all

. set more off

. set maxvar 32000


. 
. program main
  1.     local instub      "../output"
  2.     local in_wages    "../../twfe_wages/output"
  3.     local in_zip      "../../../drive/derived_large/zipcode"
  4. 
.     use "`instub'/data_counterfactuals.dta", clear
  5. 
.     keep if counterfactual == "fed_9usd" & year == 2020
  6.     keep if !cbsa_low_inc_increase
  7. 
.     foreach var in d_mw_res d_mw_wkp rho rho_with_imputed ///
>                    change_ln_rents change_ln_wagebill s_imputed {
  8.         
.         get_xlabel, var(`var')
  9.         local x_lab = r(x_lab)
 10.         
.         local scale_opts ""
 11.         local bin_opt    ""
 12.         if inlist("`var'", "d_mw_res", "d_mw_wkp") {
 13.             local scale_opts "yscale(r(0 53.5)) xscale(r(0 0.23))"
 14.             local bin_opt    "bin(25)"
 15.         }
 16.         if inlist("`var'", "rho", "rho_with_imputed", "change_ln_rents", /
> //
>             "change_ln_wagebill") {
 17.             local bin_opt    "bin(30)"
 18.             if !inlist("`var'", "rho", "rho_with_imputed") {
 19.                 local scale_opts "yscale(r(0 40))"
 20.             }
 21.         }
 22.         if inlist("`var'", "s_imputed") {
 23.             local bin_opt    "bin(30)"
 24.             local scale_opts "yscale(r(0 8))"
 25.         }
 26. 
.         hist `var', percent `bin_opt'                                   ///
>             xtitle("`x_lab'") ytitle("Percentage") `scale_opts'         ///
>             graphregion(color(white)) bgcolor(white)                    ///
>             plotregion(margin(b = 1.5))
 27.         
.         graph export "../output/hist_`var'.png", replace width(2221) height(1
> 615)
 28.         graph export "../output/hist_`var'.eps", replace
 29.     }
 30. 
.     collapse (mean) rho rho_with_imputed, by(diff_qts)
 31. 
.     foreach stub in `""' `"_with_imputed"' {
 32. 
.         twoway (line     rho`stub'  diff_qts, lcol(navy))                    
>                ///
>                (scatter  rho`stub'  diff_qts, mcol(navy)),                   
>                ///
>             xtitle("Difference between change in wrk. MW and change in res. M
> W (deciles)")  ///
>             ytitle("Mean share pocketed")                                    
>                ///
>             xlabel(1(1)10) ylabel(0.04(0.04)0.16)                            
>                   ///
>             graphregion(color(white)) bgcolor(white) legend(off)
 33.             
.         graph export "../output/deciles_diff`stub'.png", width(2221) height(1
> 615) replace
 34.         graph export "../output/deciles_diff`stub'.eps", replace
 35.     }
 36. end

. 
. program get_xlabel, rclass
  1.     syntax, var(str)
  2. 
.     if inlist("`var'", "p_d_ln_rents", "p_d_ln_rents_with_fe", ///
>               "p_d_ln_rents_zillow", "p_d_ln_rents_with_fe_zillow") {
  3.         return local x_lab "Change in log rents"
  4.     }
  5. 
.     if "`var'"=="d_mw_res"           return local x_lab "Change in residence 
> MW"
  6.     if "`var'"=="d_mw_wkp"           return local x_lab "Change in workpla
> ce MW"
  7. 
.     if "`var'"=="change_ln_rents"    return local x_lab "Change in log rents 
> per sq. foot"
  8.     if "`var'"=="change_ln_wagebill" return local x_lab "Change in log tot
> al wages"
  9. 
.     if "`var'"=="rho"                return local x_lab "Share pocketed by la
> ndlords"
 10.     if "`var'"=="rho_with_imputed"   return local x_lab "Share pocketed by
>  landlords"
 11. 
.     if "`var'"=="s_imputed"          return local x_lab "Housing expenditure 
> share"
 12. end

. 
. 
. main
(56,270 observations deleted)
(4,829 observations deleted)
(bin=25, start=0, width=.00864892)
(note: file ../output/hist_d_mw_res.png not found)
(file ../output/hist_d_mw_res.png written in PNG format)
(note: file ../output/hist_d_mw_res.eps not found)
(file ../output/hist_d_mw_res.eps written in EPS format)
(bin=25, start=0, width=.00864892)
(note: file ../output/hist_d_mw_wkp.png not found)
(file ../output/hist_d_mw_wkp.png written in PNG format)
(note: file ../output/hist_d_mw_wkp.eps not found)
(file ../output/hist_d_mw_wkp.eps written in EPS format)
(bin=30, start=.00992583, width=.02198805)
(note: file ../output/hist_rho.png not found)
(file ../output/hist_rho.png written in PNG format)
(note: file ../output/hist_rho.eps not found)
(file ../output/hist_rho.eps written in EPS format)
(bin=30, start=-.01113233, width=.01106596)
(note: file ../output/hist_rho_with_imputed.png not found)
(file ../output/hist_rho_with_imputed.png written in PNG format)
(note: file ../output/hist_rho_with_imputed.eps not found)
(file ../output/hist_rho_with_imputed.eps written in EPS format)
(bin=30, start=-.0047281, width=.00049378)
(note: file ../output/hist_change_ln_rents.png not found)
(file ../output/hist_change_ln_rents.png written in PNG format)
(note: file ../output/hist_change_ln_rents.eps not found)
(file ../output/hist_change_ln_rents.eps written in EPS format)
(bin=30, start=0, width=.00078097)
(note: file ../output/hist_change_ln_wagebill.png not found)
(file ../output/hist_change_ln_wagebill.png written in PNG format)
(note: file ../output/hist_change_ln_wagebill.eps not found)
(file ../output/hist_change_ln_wagebill.eps written in EPS format)
(bin=30, start=.09130484, width=.01387183)
(note: file ../output/hist_s_imputed.png not found)
(file ../output/hist_s_imputed.png written in PNG format)
(note: file ../output/hist_s_imputed.eps not found)
(file ../output/hist_s_imputed.eps written in EPS format)
(note: file ../output/deciles_diff.png not found)
(file ../output/deciles_diff.png written in PNG format)
(note: file ../output/deciles_diff.eps not found)
(file ../output/deciles_diff.eps written in EPS format)
(note: file ../output/deciles_diff_with_imputed.png not found)
(file ../output/deciles_diff_with_imputed.png written in PNG format)
(note: file ../output/deciles_diff_with_imputed.eps not found)
(file ../output/deciles_diff_with_imputed.eps written in EPS format)

. 
end of do-file


Execute:  StataMP-64 /e do "./autofill_values.do"

  ___  ____  ____  ____  ____ (R)
 /__    /   ____/   /   ____/
___/   /   /___/   /   /___/   15.1   Copyright 1985-2017 StataCorp LLC
  Statistics/Data Analysis            StataCorp
                                      4905 Lakeway Drive
     MP - Parallel Edition            College Station, Texas 77845 USA
                                      800-STATA-PC        http://www.stata.com
                                      979-696-4600        stata@stata.com
                                      979-696-4601 (fax)

Single-user 32-core Stata perpetual license:
       Serial number:  501506205566
         Licensed to:  KU Leuven FEB (CES)
                       KU Leuven

Notes:
      1.  Stata is running in batch mode.
      2.  Unicode is supported; see help unicode_advice.
      3.  More than 2 billion observations are allowed; see help obs_advice.
      4.  Maximum number of variables is set to 5000; see help set_maxvar.


running c:\ado\personal\profile.do ...

. do ./autofill_values.do 

. clear all

. set more off

. set maxvar 32000


. 
. program main
  1.     local in_data        "../output"
  2.     local in_baseline    "../../fd_baseline/output"
  3.     local in_wages     "../../twfe_wages/output"
  4.     local out_autofill   "../output"
  5. 
.     load_parameters, in_baseline(`in_baseline') in_wages(`in_wages')
  6.     local beta    = r(beta)
  7.     local gamma   = r(gamma)
  8.     local epsilon = r(epsilon)
  9. 
.     import delimited `in_data'/tot_incidence.csv, clear
 10.     qui sum tot_incidence if counterfactual == "fed_9usd"
 11.     local tot_inc = r(mean)
 12. 
.     use `in_data'/data_counterfactuals.dta, clear
 13. 
.     make_autofill_values, beta(`beta') gamma(`gamma') epsilon(`epsilon') tot_
> inc(`tot_inc')
 14. 
. end

. 
. program load_parameters, rclass
  1.     syntax, in_baseline(str) in_wages(str)
  2. 
.     use `in_baseline'/estimates_static.dta, clear
  3.     keep if model == "static_both"
  4. 
.     qui sum b if var == "mw_res"
  5.     return local gamma = r(mean)
  6.     qui sum b if var == "mw_wkp_tot_17"
  7.     return local beta = r(mean)
  8. 
.     use `in_wages'/estimates_all.dta if model == "cbsa_time", clear
  9.     qui sum b
 10.     return local epsilon = r(mean)
 11. end

. 
. program make_autofill_values
  1.     syntax, gamma(real) beta(real) epsilon(real) tot_inc(real)
  2. 
.     local tot_inc_cents = `tot_inc'*100
  3. 
.     qui tab cbsa if cbsa_low_inc_increase == 1 & counterfactual == "fed_9usd"
  4.     local cbsa_low_inc = r(r)
  5. 
.     keep if counterfactual == "fed_9usd" & cbsa_low_inc_increase == 0
  6.     gen nonmiss_cond = !missing(s_imputed) & !missing(perc_incr_rent)  ///
>                                            & !missing(perc_incr_wagebill)
  7. 
.     qui sum rho if nonmiss_cond == 1, d
  8.         
.     local rho_median    = r(p50)
  9.     local rho_med_cents = r(p50)*100
 10. 
.     qui sum rho if nonmiss_cond == 1 & year == 2020 & no_direct_treatment == 
> 0, d
 11.     local rho_meddir_cent = 100 * r(p50)
 12. 
.     qui sum rho if nonmiss_cond == 1 & year == 2020 & no_direct_treatment == 
> 1, d
 13.     local rho_medind_cent = 100 * r(p50)
 14.         
.     qui count if nonmiss_cond == 1 & year == 2020
 15.     local zip_total = r(N)
 16. 
.     qui count if nonmiss_cond == 1 & year == 2020 & no_direct_treatment == 1
 17.     local zip_no_treat = r(N)
 18.     local zip_notr_pct = 100*`zip_no_treat'/`zip_total'
 19.         
.     qui count if nonmiss_cond == 1 & year == 2020 & no_direct_treatment == 0
 20.     local zip_treat    = r(N)
 21.     local zip_tr_pct   = 100*`zip_treat'/`zip_total'
 22. 
.     qui count if year == 2019 & no_direct_treatment == 0 & statutory_mw == 7.
> 25
 23.     local zip_bound     = r(N)  
 24.     local zip_bound_pct = 100*`zip_bound'/`zip_total'
 25. 
.     qui sum d_mw_res if nonmiss_cond == 1, d
 26.     local avg_change_mw_res = 100 * r(mean)
 27.     local med_change_mw_res = 100 * r(p50)
 28. 
.     qui sum d_mw_wkp if nonmiss_cond == 1, d
 29.     local avg_change_mw_wkp = 100 * r(mean)
 30.     local med_change_mw_wkp = 100 * r(p50)
 31. 
.     cap file close f
 32.     file open   f using "../output/autofill_counterfactuals.tex", write re
> place
 33.     file write  f "\newcommand{\gammaCf}{\textnormal{"                    
> %5.4f  (`gamma')           "}}" _n
 34.     file write  f "\newcommand{\betaCf}{\textnormal{"                     
> %5.4f  (`beta')            "}}" _n
 35.     file write  f "\newcommand{\epsilonCf}{\textnormal{"                  
> %5.4f  (`epsilon')         "}}" _n
 36.     file write  f "\newcommand{\totIncidenceFedNine}{\textnormal{"        
> %4.3f  (`tot_inc')         "}}" _n
 37.     file write  f "\newcommand{\totIncidenceCentsFedNine}{\textnormal{"   
> %3.1f  (`tot_inc_cents')   "}}" _n
 38.     file write  f "\newcommand{\rhoMedianFedNine}{\textnormal{"           
> %4.3f  (`rho_median')      "}}" _n
 39.     file write  f "\newcommand{\rhoMedianCentsFedNine}{\textnormal{"      
> %1.0f  (`rho_med_cents')   "}}" _n
 40.     file write  f "\newcommand{\rhoMedCentsIndirFedNine}{\textnormal{"    
> %4.1f  (`rho_medind_cent') "}}" _n
 41.     file write  f "\newcommand{\rhoMedCentsDirFedNine}{\textnormal{"      
> %4.1f  (`rho_meddir_cent') "}}" _n
 42.     file write  f "\newcommand{\zipcodesFedNine}{\textnormal{"            
> %5.0fc (`zip_total')       "}}" _n
 43.     file write  f "\newcommand{\zipNoIncFedNine}{\textnormal{"            
> %5.0fc (`zip_no_treat')    "}}" _n
 44.     file write  f "\newcommand{\zipIncFedNine}{\textnormal{"              
> %5.0fc (`zip_treat')       "}}" _n
 45.     file write  f "\newcommand{\zipBoundFedNine}{\textnormal{"            
> %5.0fc (`zip_bound')       "}}" _n
 46.     file write  f "\newcommand{\zipNoIncPctFedNine}{\textnormal{"         
> %4.1f  (`zip_notr_pct')    "}}" _n
 47.     file write  f "\newcommand{\zipIncPctFedNine}{\textnormal{"           
> %4.1f  (`zip_tr_pct')      "}}" _n
 48.     file write  f "\newcommand{\zipBoundPctFedNine}{\textnormal{"         
> %4.1f  (`zip_bound_pct')   "}}" _n
 49.     file write  f "\newcommand{\AvgChangeMWResFedNine}{\textnormal{"      
> %4.1f  (`avg_change_mw_res') "}}" _n
 50.     file write  f "\newcommand{\MedChangeMWResFedNine}{\textnormal{"      
> %4.1f  (`med_change_mw_res') "}}" _n
 51.     file write  f "\newcommand{\AvgChangeMWWkpFedNine}{\textnormal{"      
> %4.1f  (`avg_change_mw_wkp') "}}" _n
 52.     file write  f "\newcommand{\MedChangeMWWkpFedNine}{\textnormal{"      
> %4.1f  (`med_change_mw_wkp') "}}" _n
 53.     file write  f "\newcommand{\cbsaLowIncFedNine}{\textnormal{"          
> %2.0f  (`cbsa_low_inc')     "}}" _n
 54.     file close  f
 55. end

. 
. main
(6 observations deleted)
(5 vars, 3 obs)
(54,674 observations deleted)
(note: file ../output/autofill_counterfactuals.tex not found)

. 
. 
.         
. 
end of do-file


Execute:  R CMD BATCH --no-save "./tables.R" tables.Rout

R version 4.1.1 (2021-08-10) -- "Kick Things"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> remove(list = ls())
> library(data.table)
> 
> main <- function() {
+   instub  <- "../output"
+   outstub <- "../output"
+   
+   dt <- fread(file.path(instub, "data_counterfactuals.csv"))
+   
+   dt_cf <- dt[counterfactual == "fed_9usd" 
+              & year == 2020 
+              & cbsa_low_inc_increase == 0]
+ 
+   txt <- c("<tab:counterfactuals_fed_9usd>")
+ 
+   for (sample in c("fully_affected", "no_direct_treatment")) {
+     
+     dt_sample <- dt_cf[get(sample) == 1]
+     
+     txt <- c(txt, 
+             paste(dim(dt_sample)[1],
+                   median(dt_sample[["d_mw_res"]],         na.rm = T),
+                   median(dt_sample[["d_mw_wkp"]],         na.rm = T),
+                   median(dt_sample[["s_imputed"]],        na.rm = T),
+                   median(dt_sample[["rho_with_imputed"]], na.rm = T),
+                   sep = "\t"))
+   }
+ 
+   dt_tot_incidence <- fread(file.path(instub, "tot_incidence.csv"))
+   dt_tot_incidence <- dt_tot_incidence[counterfactual == "fed_9usd"]
+   txt <- c(txt, 
+         paste(dt_tot_incidence$N,
+               dt_tot_incidence$tot_incidence,
+               sep = "\t"))
+   
+   fileConn <- file(file.path(outstub, "counterfactuals_fed_9usd.txt"))
+   writeLines(txt, fileConn)
+   close(fileConn)
+ 
+   txt <- c("<tab:counterfactuals_other>")
+ 
+   for (cf in c("fed_10pc", "fed_15usd")) {
+     dt_cf <- dt[counterfactual == cf
+                & year == 2020 
+                & cbsa_low_inc_increase == 0]
+ 
+     for (sample in c("fully_affected", "no_direct_treatment")) {
+       
+       dt_sample <- dt_cf[get(sample) == 1]      
+       txt <- c(txt, 
+               paste(dim(dt_sample)[1],
+                     median(dt_sample[["d_mw_res"]],         na.rm = T),
+                     median(dt_sample[["d_mw_wkp"]],         na.rm = T),
+                     median(dt_sample[["s_imputed"]],        na.rm = T),
+                     median(dt_sample[["rho_with_imputed"]], na.rm = T),
+                     sep = "\t"))
+     }
+     
+     dt_tot_incidence <- fread(file.path(instub, "tot_incidence.csv"))
+     dt_tot_incidence <- dt_tot_incidence[counterfactual == cf]
+     txt <- c(txt, 
+              paste(dt_tot_incidence$N,
+                    dt_tot_incidence$tot_incidence,
+                    sep = "\t"))
+   }
+   
+   fileConn <- file(file.path(outstub, "counterfactuals_other.txt"))
+   writeLines(txt, fileConn)
+   close(fileConn)
+ }
> 
> 
> main()
> 
> proc.time()
   user  system elapsed 
   0.51    0.18    0.76 


Execute:  R CMD BATCH --no-save "./map_cfs.R" map_cfs.Rout

R version 4.1.1 (2021-08-10) -- "Kick Things"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> remove(list = ls())
> 
> library(data.table)
> library(sf)
Linking to GEOS 3.9.1, GDAL 3.2.1, PROJ 7.2.1
> library(dplyr)

Attaching package: 'dplyr'

The following objects are masked from 'package:data.table':

    between, first, last

The following objects are masked from 'package:stats':

    filter, lag

The following objects are masked from 'package:base':

    intersect, setdiff, setequal, union

> library(spData)
To access larger datasets in this package, install the spDataLarge
package with: `install.packages('spDataLarge',
repos='https://nowosad.github.io/drat/', type='source')`
> library(tmap)
> library(tmaptools)
> library(ggplot2)
> 
> main <- function(){
+   in_map  <- "../../../drive/raw_data/shapefiles/USPS_zipcodes"
+   in_data <- "../output/"
+ 
+   USPS_zipcodes <- read_sf(dsn = in_map, 
+                            layer = "USPS_zipcodes_July2020") %>%
+     select(ZIP_CODE, PO_NAME, STATE, POPULATION, SQMI, POP_SQMI) %>%
+     rename(zipcode = ZIP_CODE, zipcode_name = PO_NAME,
+            state_name = STATE)
+   
+   df_all <- fread(file.path(in_data, "data_counterfactuals.csv"),
+                   colClasses = c(zipcode = "character")) %>%
+     filter(counterfactual == "fed_9usd",
+            year           == 2020)
+ 
+   df_all <- left_join(USPS_zipcodes, df_all, by = "zipcode")
+ 
+   df_chicago <- df_all %>% filter(cbsa == 16980)
+ 
+   max_break_mw <- round(max(df_chicago$d_mw_res, na.rm = TRUE), digits = 2)
+   
+   build_map(data = df_chicago, 
+             var = "d_mw_res", 
+             var_legend ="Change in\nresidence MW", 
+             break_values = c(0, max_break_mw/2, max_break_mw), 
+             map_name = "chicago_d_mw_res")
+   
+   build_map(data = df_chicago, 
+             var = "d_mw_wkp", 
+             var_legend ="Change in\nworkplace MW", 
+             break_values = c(0, max_break_mw/2, max_break_mw), 
+             map_name = "chicago_d_mw_wkp")
+   
+   min_break_rents <- round(min(df_chicago$change_ln_rents, na.rm = TRUE), digits = 2)
+   max_break_rents <- round(max(df_chicago$change_ln_rents, na.rm = TRUE), digits = 2)
+   
+   build_map(data = df_chicago, 
+             var = "change_ln_rents", 
+             var_legend ="Change in log rents\nper sq. foot", 
+             break_values = c(min_break_rents, (min_break_rents + max_break_rents)/2, max_break_rents), 
+             map_name = "chicago_d_ln_rents")
+ 
+   min_break_wagebill <- round(min(df_chicago$change_ln_wagebill, na.rm = TRUE), digits = 2)
+   max_break_wagebill <- round(max(df_chicago$change_ln_wagebill, na.rm = TRUE), digits = 2)
+   
+   build_map(data = df_chicago, 
+             var = "change_ln_wagebill", 
+             var_legend ="Change in\nlog total wages", 
+             break_values = c(min_break_wagebill, (min_break_wagebill + max_break_wagebill)/2, max_break_wagebill), 
+             map_name = "chicago_d_ln_wagebill")
+ 
+   df <- df_chicago %>% 
+     filter(is.na(s_imputed) == FALSE)
+   min_break_s_imputed <- round(min(df$s_imputed, na.rm = TRUE), digits = 3)
+   max_break_s_imputed <- round(max(df$s_imputed, na.rm = TRUE), digits = 3)
+   
+   build_map(data = df, 
+             var = "s_imputed", 
+             var_legend ="Share of expenditure in housing", 
+             break_values = c(min_break_s_imputed, (min_break_s_imputed + max_break_s_imputed)/2, max_break_s_imputed), 
+             map_name = "chicago_s_imputed")
+ 
+   min_break_rho_with_imputed <- round(min(df_chicago$rho_with_imputed, na.rm = TRUE), digits = 3)
+   max_break_rho_with_imputed <- round(max(df_chicago$rho_with_imputed, na.rm = TRUE), digits = 3)
+   
+   build_map(data = df_chicago, 
+             var = "rho_with_imputed", 
+             var_legend ="Share pocketed\nby landlords", 
+             break_values = c(min_break_rho_with_imputed, (min_break_rho_with_imputed + max_break_rho_with_imputed)/2, max_break_rho_with_imputed), 
+             map_name = "chicago_rho_with_imputed")
+ }
> 
> build_map <- function(data, var, var_legend, break_values,
+                       map_name, .dpi = 250) {
+   
+   map <- tm_shape(data) + 
+     tm_fill(col = var,
+             title = var_legend,
+             style = "cont",
+             palette = c("#A6E1F4", "#077187"),
+             breaks = break_values,
+             textNA = "NA") +
+     tm_borders(col = "white", lwd = .01, alpha = 0.7) +
+     tm_layout(legend.position = c("left", "bottom"),
+             frame = FALSE)
+   
+   tmap_save(map, 
+             paste0("../output/", map_name, ".png"),
+             dpi = .dpi)
+   tmap_save(map, 
+             paste0("../output/", map_name, ".eps"))
+ }
> 
> main()
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\counterfactuals\output\chicago_d_mw_res.png
Resolution: 1529.333 by 2002.507 pixels
Size: 6.117331 by 8.010029 inches (250 dpi)
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\counterfactuals\output\chicago_d_mw_res.eps
Size: 6.117331 by 8.010029 inches
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\counterfactuals\output\chicago_d_mw_wkp.png
Resolution: 1529.333 by 2002.507 pixels
Size: 6.117331 by 8.010029 inches (250 dpi)
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\counterfactuals\output\chicago_d_mw_wkp.eps
Size: 6.117331 by 8.010029 inches
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\counterfactuals\output\chicago_d_ln_rents.png
Resolution: 1529.333 by 2002.507 pixels
Size: 6.117331 by 8.010029 inches (250 dpi)
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\counterfactuals\output\chicago_d_ln_rents.eps
Size: 6.117331 by 8.010029 inches
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\counterfactuals\output\chicago_d_ln_wagebill.png
Resolution: 1529.333 by 2002.507 pixels
Size: 6.117331 by 8.010029 inches (250 dpi)
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\counterfactuals\output\chicago_d_ln_wagebill.eps
Size: 6.117331 by 8.010029 inches
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\counterfactuals\output\chicago_s_imputed.png
Resolution: 1529.333 by 2002.507 pixels
Size: 6.117331 by 8.010029 inches (250 dpi)
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\counterfactuals\output\chicago_s_imputed.eps
Size: 6.117331 by 8.010029 inches
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\counterfactuals\output\chicago_rho_with_imputed.png
Resolution: 1529.333 by 2002.507 pixels
Size: 6.117331 by 8.010029 inches (250 dpi)
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\counterfactuals\output\chicago_rho_with_imputed.eps
Size: 6.117331 by 8.010029 inches
There were 18 warnings (use warnings() to see them)
> 
> proc.time()
   user  system elapsed 
  74.14   58.62  136.90 

 make.py ended: 2022-06-06 15:49:22
