
 make.py started: 2022-05-25 11:44:40 C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\counterfactuals\code 




Execute:  StataMP-64 /e do "./compute.do"

  ___  ____  ____  ____  ____ (R)
 /__    /   ____/   /   ____/
___/   /   /___/   /   /___/   15.1   Copyright 1985-2017 StataCorp LLC
  Statistics/Data Analysis            StataCorp
                                      4905 Lakeway Drive
     MP - Parallel Edition            College Station, Texas 77845 USA
                                      800-STATA-PC        http://www.stata.com
                                      979-696-4600        stata@stata.com
                                      979-696-4601 (fax)

Single-user 32-core Stata perpetual license:
       Serial number:  501506205566
         Licensed to:  KU Leuven FEB (CES)
                       KU Leuven

Notes:
      1.  Stata is running in batch mode.
      2.  Unicode is supported; see help unicode_advice.
      3.  More than 2 billion observations are allowed; see help obs_advice.
      4.  Maximum number of variables is set to 5000; see help set_maxvar.


running c:\ado\personal\profile.do ...

. do ./compute.do 

. clear all

. set more off

. set maxvar 32000


. 
. program main
  1.     local in_cf_mw     "../../../drive/derived_large/min_wage_measures"
  2.     local in_baseline  "../../fd_baseline/output"
  3.     local in_wages     "../../twfe_wages/output"
  4.     local in_exp_share "../../../drive/analysis_large/expenditure_shares"
  5.     local in_zip       "../../../drive/derived_large/zipcode"
  6. 
.     load_parameters, in_baseline(`in_baseline') in_wages(`in_wages')
  7.     local beta    = r(beta)
  8.     local gamma   = r(gamma)
  9.     local epsilon = r(epsilon)
 10. 
.     di "Beta, Gamma, and Epsilon: `beta', `gamma', `epsilon'"
 11. 
.     load_counterfactuals,  instub(`in_cf_mw')
 12.     select_urban_zipcodes, instub(`in_zip')
 13.     merge m:1 zipcode using "`in_exp_share'/s_by_zip.dta", ///
>         nogen keep(1 3)
 14.     
.     compute_vars, beta(`beta') gamma(`gamma') epsilon(`epsilon')
 15. 
.     flag_unaffected_cbsas
 16. 
.     foreach cf in fed_10pc fed_9usd fed_15usd {
 17. 
.         qui unique cbsa if counterfactual == "`cf'"
 18.         local n_cbsas           = `r(unique)'
 19.         qui unique cbsa if !cbsa_low_inc_increase & counterfactual == "`cf
> '"
 20.         local n_cbsas_affected = `r(unique)'
 21. 
.         di "{bf: Counterfactual: `cf'}"
 22.         di "    Unique CBAs: `n_cbsas'"
 23.         di "    Unique CBAs strongly affected: `n_cbsas_affected'"
 24. 
.         di "    Distribution of rho"
 25.         sum rho if counterfactual == "`cf'" & year == 2020, detail
 26.         di "    Distribution of rho for strongly affected CBAs"
 27.         sum rho if counterfactual == "`cf'" & !cbsa_low_inc_increase & yea
> r == 2020, detail
 28.     }
 29. 
.     save             "../output/data_counterfactuals.dta", replace
 30.     export delimited "../output/data_counterfactuals.csv", replace
 31. 
.     preserve
 32.         compute_tot_incidence
 33. 
.         qui sum tot_incidence if counterfactual == "fed_9usd"
 34.         local tot_inc = r(mean)
 35. 
.         export delimited "../output/tot_incidence.csv", replace
 36.     restore
 37. 
.     make_autofill_values, beta(`beta') gamma(`gamma') epsilon(`epsilon') tot_
> inc(`tot_inc')
 38. end

. 
. program load_parameters, rclass
  1.     syntax, in_baseline(str) in_wages(str)
  2. 
.     use `in_baseline'/estimates_static.dta, clear
  3.     keep if model == "static_both"
  4. 
.     qui sum b if var == "mw_res"
  5.     return local gamma = r(mean)
  6.     qui sum b if var == "mw_wkp_tot_17"
  7.     return local beta = r(mean)
  8. 
.     use `in_wages'/estimates_all.dta if model == "cbsa_time", clear
  9.     qui sum b
 10.     return local epsilon = r(mean)
 11. end

. 
. program load_counterfactuals
  1.     syntax, instub(str)
  2. 
.     clear
  3.     use zipcode year month counterfactual mw_wkp_tot mw_res statutory_mw /
> //
>         using "`instub'/zipcode_wkp_mw_cfs.dta"
  4. 
.     bysort zipcode counterfactual (year month): ///
>         gen d_mw_wkp = mw_wkp_tot[_n] - mw_wkp_tot[_n - 1]
  5.     bysort zipcode counterfactual (year month): ///
>         gen d_mw_res = mw_res[_n] - mw_res[_n - 1]
  6.     
.     gen   diff_mw  = d_mw_wkp - d_mw_res
  7.     xtile diff_qts = diff_mw, nquantiles(10)
  8. end

. 
. program select_urban_zipcodes
  1.     syntax, instub(str)
  2. 
.     merge m:1 zipcode using `instub'/zipcode_cross.dta,  ///
>         assert(2 3) keep(3) nogen keepusing(cbsa urban_cbsa)
  3. 
.     keep if urban_cbsa
  4. end

. 
. program compute_vars
  1.     syntax, beta(str) gamma(str) epsilon(str)
  2. 
.     gen  no_direct_treatment  = d_mw_res == 0
  3.     gen  fully_affected       = !no_direct_treatment
  4. 
.     gen change_ln_rents    = `beta'*d_mw_wkp + `gamma'*d_mw_res
  5.     gen change_ln_wagebill = `epsilon'*d_mw_wkp
  6. 
.     gen perc_incr_rent     = exp(change_ln_rents)    - 1
  7.     gen perc_incr_wagebill = exp(change_ln_wagebill) - 1
  8.     gen ratio_increases    = perc_incr_rent/perc_incr_wagebill
  9. 
.     gen rho              = s*ratio_increases
 10.     gen rho_with_imputed = s_imputed*ratio_increases
 11. end

. 
. program flag_unaffected_cbsas
  1.     syntax, [thresh(real 0.001)]
  2. 
.     preserve
  3.         collapse (mean) perc_incr_wagebill perc_incr_rent,       ///
>             by(cbsa counterfactual)
  4. 
.         gen cbsa_low_inc_increase = perc_incr_wagebill < `thresh'
  5. 
.         save "../output/cbsa_averages.dta", replace
  6.     restore
  7. 
.     merge m:1 cbsa counterfactual using "../output/cbsa_averages.dta", ///
>         assert(3) nogen
  8. end

. 
. program compute_tot_incidence
  1.     
.     keep if (year == 2020 & month == 1) & !cbsa_low_inc_increase
  2.     keep zipcode counterfactual change_ln_rents perc_incr_rent ///
>         change_ln_wagebill perc_incr_wagebill                  ///
>         safmr2br_imputed wage_per_whhld_monthly_imputed
  3.     gen num_terms = safmr2br_imputed*(perc_incr_rent)
  4.     gen denom_terms = wage_per_whhld_monthly_imputed*(perc_incr_wagebill)
  5. 
.     collapse (sum) num_tot_incidence   = num_terms         ///
>                    denom_tot_incidence = denom_terms       ///
>              (count) N = num_terms                         ///
>         if (!missing(num_terms) & !missing(denom_terms)),  ///
>         by(counterfactual)
  6. 
.     gen tot_incidence = num_tot_incidence/denom_tot_incidence
  7. end

. 
. program make_autofill_values
  1.     syntax, gamma(real) beta(real) epsilon(real) tot_inc(real)
  2. 
.     local tot_inc_cents = `tot_inc'*100
  3. 
.     gen main_cf = counterfactual == "fed_9usd"
  4. 
.     qui sum rho if main_cf & !cbsa_low_inc_increase & year == 2020, detail
  5.         
.     local rho_mean      = r(mean)
  6.     local rho_median    = r(p50)
  7.     local rho_med_cents = r(p50)*100
  8. 
.     qui sum rho if main_cf & year == 2020 & cbsa_low_inc_increase == 0 & ///
>        no_direct_treatment == 0
  9.     local rho_meandir_cent = 100 * r(mean)
 10. 
.     qui sum rho if main_cf & year == 2020 & cbsa_low_inc_increase == 0 & ///
>        no_direct_treatment == 1
 11.     local rho_meanind_cent = 100 * r(mean)
 12.         
.     qui count if main_cf & year == 2020 & cbsa_low_inc_increase == 0
 13. 
.     local zip_total = r(N)
 14. 
.     qui count if main_cf & year == 2020 & cbsa_low_inc_increase == 0 & /// 
>        no_direct_treatment == 1
 15. 
.     local zip_no_treat = r(N)
 16.     local zip_notr_pct = 100*`zip_no_treat' / `zip_total'
 17.         
.     qui count if main_cf & year == 2019 & cbsa_low_inc_increase == 0 & /// 
>        no_direct_treatment == 0 & statutory_mw == 7.25
 18.            
.     local zip_bound = r(N)      
 19.     local zip_bound_pct = 100 * `zip_bound' / `zip_total'
 20.         
.     qui sum d_mw_res if main_cf & year == 2020 & cbsa_low_inc_increase == 0
 21. 
.     local avg_change = 100 * r(mean)
 22.         
. 
.     cap file close f
 23.     file open   f using "../output/autofill_counterfactuals.tex", write re
> place
 24.     file write  f "\newcommand{\gammaCf}{\textnormal{"                    
> %5.4f  (`gamma')          "}}" _n
 25.     file write  f "\newcommand{\betaCf}{\textnormal{"                     
> %5.4f  (`beta')           "}}" _n
 26.     file write  f "\newcommand{\epsilonCf}{\textnormal{"                  
> %5.4f  (`epsilon')        "}}" _n
 27.     file write  f "\newcommand{\totIncidenceFedNine}{\textnormal{"        
> %4.3f  (`tot_inc')        "}}" _n
 28.     file write  f "\newcommand{\totIncidenceCentsFedNine}{\textnormal{"   
> %4.1f  (`tot_inc_cents')  "}}" _n
 29.     file write  f "\newcommand{\rhoMeanFedNine}{\textnormal{"             
> %4.3f  (`rho_mean')       "}}" _n
 30.     file write  f "\newcommand{\rhoMedianFedNine}{\textnormal{"           
> %4.3f  (`rho_median')     "}}" _n
 31.     file write  f "\newcommand{\rhoMedianCentsFedNine}{\textnormal{"      
> %4.0f  (`rho_med_cents')  "}}" _n
 32.     file write  f "\newcommand{\rhoMeanCentsIndirFedNine}{\textnormal{"   
> %4.1f  (`rho_meanind_cent') "}}" _n
 33.     file write  f "\newcommand{\rhoMeanCentsDirFedNine}{\textnormal{"     
> %4.1f  (`rho_meandir_cent') "}}" _n
 34.     file write  f "\newcommand{\zipcodesFedNine}{\textnormal{"            
> %5.0fc (`zip_total')      "}}" _n
 35.     file write  f "\newcommand{\zipNoIncFedNine}{\textnormal{"            
> %5.0fc (`zip_no_treat')   "}}" _n
 36.     file write  f "\newcommand{\zipBoundFedNine}{\textnormal{"            
> %5.0fc (`zip_bound')      "}}" _n
 37.     file write  f "\newcommand{\zipNoIncPctFedNine}{\textnormal{"         
> %4.1f  (`zip_notr_pct')   "}}" _n
 38.     file write  f "\newcommand{\zipBoundPctFedNine}{\textnormal{"         
> %4.1f  (`zip_bound_pct')  "}}" _n
 39.     file write  f "\newcommand{\AvgChangeFedNine}{\textnormal{"           
> %4.1f  (`avg_change')     "}}" _n
 40.     file close  f
 41. end

. 
. main
(6 observations deleted)
Beta, Gamma, and Epsilon: .0680193975567818, -.0220795720815659, .1083480641245
> 842
(94,839 missing values generated)
(95,157 missing values generated)
(95,157 missing values generated)

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                           189,678  
    -----------------------------------------
(122,154 observations deleted)

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                            67,524  
    -----------------------------------------
(33,933 missing values generated)
(33,762 missing values generated)
(33,933 missing values generated)
(33,762 missing values generated)
(34,415 missing values generated)
(36,827 missing values generated)
(34,415 missing values generated)
(note: file ../output/cbsa_averages.dta not found)
file ../output/cbsa_averages.dta saved

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                            67,524  
    -----------------------------------------
 Counterfactual: fed_10pc
    Unique CBAs: 176
    Unique CBAs strongly affected: 79
    Distribution of rho

                             rho
-------------------------------------------------------------
      Percentiles      Smallest
 1%     .0394745      -.0217929
 5%      .059695      -.0120042
10%     .0708856       -.010609       Obs              10,187
25%     .0924262      -.0083235       Sum of Wgt.      10,187

50%     .1272978                      Mean           .1383834
                        Largest       Std. Dev.      .0620821
75%     .1711216       .4510676
90%     .2220987       .5238408       Variance       .0038542
95%     .2578289       .6028764       Skewness       1.070315
99%     .3255414       .6648523       Kurtosis        4.90554
    Distribution of rho for strongly affected CBAs

                             rho
-------------------------------------------------------------
      Percentiles      Smallest
 1%     .0337516      -.0217929
 5%     .0519949      -.0120042
10%     .0611828       -.010609       Obs               4,553
25%     .0757995      -.0083235       Sum of Wgt.       4,553

50%     .0960722                      Mean           .1061819
                        Largest       Std. Dev.      .0455498
75%     .1274696       .3411489
90%     .1644358       .3427413       Variance       .0020748
95%     .1920685        .364596       Skewness       1.503586
99%     .2668201       .5238408       Kurtosis       7.312647
 Counterfactual: fed_9usd
    Unique CBAs: 176
    Unique CBAs strongly affected: 116
    Distribution of rho

                             rho
-------------------------------------------------------------
      Percentiles      Smallest
 1%     .0375323      -.0249754
 5%     .0565392      -.0128283
10%     .0666028      -.0114796       Obs              10,239
25%     .0837172      -.0090123       Sum of Wgt.      10,239

50%     .1151023                      Mean           .1294224
                        Largest       Std. Dev.      .0616935
75%     .1621853       .4436484
90%     .2134014       .4510581       Variance       .0038061
95%     .2492438       .6028712       Skewness       1.232663
99%     .3245026        .664817       Kurtosis       5.289987
    Distribution of rho for strongly affected CBAs

                             rho
-------------------------------------------------------------
      Percentiles      Smallest
 1%     .0332122      -.0249754
 5%     .0518491      -.0128283
10%     .0609281      -.0114796       Obs               6,364
25%     .0750163      -.0090123       Sum of Wgt.       6,364

50%     .0932588                      Mean            .102826
                        Largest       Std. Dev.      .0429743
75%     .1219082       .3410484
90%     .1572741       .3645887       Variance       .0018468
95%     .1822141       .4436484       Skewness       1.766421
99%     .2481292        .664817       Kurtosis       11.16514
 Counterfactual: fed_15usd
    Unique CBAs: 176
    Unique CBAs strongly affected: 176
    Distribution of rho

                             rho
-------------------------------------------------------------
      Percentiles      Smallest
 1%     .0335316       .0015897
 5%     .0523367       .0035889
10%     .0618916       .0057361       Obs              10,271
25%     .0761367       .0065841       Sum of Wgt.      10,271

50%     .0947787                      Mean           .1037372
                        Largest       Std. Dev.      .0438437
75%     .1216044       .4305322
90%      .155033       .4504804       Variance       .0019223
95%     .1841999       .5255791       Skewness       1.940953
99%     .2575848       .6021099       Kurtosis       10.87379
    Distribution of rho for strongly affected CBAs

                             rho
-------------------------------------------------------------
      Percentiles      Smallest
 1%     .0335316       .0015897
 5%     .0523367       .0035889
10%     .0618916       .0057361       Obs              10,271
25%     .0761367       .0065841       Sum of Wgt.      10,271

50%     .0947787                      Mean           .1037372
                        Largest       Std. Dev.      .0438437
75%     .1216044       .4305322
90%      .155033       .4504804       Variance       .0019223
95%     .1841999       .5255791       Skewness       1.940953
99%     .2575848       .6021099       Kurtosis       10.87379
(note: file ../output/data_counterfactuals.dta not found)
file ../output/data_counterfactuals.dta saved
(note: file ../output/data_counterfactuals.csv not found)
file ../output/data_counterfactuals.csv saved
(44,332 observations deleted)
(117 missing values generated)
(note: file ../output/tot_incidence.csv not found)
file ../output/tot_incidence.csv saved
(note: file ../output/autofill_counterfactuals.tex not found)

. 
end of do-file


Execute:  StataMP-64 /e do "./figures.do"

  ___  ____  ____  ____  ____ (R)
 /__    /   ____/   /   ____/
___/   /   /___/   /   /___/   15.1   Copyright 1985-2017 StataCorp LLC
  Statistics/Data Analysis            StataCorp
                                      4905 Lakeway Drive
     MP - Parallel Edition            College Station, Texas 77845 USA
                                      800-STATA-PC        http://www.stata.com
                                      979-696-4600        stata@stata.com
                                      979-696-4601 (fax)

Single-user 32-core Stata perpetual license:
       Serial number:  501506205566
         Licensed to:  KU Leuven FEB (CES)
                       KU Leuven

Notes:
      1.  Stata is running in batch mode.
      2.  Unicode is supported; see help unicode_advice.
      3.  More than 2 billion observations are allowed; see help obs_advice.
      4.  Maximum number of variables is set to 5000; see help set_maxvar.


running c:\ado\personal\profile.do ...

. do ./figures.do 

. clear all

. set more off

. set maxvar 32000


. 
. program main
  1.     local instub      "../output"
  2.     local in_wages    "../../twfe_wages/output"
  3.     local in_zip      "../../../drive/derived_large/zipcode"
  4. 
.     use "`instub'/data_counterfactuals.dta", clear
  5. 
.     keep if counterfactual == "fed_9usd" & year == 2020
  6.     keep if !cbsa_low_inc_increase
  7. 
.     foreach var in d_mw_res d_mw_wkp rho rho_with_imputed ///
>                    change_ln_rents change_ln_wagebill s_imputed {
  8.         
.         get_xlabel, var(`var')
  9.         local x_lab = r(x_lab)
 10.         
.         local scale_opts ""
 11.         local bin_opt    ""
 12.         if inlist("`var'", "d_mw_res", "d_mw_wkp") {
 13.             local scale_opts "yscale(r(0 53.5)) xscale(r(0 0.23))"
 14.             local bin_opt    "bin(25)"
 15.         }
 16.         if inlist("`var'", "rho", "rho_with_imputed", "change_ln_rents", /
> //
>             "change_ln_wagebill") {
 17.             local bin_opt    "bin(30)"
 18.             if !inlist("`var'", "rho", "rho_with_imputed") {
 19.                 local scale_opts "yscale(r(0 40))"
 20.             }
 21.         }
 22.         if inlist("`var'", "s_imputed") {
 23.             local bin_opt    "bin(30)"
 24.             local scale_opts "yscale(r(0 8))"
 25.         }
 26. 
.         hist `var', percent `bin_opt'                                   ///
>             xtitle("`x_lab'") ytitle("Percentage") `scale_opts'         ///
>             graphregion(color(white)) bgcolor(white)                    ///
>             plotregion(margin(b = 1.5))
 27.         
.         graph export "../output/hist_`var'.png", replace width(2221) height(1
> 615)
 28.         graph export "../output/hist_`var'.eps", replace
 29.     }
 30. 
.     collapse (mean) rho rho_with_imputed, by(diff_qts)
 31. 
.     foreach stub in `""' `"_with_imputed"' {
 32. 
.         twoway (line     rho`stub'  diff_qts, lcol(navy))                    
>                ///
>                (scatter  rho`stub'  diff_qts, mcol(navy)),                   
>                ///
>             xtitle("Difference between change in wrk. MW and change in res. M
> W (deciles)")  ///
>             ytitle("Mean share pocketed")                                    
>                ///
>             xlabel(1(1)10) ylabel(0.04(0.04)0.16)                            
>                   ///
>             graphregion(color(white)) bgcolor(white) legend(off)
 33.             
.         graph export "../output/deciles_diff`stub'.png", width(2221) height(1
> 615) replace
 34.         graph export "../output/deciles_diff`stub'.eps", replace
 35.     }
 36. end

. 
. program get_xlabel, rclass
  1.     syntax, var(str)
  2. 
.     if inlist("`var'", "p_d_ln_rents", "p_d_ln_rents_with_fe", ///
>               "p_d_ln_rents_zillow", "p_d_ln_rents_with_fe_zillow") {
  3.         return local x_lab "Change in log rents"
  4.     }
  5. 
.     if "`var'"=="d_mw_res"           return local x_lab "Change in residence 
> MW"
  6.     if "`var'"=="d_mw_wkp"           return local x_lab "Change in workpla
> ce MW"
  7. 
.     if "`var'"=="change_ln_rents"    return local x_lab "Change in log rents 
> per sq. foot"
  8.     if "`var'"=="change_ln_wagebill" return local x_lab "Change in log tot
> al wages"
  9. 
.     if "`var'"=="rho"                return local x_lab "Share pocketed by la
> ndlords"
 10.     if "`var'"=="rho_with_imputed"   return local x_lab "Share pocketed by
>  landlords"
 11. 
.     if "`var'"=="s_imputed"          return local x_lab "Housing expenditure 
> share"
 12. end

. 
. 
. main
(56,270 observations deleted)
(4,302 observations deleted)
(bin=25, start=0, width=.00864892)
(note: file ../output/hist_d_mw_res.png not found)
(file ../output/hist_d_mw_res.png written in PNG format)
(note: file ../output/hist_d_mw_res.eps not found)
(file ../output/hist_d_mw_res.eps written in EPS format)
(bin=25, start=0, width=.00864892)
(note: file ../output/hist_d_mw_wkp.png not found)
(file ../output/hist_d_mw_wkp.png written in PNG format)
(note: file ../output/hist_d_mw_wkp.eps not found)
(file ../output/hist_d_mw_wkp.eps written in EPS format)
(bin=30, start=-.02497543, width=.02299308)
(note: file ../output/hist_rho.png not found)
(file ../output/hist_rho.png written in PNG format)
(note: file ../output/hist_rho.eps not found)
(file ../output/hist_rho.eps written in EPS format)
(bin=30, start=-.14142202, width=.01445071)
(note: file ../output/hist_rho_with_imputed.png not found)
(file ../output/hist_rho_with_imputed.png written in PNG format)
(note: file ../output/hist_rho_with_imputed.eps not found)
(file ../output/hist_rho_with_imputed.eps written in EPS format)
(bin=30, start=-.00477411, width=.00049025)
(note: file ../output/hist_change_ln_rents.png not found)
(file ../output/hist_change_ln_rents.png written in PNG format)
(note: file ../output/hist_change_ln_rents.eps not found)
(file ../output/hist_change_ln_rents.eps written in EPS format)
(bin=30, start=0, width=.00078091)
(note: file ../output/hist_change_ln_wagebill.png not found)
(file ../output/hist_change_ln_wagebill.png written in PNG format)
(note: file ../output/hist_change_ln_wagebill.eps not found)
(file ../output/hist_change_ln_wagebill.eps written in EPS format)
(bin=30, start=.10888262, width=.01188026)
(note: file ../output/hist_s_imputed.png not found)
(file ../output/hist_s_imputed.png written in PNG format)
(note: file ../output/hist_s_imputed.eps not found)
(file ../output/hist_s_imputed.eps written in EPS format)
(note: file ../output/deciles_diff.png not found)
(file ../output/deciles_diff.png written in PNG format)
(note: file ../output/deciles_diff.eps not found)
(file ../output/deciles_diff.eps written in EPS format)
(note: file ../output/deciles_diff_with_imputed.png not found)
(file ../output/deciles_diff_with_imputed.png written in PNG format)
(note: file ../output/deciles_diff_with_imputed.eps not found)
(file ../output/deciles_diff_with_imputed.eps written in EPS format)

. 
end of do-file


Execute:  R CMD BATCH --no-save "./tables.R" tables.Rout

R version 4.1.1 (2021-08-10) -- "Kick Things"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> remove(list = ls())
> library(data.table)
> 
> main <- function() {
+   instub  <- "../output"
+   outstub <- "../output"
+   
+   dt <- fread(file.path(instub, "data_counterfactuals.csv"))
+   
+   dt_cf <- dt[counterfactual == "fed_9usd" 
+              & year == 2020 
+              & cbsa_low_inc_increase == 0]
+ 
+   txt <- c("<tab:counterfactuals_fed_9usd>")
+ 
+   for (sample in c("fully_affected", "no_direct_treatment")) {
+     
+     dt_sample <- dt_cf[get(sample) == 1]
+     
+     txt <- c(txt, 
+             paste(dim(dt_sample)[1],
+                   mean(dt_sample[["d_mw_res"]], na.rm = T),
+                   mean(dt_sample[["d_mw_wkp"]], na.rm = T),
+                   mean(dt_sample[["s"]],        na.rm = T),
+                   mean(dt_sample[["rho"]],      na.rm = T),
+                   sep = "\t"))
+   }
+ 
+   dt_tot_incidence <- fread(file.path(instub, "tot_incidence.csv"))
+   dt_tot_incidence <- dt_tot_incidence[counterfactual == "fed_9usd"]
+   txt <- c(txt, 
+         paste(dt_tot_incidence$N,
+               dt_tot_incidence$tot_incidence,
+               sep = "\t"))
+   
+   fileConn <- file(file.path(outstub, "counterfactuals_fed_9usd.txt"))
+   writeLines(txt, fileConn)
+   close(fileConn)
+ 
+   txt <- c("<tab:counterfactuals_fed_9usd_imputed>")
+ 
+   for (sample in c("fully_affected", "no_direct_treatment")) {
+     
+     dt_sample <- dt_cf[get(sample) == 1]
+     
+     txt <- c(txt, 
+             paste(dim(dt_sample)[1],
+                   mean(dt_sample[["d_mw_res"]],         na.rm = T),
+                   mean(dt_sample[["d_mw_wkp"]],         na.rm = T),
+                   mean(dt_sample[["s_imputed"]],        na.rm = T),
+                   mean(dt_sample[["rho_with_imputed"]], na.rm = T),
+                   sep = "\t"))
+   }
+   
+   fileConn <- file(file.path(outstub, "counterfactuals_fed_9usd_imputed.txt"))
+   writeLines(txt, fileConn)
+   close(fileConn)
+ 
+   txt <- c("<tab:counterfactuals_other>")
+ 
+   for (cf in c("fed_10pc", "fed_15usd")) {
+     dt_cf <- dt[counterfactual == cf
+                & year == 2020 
+                & cbsa_low_inc_increase == 0]
+ 
+     for (sample in c("fully_affected", "no_direct_treatment")) {
+       
+       dt_sample <- dt_cf[get(sample) == 1]      
+       txt <- c(txt, 
+               paste(dim(dt_sample)[1],
+                     mean(dt_sample[["d_mw_res"]], na.rm = T),
+                     mean(dt_sample[["d_mw_wkp"]], na.rm = T),
+                     mean(dt_sample[["s"]],        na.rm = T),
+                     mean(dt_sample[["rho"]],      na.rm = T),
+                     sep = "\t"))
+     }
+     
+     dt_tot_incidence <- fread(file.path(instub, "tot_incidence.csv"))
+     dt_tot_incidence <- dt_tot_incidence[counterfactual == cf]
+     txt <- c(txt, 
+              paste(dt_tot_incidence$N,
+                    dt_tot_incidence$tot_incidence,
+                    sep = "\t"))
+   }
+   
+ 
+   
+   
+   fileConn <- file(file.path(outstub, "counterfactuals_other.txt"))
+   writeLines(txt, fileConn)
+   close(fileConn)
+ }
> 
> 
> main()
> 
> proc.time()
   user  system elapsed 
   0.60    0.21    0.71 


Execute:  R CMD BATCH --no-save "./map_cfs.R" map_cfs.Rout

R version 4.1.1 (2021-08-10) -- "Kick Things"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> remove(list = ls())
> 
> library(data.table)
> library(sf)
Linking to GEOS 3.9.1, GDAL 3.2.1, PROJ 7.2.1
> library(dplyr)

Attaching package: 'dplyr'

The following objects are masked from 'package:data.table':

    between, first, last

The following objects are masked from 'package:stats':

    filter, lag

The following objects are masked from 'package:base':

    intersect, setdiff, setequal, union

> library(spData)
To access larger datasets in this package, install the spDataLarge
package with: `install.packages('spDataLarge',
repos='https://nowosad.github.io/drat/', type='source')`
> library(tmap)
> library(tmaptools)
> library(ggplot2)
> 
> main <- function(){
+   in_map  <- "../../../drive/raw_data/shapefiles/USPS_zipcodes"
+   in_data <- "../output/"
+ 
+   USPS_zipcodes <- read_sf(dsn = in_map, 
+                            layer = "USPS_zipcodes_July2020") %>%
+     select(ZIP_CODE, PO_NAME, STATE, POPULATION, SQMI, POP_SQMI) %>%
+     rename(zipcode = ZIP_CODE, zipcode_name = PO_NAME,
+            state_name = STATE)
+   
+   df_all <- fread(file.path(in_data, "data_counterfactuals.csv"),
+                   colClasses = c(zipcode = "character")) %>%
+     filter(counterfactual == "fed_9usd",
+            year           == 2020)
+ 
+   df_all <- left_join(USPS_zipcodes, df_all, by = "zipcode")
+ 
+   df_chicago <- df_all %>% filter(cbsa == 16980)
+ 
+   max_break_mw <- round(max(df_chicago$d_mw_res, na.rm = TRUE), digits = 2)
+   
+   build_map(data = df_chicago, 
+             var = "d_mw_res", 
+             var_legend ="Change in\nresidence MW", 
+             break_values = c(0, max_break_mw/2, max_break_mw), 
+             map_name = "chicago_d_mw_res")
+   
+   build_map(data = df_chicago, 
+             var = "d_mw_wkp", 
+             var_legend ="Change in\nworkplace MW", 
+             break_values = c(0, max_break_mw/2, max_break_mw), 
+             map_name = "chicago_d_mw_wkp")
+   
+   min_break_rents <- round(min(df_chicago$change_ln_rents, na.rm = TRUE), digits = 2)
+   max_break_rents <- round(max(df_chicago$change_ln_rents, na.rm = TRUE), digits = 2)
+   
+   build_map(data = df_chicago, 
+             var = "change_ln_rents", 
+             var_legend ="Change in log rents\nper sq. foot", 
+             break_values = c(min_break_rents, max_break_rents/2, max_break_rents), 
+             map_name = "chicago_d_ln_rents")
+ 
+   min_break_wagebill <- round(min(df_chicago$change_ln_wagebill, na.rm = TRUE), digits = 2)
+   max_break_wagebill <- round(max(df_chicago$change_ln_wagebill, na.rm = TRUE), digits = 2)
+   
+   build_map(data = df_chicago, 
+             var = "change_ln_wagebill", 
+             var_legend ="Change in\nlog total wages", 
+             break_values = c(min_break_wagebill, max_break_wagebill/2, max_break_wagebill), 
+             map_name = "chicago_d_ln_wagebill")
+ 
+   min_break_s_imputed <- round(min(df_chicago$s_imputed, na.rm = TRUE), digits = 2)
+   max_break_s_imputed <- round(max(df_chicago$s_imputed, na.rm = TRUE), digits = 2)
+   
+   build_map(data = df_chicago, 
+             var = "s_imputed", 
+             var_legend ="Share of expenditure in housing", 
+             break_values = c(min_break_s_imputed, max_break_s_imputed/2, max_break_s_imputed), 
+             map_name = "chicago_s_imputed")
+ 
+   min_break_rho_with_imputed <- round(min(df_chicago$rho_with_imputed, na.rm = TRUE), digits = 2)
+   max_break_rho_with_imputed <- round(max(df_chicago$rho_with_imputed, na.rm = TRUE), digits = 2)
+   
+   build_map(data = df_chicago, 
+             var = "rho_with_imputed", 
+             var_legend ="Share pocketed\nby landlords", 
+             break_values = c(min_break_rho_with_imputed, max_break_rho_with_imputed/2, max_break_rho_with_imputed), 
+             map_name = "chicago_rho_with_imputed")
+ }
> 
> build_map <- function(data, var, var_legend, break_values,
+                       map_name, .dpi = 250) {
+   
+   map <- tm_shape(data) + 
+     tm_fill(col = var,
+             title = var_legend,
+             style = "cont",
+             palette = c("#A6E1F4", "#077187"),
+             breaks = break_values,
+             textNA = "NA") +
+     tm_borders(col = "white", lwd = .01, alpha = 0.7) +
+     tm_layout(legend.position = c("left", "bottom"),
+             frame = FALSE)
+   
+   tmap_save(map, 
+             paste0("../output/", map_name, ".png"),
+             dpi = .dpi)
+   tmap_save(map, 
+             paste0("../output/", map_name, ".eps"))
+ }
> 
> main()
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\counterfactuals\output\chicago_d_mw_res.png
Resolution: 1529.333 by 2002.507 pixels
Size: 6.117331 by 8.010029 inches (250 dpi)
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\counterfactuals\output\chicago_d_mw_res.eps
Size: 6.117331 by 8.010029 inches
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\counterfactuals\output\chicago_d_mw_wkp.png
Resolution: 1529.333 by 2002.507 pixels
Size: 6.117331 by 8.010029 inches (250 dpi)
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\counterfactuals\output\chicago_d_mw_wkp.eps
Size: 6.117331 by 8.010029 inches
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\counterfactuals\output\chicago_d_ln_rents.png
Resolution: 1529.333 by 2002.507 pixels
Size: 6.117331 by 8.010029 inches (250 dpi)
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\counterfactuals\output\chicago_d_ln_rents.eps
Size: 6.117331 by 8.010029 inches
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\counterfactuals\output\chicago_d_ln_wagebill.png
Resolution: 1529.333 by 2002.507 pixels
Size: 6.117331 by 8.010029 inches (250 dpi)
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\counterfactuals\output\chicago_d_ln_wagebill.eps
Size: 6.117331 by 8.010029 inches
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\counterfactuals\output\chicago_s_imputed.png
Resolution: 1529.333 by 2002.507 pixels
Size: 6.117331 by 8.010029 inches (250 dpi)
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\counterfactuals\output\chicago_s_imputed.eps
Size: 6.117331 by 8.010029 inches
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\counterfactuals\output\chicago_rho_with_imputed.png
Resolution: 1529.333 by 2002.507 pixels
Size: 6.117331 by 8.010029 inches (250 dpi)
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\counterfactuals\output\chicago_rho_with_imputed.eps
Size: 6.117331 by 8.010029 inches
There were 22 warnings (use warnings() to see them)
> 
> proc.time()
   user  system elapsed 
  65.87   47.34  115.87 

 make.py ended: 2022-05-25 11:47:00
