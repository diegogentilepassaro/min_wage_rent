
 make.py started: 2021-10-31 17:19:54 C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\predictions\code 




Execute:  StataMP-64 /e do "./predict.do"

  ___  ____  ____  ____  ____ (R)
 /__    /   ____/   /   ____/
___/   /   /___/   /   /___/   15.1   Copyright 1985-2017 StataCorp LLC
  Statistics/Data Analysis            StataCorp
                                      4905 Lakeway Drive
     MP - Parallel Edition            College Station, Texas 77845 USA
                                      800-STATA-PC        http://www.stata.com
                                      979-696-4600        stata@stata.com
                                      979-696-4601 (fax)

Single-user 32-core Stata perpetual license:
       Serial number:  501506205566
         Licensed to:  KU Leuven FEB (CES)
                       KU Leuven

Notes:
      1.  Stata is running in batch mode.
      2.  Unicode is supported; see help unicode_advice.
      3.  More than 2 billion observations are allowed; see help obs_advice.
      4.  Maximum number of variables is set to 5000; see help set_maxvar.

. do ./predict.do 

. clear all

. set more off

. adopath + ../../../lib/stata/gslab_misc/ado
  [1]  (BASE)      "C:\Program Files\Stata15\ado\base/"
  [2]  (SITE)      "C:\Program Files\Stata15\ado\site/"
  [3]              "."
  [4]  (PERSONAL)  "c:\ado\personal/"
  [5]  (PLUS)      "c:\ado\plus/"
  [6]  (OLDPLACE)  "c:\ado/"
  [7]              "../../../lib/stata/gslab_misc/ado"

. adopath + ../../../lib/stata/min_wage/ado
  [1]  (BASE)      "C:\Program Files\Stata15\ado\base/"
  [2]  (SITE)      "C:\Program Files\Stata15\ado\site/"
  [3]              "."
  [4]  (PERSONAL)  "c:\ado\personal/"
  [5]  (PLUS)      "c:\ado\plus/"
  [6]  (OLDPLACE)  "c:\ado/"
  [7]              "../../../lib/stata/gslab_misc/ado"
  [8]              "../../../lib/stata/min_wage/ado"

. set maxvar 32000


. 
. program main
  1.     local instub   "../../../drive/derived_large/estimation_samples"
  2.     local outstub  "../output"
  3.     
.     define_controls
  4.     local controls      "`r(economic_controls)'"
  5.     local cluster       "statefips"
  6.     local absorb        "year_month"
  7.     local exp_ln_mw_var "exp_ln_mw_17"
  8.     
.     use zipcode zipcode_num statefips cbsa10 year_month year month ///
>         ln_rents ln_mw `exp_ln_mw_var' `controls' ///
>         using "`instub'/all_zipcode_months.dta", clear
  9. 
.     add_baseline_zipcodes, instub(`instub')
 10.     xtset zipcode_num year_month
 11.     
.     gen d_ln_rents        = D.ln_rents
 12.     gen d_ln_mw           = D.ln_mw
 13.     gen d_`exp_ln_mw_var' = D.`exp_ln_mw_var'
 14.     foreach var of local controls {
 15.             gen d_`var' = `var'[_n] - `var'[_n-1]
 16.         }
 17.     reghdfe d_`exp_ln_mw_var' d_ln_mw ///
>             d_ln_emp* d_ln_estcount* d_ln_avgwwage*, ///
>             absorb(`absorb', savefe)  vce(cluster `cluster') ///
>                 nocons residuals(resid_wkpl_on_res_MW)
 18.     save "`outstub'/residualswkpl_on_res_MW_.dta", replace
 19.         
.     reghdfe d_ln_rents d_ln_mw ///
>             d_ln_emp* d_ln_estcount* d_ln_avgwwage* ///
>         if baseline_sample, absorb(`absorb', savefe) ///
>         vce(cluster `cluster') nocons residuals(resid_resMWonly)
 20.     preserve 
 21.             collapse __hdfe1__, by(year_month)
 22.                 save "../temp/fes.dta", replace
 23.         restore
 24.         drop __hdfe1__
 25.         merge m:1 year_month using "../temp/fes.dta", nogen keep(1 3)
 26.     predict hat_d_ln_rents_resMWonly   if year >= 2018, xb
 27.     gen hatfe_d_ln_rents_resMWonly = hat_d_ln_rents_resMWonly + __hdfe1__ 
> if year >= 2018
 28.     
.     reghdfe d_ln_rents d_`exp_ln_mw_var' d_ln_mw ///
>             d_ln_emp* d_ln_estcount* d_ln_avgwwage* ///
>         if baseline_sample, absorb(`absorb', savefe) ///
>         vce(cluster `cluster') nocons residuals(resid_baseline)
 29.      preserve 
 30.             collapse __hdfe1__, by(year_month)
 31.                 save "../temp/fes.dta", replace
 32.         restore
 33.         drop __hdfe1__
 34.         merge m:1 year_month using "../temp/fes.dta"
 35.     predict hat_d_ln_rents_baseline,   xb
 36.     gen hatfe_d_ln_rents_baseline = hat_d_ln_rents_baseline + __hdfe1__
 37. 
.     keep zipcode cbsa10 year month year_month d_* resid_* hat*
 38.     
.     save             "`outstub'/predictions.dta", replace
 39.     export delimited "`outstub'/predictions.csv", replace
 40. end

. 
. 
. program add_baseline_zipcodes
  1.     syntax, instub(str)
  2. 
.     preserve
  3.         use `instub'/baseline_zipcode_months.dta, clear
  4. 
.         keep if !missing(ln_rents)
  5.         bys  zipcode: keep if _n == 1
  6.         keep zipcode
  7.         gen baseline_sample = 1
  8. 
.         tempfile zipcode_years_baseline
  9.         save    `zipcode_years_baseline'
 10.     restore
 11. 
.     merge m:1 zipcode using `zipcode_years_baseline', keep(1 3) nogen
 12. 
.     replace baseline_sample = 0 if baseline_sample != 1
 13. end

. 
. 
. 
. main
(27,800 observations deleted)
(132,255 observations deleted)
file C:\Users\diegog\AppData\Local\Temp\3\ST_8bdc_000003.tmp saved

    Result                           # of obs.
    -----------------------------------------
    not matched                     4,697,040
        from master                 4,697,040  
        from using                          0  

    matched                           161,400  
    -----------------------------------------
(4,697,040 real changes made)
       panel variable:  zipcode_num (strongly balanced)
        time variable:  year_month, 2010m1 to 2019m12
                delta:  1 month
(4,663,778 missing values generated)
(40,487 missing values generated)
(244,691 missing values generated)
(110,375 missing values generated)
(476,287 missing values generated)
(96,143 missing values generated)
(3,733 missing values generated)
(45,986 missing values generated)
(3,927 missing values generated)
(110,374 missing values generated)
(476,287 missing values generated)
(96,143 missing values generated)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =  4,145,781
Absorbing 1 HDFE group                            F(  10,     50) =     428.33
Statistics robust to heteroskedasticity           Prob > F        =     0.0000
                                                  R-squared       =     0.8315
                                                  Adj R-squared   =     0.8315
                                                  Within R-sq.    =     0.8081
Number of clusters (statefips) =         51       Root MSE        =     0.0039

                             (Std. Err. adjusted for 51 clusters in statefips)
------------------------------------------------------------------------------
             |               Robust
d_exp_ln_~17 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     d_ln_mw |   .7724374    .019829    38.95   0.000     .7326096    .8122652
d_ln_emp_b~v |  -.0004127    .000238    -1.73   0.089    -.0008908    .0000654
d_ln_emp_i~o |   .0000706   .0001269     0.56   0.580    -.0001842    .0003254
d_ln_emp_fin |  -.0005704   .0002632    -2.17   0.035     -.001099   -.0000417
d_ln_estco~v |  -.0009331   .0016262    -0.57   0.569    -.0041994    .0023333
d_ln_estco~o |   .0002286   .0004085     0.56   0.578    -.0005918     .001049
d_ln_estco~n |  -.0008363   .0011423    -0.73   0.468    -.0031307    .0014581
d_ln_avgww~v |   .0001159   .0001877     0.62   0.540    -.0002612     .000493
d_ln_avgww~o |   .0000522   .0001789     0.29   0.772    -.0003071    .0004116
d_ln_avgww~n |   .0002049   .0003524     0.58   0.564    -.0005029    .0009127
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
  year_month |       119           0         119     |
-----------------------------------------------------+
(note: file ../output/residualswkpl_on_res_MW_.dta not found)
file ../output/residualswkpl_on_res_MW_.dta saved
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =    131,196
Absorbing 1 HDFE group                            F(  10,     40) =       4.32
Statistics robust to heteroskedasticity           Prob > F        =     0.0004
                                                  R-squared       =     0.0209
                                                  Adj R-squared   =     0.0200
                                                  Within R-sq.    =     0.0002
Number of clusters (statefips) =         41       Root MSE        =     0.0291

                             (Std. Err. adjusted for 41 clusters in statefips)
------------------------------------------------------------------------------
             |               Robust
  d_ln_rents |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     d_ln_mw |    .026168   .0135651     1.93   0.061     -.001248    .0535841
d_ln_emp_b~v |   .0086522   .0048534     1.78   0.082    -.0011568    .0184612
d_ln_emp_i~o |   .0001944   .0040548     0.05   0.962    -.0080008    .0083895
d_ln_emp_fin |   .0120505   .0053071     2.27   0.029     .0013245    .0227765
d_ln_estco~v |   .0023497    .015327     0.15   0.879    -.0286273    .0333266
d_ln_estco~o |   .0009829   .0053703     0.18   0.856    -.0098709    .0118368
d_ln_estco~n |   .0058454   .0074059     0.79   0.435    -.0091225    .0208132
d_ln_avgww~v |   .0026092   .0030356     0.86   0.395    -.0035259    .0087443
d_ln_avgww~o |   -.000068   .0014644    -0.05   0.963    -.0030277    .0028916
d_ln_avgww~n |  -.0019091   .0010816    -1.77   0.085    -.0040951    .0002769
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
  year_month |       118           0         118     |
-----------------------------------------------------+
(note: file ../temp/fes.dta not found)
file ../temp/fes.dta saved

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                         4,858,440  
    -----------------------------------------
(3,988,341 missing values generated)
(3,988,341 missing values generated)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =    131,196
Absorbing 1 HDFE group                            F(  11,     40) =       4.10
Statistics robust to heteroskedasticity           Prob > F        =     0.0005
                                                  R-squared       =     0.0209
                                                  Adj R-squared   =     0.0200
                                                  Within R-sq.    =     0.0002
Number of clusters (statefips) =         41       Root MSE        =     0.0291

                             (Std. Err. adjusted for 41 clusters in statefips)
------------------------------------------------------------------------------
             |               Robust
  d_ln_rents |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
d_exp_ln_~17 |   .0578566   .0284044     2.04   0.048     .0004492     .115264
     d_ln_mw |  -.0240557   .0179567    -1.34   0.188    -.0603476    .0122363
d_ln_emp_b~v |   .0086972   .0048447     1.80   0.080    -.0010942    .0184886
d_ln_emp_i~o |   .0001521   .0040748     0.04   0.970    -.0080834    .0083875
d_ln_emp_fin |   .0122128   .0052629     2.32   0.025     .0015761    .0228496
d_ln_estco~v |   .0029036   .0151918     0.19   0.849    -.0278002    .0336074
d_ln_estco~o |   .0009193    .005373     0.17   0.865      -.00994    .0117785
d_ln_estco~n |   .0055263   .0072781     0.76   0.452    -.0091832    .0202359
d_ln_avgww~v |   .0027036   .0030244     0.89   0.377    -.0034091    .0088162
d_ln_avgww~o |  -.0000425    .001474    -0.03   0.977    -.0030216    .0029367
d_ln_avgww~n |  -.0019831    .001101    -1.80   0.079    -.0042082    .0002421
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
  year_month |       118           0         118     |
-----------------------------------------------------+
file ../temp/fes.dta saved

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                         4,858,440  (_merge==3)
    -----------------------------------------
(712,659 missing values generated)
(748,074 missing values generated)
(note: file ../output/predictions.dta not found)
file ../output/predictions.dta saved
(note: file ../output/predictions.csv not found)
file ../output/predictions.csv saved

. 
end of do-file


Execute:  R CMD BATCH --no-save "./maps.R" maps.Rout

R version 4.1.1 (2021-08-10) -- "Kick Things"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> remove(list = ls())
> 
> library(sf)
Linking to GEOS 3.9.1, GDAL 3.2.1, PROJ 7.2.1
> library(dplyr)

Attaching package: 'dplyr'

The following objects are masked from 'package:stats':

    filter, lag

The following objects are masked from 'package:base':

    intersect, setdiff, setequal, union

> library(spData)
To access larger datasets in this package, install the spDataLarge
package with: `install.packages('spDataLarge',
repos='https://nowosad.github.io/drat/', type='source')`
> library(tmap)
> library(tmaptools)
> library(leaflet)
> library(ggplot2)
> 
> main <- function(){
+   in_map  <- "../../../drive/raw_data/shapefiles/USPS_zipcodes"
+   in_data <- "../output"
+   
+   df_all <- prepare_data(in_map, in_data)
+   
+   events <- list(list("chicago",   16980, 2019, 7),
+                  list("san_diego", 41740, 2019, 1),
+                  list("seattle",   42660, 2019, 1),
+                  list("nyc",       35620, 2019, 1),
+                  list("kc",        28140, 2019, 1),
+                  list("bay_area",  41860, 2019, 1))
+                  # Name CBSA10, Code CBSA10, change date
+     # "d_ln_rents", 
+   rent_vars <- c("hat_d_ln_rents_resMWonly", "hatfe_d_ln_rents_resMWonly",
+                  "hat_d_ln_rents_baseline", "hatfe_d_ln_rents_baseline")
+   resid_vars <- c("resid_resMWonly", "resid_baseline", "resid_wkpl_on_res_MW")
+   
+   for (event in events) {
+     
+     df <- df_all %>%
+       filter(cbsa10 == event[[2]], year == event[[3]], month == event[[4]])
+     
+     df <- st_sf(df)
+     df <- df %>% filter(!st_is_empty(.))
+     
+     min_rent <- round(min(unlist(lapply(rent_vars, function(x) min(df[[x]], na.rm = T)))), digits = 3)
+     max_rent <- round(max(unlist(lapply(rent_vars, function(x) max(df[[x]], na.rm = T)))), digits = 3)
+     
+     for (var in rent_vars) {
+       breaks   <- c(min_rent, round((min_rent + max_rent)/2, digits = 3), max_rent)
+       filename <- paste0(event[[1]], "_", event[[3]], "-", event[[4]], "_", var)
+       
+       build_map(df, var, get_ylab(var), breaks, filename)
+     }
+     
+     min_resid <- round(min(unlist(lapply(resid_vars, function(x) min(df[[x]], na.rm = T)))), digits = 3)
+     max_resid <- round(max(unlist(lapply(resid_vars, function(x) max(df[[x]], na.rm = T)))), digits = 3)
+     
+     for (var in resid_vars) {
+       breaks   <- c(min_resid, round((min_resid + max_resid)/2, digits = 3), max_resid)
+       filename <- paste0(event[[1]], "_", event[[3]], "-", event[[4]], "_", var)
+       
+       build_map(df, var, "Change in\nresidual", breaks, filename)
+     }
+   }
+ }
> 
> prepare_data <- function(in_map, in_data) {
+   
+   USPS_zipcodes <- read_sf(dsn = in_map, 
+                            layer = "USPS_zipcodes_July2020") %>%
+     select(ZIP_CODE) %>% rename(zipcode = ZIP_CODE)
+   
+   pred_data <- data.table::fread(file.path(in_data, "predictions.csv"),
+                                  colClasses = c(zipcode ="character", cbsa10 = "character"))
+   
+   resid_vars <- names(pred_data)[grepl("resid", names(pred_data))]
+   rent_vars  <- names(pred_data)[grepl("rents",   names(pred_data))]
+   
+   pred_data <- pred_data %>%
+     select_at(c("zipcode", "cbsa10", "year", "month", "d_ln_rents", 
+                 "d_ln_mw", "d_exp_ln_mw_17", resid_vars, rent_vars))
+   
+   left_join(USPS_zipcodes, pred_data, by = "zipcode")
+ }
> 
> get_ylab <- function(var) {
+   if (var == "d_ln_rents") return("Change in\nlog rents")
+   if (var %in% c("hat_d_ln_rents_resMWonly", "hatfe_d_ln_rents_resMWonly",
+                  "hat_d_ln_rents_baseline", "hatfe_d_ln_rents_baseline")) {
+     return("Pred. Chg. in\nlog rents")
+   }
+ }
> 
> build_map <- function(df, var, var_legend, break_values,
+                       map_name, .dpi = 250){
+   
+   map <- tm_shape(df) + 
+     tm_fill(col = var,
+             title = var_legend,
+             style = "cont",
+             palette = c("#A6E1F4", "#077187"),
+             breaks = break_values,
+             textNA = "NA") +
+     tm_borders(col = "white", lwd = .01, alpha = 0.7) +
+     tm_layout(legend.position = c("left", "bottom"))
+   
+   tmap_save(map, 
+             paste0("../output/", map_name, ".png"),
+             dpi = .dpi)
+ }
> 
> main()
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\predictions\output\chicago_2019-7_hat_d_ln_rents_resMWonly.png
Resolution: 1490.855 by 2054.191 pixels
Size: 5.963419 by 8.216763 inches (250 dpi)
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\predictions\output\chicago_2019-7_hatfe_d_ln_rents_resMWonly.png
Resolution: 1490.855 by 2054.191 pixels
Size: 5.963419 by 8.216763 inches (250 dpi)
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\predictions\output\chicago_2019-7_hat_d_ln_rents_baseline.png
Resolution: 1490.855 by 2054.191 pixels
Size: 5.963419 by 8.216763 inches (250 dpi)
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\predictions\output\chicago_2019-7_hatfe_d_ln_rents_baseline.png
Resolution: 1490.855 by 2054.191 pixels
Size: 5.963419 by 8.216763 inches (250 dpi)
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\predictions\output\chicago_2019-7_resid_resMWonly.png
Resolution: 1490.855 by 2054.191 pixels
Size: 5.963419 by 8.216763 inches (250 dpi)
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\predictions\output\chicago_2019-7_resid_baseline.png
Resolution: 1490.855 by 2054.191 pixels
Size: 5.963419 by 8.216763 inches (250 dpi)
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\predictions\output\chicago_2019-7_resid_wkpl_on_res_MW.png
Resolution: 1490.855 by 2054.191 pixels
Size: 5.963419 by 8.216763 inches (250 dpi)
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\predictions\output\san_diego_2019-1_hat_d_ln_rents_resMWonly.png
Resolution: 2042.837 by 1499.141 pixels
Size: 8.171347 by 5.996563 inches (250 dpi)
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\predictions\output\san_diego_2019-1_hatfe_d_ln_rents_resMWonly.png
Resolution: 2042.837 by 1499.141 pixels
Size: 8.171347 by 5.996563 inches (250 dpi)
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\predictions\output\san_diego_2019-1_hat_d_ln_rents_baseline.png
Resolution: 2042.837 by 1499.141 pixels
Size: 8.171347 by 5.996563 inches (250 dpi)
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\predictions\output\san_diego_2019-1_hatfe_d_ln_rents_baseline.png
Resolution: 2042.837 by 1499.141 pixels
Size: 8.171347 by 5.996563 inches (250 dpi)
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\predictions\output\san_diego_2019-1_resid_resMWonly.png
Resolution: 2042.837 by 1499.141 pixels
Size: 8.171347 by 5.996563 inches (250 dpi)
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\predictions\output\san_diego_2019-1_resid_baseline.png
Resolution: 2042.837 by 1499.141 pixels
Size: 8.171347 by 5.996563 inches (250 dpi)
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\predictions\output\san_diego_2019-1_resid_wkpl_on_res_MW.png
Resolution: 2042.837 by 1499.141 pixels
Size: 8.171347 by 5.996563 inches (250 dpi)
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\predictions\output\seattle_2019-1_hat_d_ln_rents_resMWonly.png
Resolution: 1554.481 by 1970.111 pixels
Size: 6.217924 by 7.880443 inches (250 dpi)
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\predictions\output\seattle_2019-1_hatfe_d_ln_rents_resMWonly.png
Resolution: 1554.481 by 1970.111 pixels
Size: 6.217924 by 7.880443 inches (250 dpi)
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\predictions\output\seattle_2019-1_hat_d_ln_rents_baseline.png
Resolution: 1554.481 by 1970.111 pixels
Size: 6.217924 by 7.880443 inches (250 dpi)
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\predictions\output\seattle_2019-1_hatfe_d_ln_rents_baseline.png
Resolution: 1554.481 by 1970.111 pixels
Size: 6.217924 by 7.880443 inches (250 dpi)
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\predictions\output\seattle_2019-1_resid_resMWonly.png
Resolution: 1554.481 by 1970.111 pixels
Size: 6.217924 by 7.880443 inches (250 dpi)
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\predictions\output\seattle_2019-1_resid_baseline.png
Resolution: 1554.481 by 1970.111 pixels
Size: 6.217924 by 7.880443 inches (250 dpi)
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\predictions\output\seattle_2019-1_resid_wkpl_on_res_MW.png
Resolution: 1554.481 by 1970.111 pixels
Size: 6.217924 by 7.880443 inches (250 dpi)
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\predictions\output\nyc_2019-1_hat_d_ln_rents_resMWonly.png
Resolution: 1979.693 by 1546.957 pixels
Size: 7.918774 by 6.187827 inches (250 dpi)
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\predictions\output\nyc_2019-1_hatfe_d_ln_rents_resMWonly.png
Resolution: 1979.693 by 1546.957 pixels
Size: 7.918774 by 6.187827 inches (250 dpi)
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\predictions\output\nyc_2019-1_hat_d_ln_rents_baseline.png
Resolution: 1979.693 by 1546.957 pixels
Size: 7.918774 by 6.187827 inches (250 dpi)
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\predictions\output\nyc_2019-1_hatfe_d_ln_rents_baseline.png
Resolution: 1979.693 by 1546.957 pixels
Size: 7.918774 by 6.187827 inches (250 dpi)
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\predictions\output\nyc_2019-1_resid_resMWonly.png
Resolution: 1979.693 by 1546.957 pixels
Size: 7.918774 by 6.187827 inches (250 dpi)
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\predictions\output\nyc_2019-1_resid_baseline.png
Resolution: 1979.693 by 1546.957 pixels
Size: 7.918774 by 6.187827 inches (250 dpi)
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\predictions\output\nyc_2019-1_resid_wkpl_on_res_MW.png
Resolution: 1979.693 by 1546.957 pixels
Size: 7.918774 by 6.187827 inches (250 dpi)
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\predictions\output\kc_2019-1_hat_d_ln_rents_resMWonly.png
Resolution: 1586.429 by 1930.437 pixels
Size: 6.345714 by 7.721747 inches (250 dpi)
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\predictions\output\kc_2019-1_hatfe_d_ln_rents_resMWonly.png
Resolution: 1586.429 by 1930.437 pixels
Size: 6.345714 by 7.721747 inches (250 dpi)
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\predictions\output\kc_2019-1_hat_d_ln_rents_baseline.png
Resolution: 1586.429 by 1930.437 pixels
Size: 6.345714 by 7.721747 inches (250 dpi)
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\predictions\output\kc_2019-1_hatfe_d_ln_rents_baseline.png
Resolution: 1586.429 by 1930.437 pixels
Size: 6.345714 by 7.721747 inches (250 dpi)
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\predictions\output\kc_2019-1_resid_resMWonly.png
Resolution: 1586.429 by 1930.437 pixels
Size: 6.345714 by 7.721747 inches (250 dpi)
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\predictions\output\kc_2019-1_resid_baseline.png
Resolution: 1586.429 by 1930.437 pixels
Size: 6.345714 by 7.721747 inches (250 dpi)
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\predictions\output\kc_2019-1_resid_wkpl_on_res_MW.png
Resolution: 1586.429 by 1930.437 pixels
Size: 6.345714 by 7.721747 inches (250 dpi)
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\predictions\output\bay_area_2019-1_hat_d_ln_rents_resMWonly.png
Resolution: 1821.214 by 1681.571 pixels
Size: 7.284854 by 6.726284 inches (250 dpi)
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\predictions\output\bay_area_2019-1_hatfe_d_ln_rents_resMWonly.png
Resolution: 1821.214 by 1681.571 pixels
Size: 7.284854 by 6.726284 inches (250 dpi)
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\predictions\output\bay_area_2019-1_hat_d_ln_rents_baseline.png
Resolution: 1821.214 by 1681.571 pixels
Size: 7.284854 by 6.726284 inches (250 dpi)
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\predictions\output\bay_area_2019-1_hatfe_d_ln_rents_baseline.png
Resolution: 1821.214 by 1681.571 pixels
Size: 7.284854 by 6.726284 inches (250 dpi)
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\predictions\output\bay_area_2019-1_resid_resMWonly.png
Resolution: 1821.214 by 1681.571 pixels
Size: 7.284854 by 6.726284 inches (250 dpi)
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\predictions\output\bay_area_2019-1_resid_baseline.png
Resolution: 1821.214 by 1681.571 pixels
Size: 7.284854 by 6.726284 inches (250 dpi)
Map saved to C:\Users\diegog\Desktop\Diego\min_wage_rent\analysis\predictions\output\bay_area_2019-1_resid_wkpl_on_res_MW.png
Resolution: 1821.214 by 1681.571 pixels
Size: 7.284854 by 6.726284 inches (250 dpi)
There were 50 or more warnings (use warnings() to see the first 50)
> 
> proc.time()
   user  system elapsed 
 327.29  371.84  698.84 

 make.py ended: 2021-10-31 17:42:18
